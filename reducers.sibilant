(require! lodash-object "lodash/object"
          initial-state "./initial-state.sibilant"
          { DISPLAY_REPL SET_FILTER
            DISPLAY_JS DISPLAY_SIBILANT } "./actions.sibilant")


(var *assign lodash-object.assign
     reducers module.exports)

(each-key attribute initial-state
          (set reducers attribute
               (#(state action)
                  (default state (get initial-state attribute)))))

(def reducers.filter (state action)
     (default state false)
     (if (= action.type SET_FILTER)
         (or action.filter false)
         state))

(def reducers.repl (state action)
     (default state initial-state.repl)
     (var merge-state (#> (*assign {} state #0)))
     
     (if (= action.type DISPLAY_JS)
         (merge-state { compiling false
                        js-string action.js-string })

         (= action.type DISPLAY_REPL)
         (merge-state { visibility action.visibility })

         (= action.type DISPLAY_SIBILANT)
         (merge-state { compiling true
                        sibilant-string action.sibilant-string })

         state))

