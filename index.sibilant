(include "./macros.sibilant")
(import-namespace react)

(require!
 { create-store combine-reducers compose apply-middleware } 'redux
 "redux-thunk"
 "react-router"
 'react
 { render } "react-dom"
 { router-middleware sync-history-with-store router-reducer } "react-router-redux"
 lodash-object "lodash/object"
 reducers "./reducers.sibilant")

(import-classes!
 {App} "./containers/app.sibilant"
 {Provider} "react-redux"
 {Router Route} react-router)

(var { browser-history } react-router
     redux-thunk redux-thunk.default
     *assign lodash-object.assign
     root-element (document.get-element-by-id 'app)
     reducer (combine-reducers (*assign {} reducers { routing router-reducer }))
     devtool (if window.dev-tools-extension
                 (window.dev-tools-extension)
                 (#(f) f))
     store (create-store reducer
                         (compose
                          (apply-middleware redux-thunk (router-middleware browser-history))
                          devtool))
     history (sync-history-with-store browser-history store))

(render (Provider store&
                  (Router history&
                          (Route path "/" component App)
                          (Route path "/:filter" component App)))
        root-element)
