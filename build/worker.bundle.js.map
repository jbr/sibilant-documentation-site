{"version":3,"sources":["webpack:///worker.bundle.js","webpack:///webpack/bootstrap a5b2c3e334441e3bab22?ddb7","webpack:///worker.sibilant","webpack:///include/macros.sibilant?8191","webpack:///./~/sibilant/lib/browser.js","webpack:///./~/strip-ansi/index.js","webpack:///./~/ansi-regex/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p",0,"commands","sibilant","sibilize","sibilantCode","onMessage","e","identifier","data","command","commandFn","returnValue","result","apply","this","error","message","postMessage","onmessage",759,"str","inspect","item","toSource","toString","bulkMap","arr","fn","index","groupSize","length","retArr","$_symbol1_$","undefined","push","slice","inject","start","items","value","constructor","name","forEach","map","collector","select","detect","returnItem","$_symbol2_$","all__QUERY","none__QUERY","any__QUERY","reject","arguments","compact","interleave","glue","temp","concat","flatten","Array","prototype","recurseMap","subitem","pluck","attribute","mergeInto","into","from","Object","keys","key","clone","object","mapValues","mergeWith","log__BANG","args","inspect__BANG","console","log","util","colors","depth","color","code","join","black","red","green","brown","blue","purple","cyan","gray","boldGray","boldRed","boldGreen","yellow","boldBlue","boldPurple","boldCyan","white","prettyPrint","node","entry","realNewlines","node__QUERY","prettyPrinter","type","prettify","mapPretty","attr","colorize","token","closed","acceptablePairs","root","contents","output","split","string","hint","outputFormatter","transpile","$_symbol3_$","$_symbol4_$","parser","tokens","regex","comment","number","literal","special","at","tick","hat","dots","argPlaceholder","otherChar","openExpression","closeExpression","newline","whitespace","ignored","tokenPrecedence","orderedRegexes","x","RegExp","parse","context","position","stack","line","lastNewline","col","match","regexName","remainingInput","$_symbol5_$","r","exec","matchString","dir","file","indexOf","stringNewlineCount","lastIndexOf","restructurers","(","[","{","bracketTypes","restructure","input","parseStack","ignoredTokens","specials","restructurer","unclosedNode","Error","first","acceptIgnoredTokens","acceptSpecials","unshift","end","closingIgnored","shift","closeSpecials","openSpecial","precedingIgnored","accumulateIgnoredToken","coreNamespace","macroNamespaces","core","state","macros","namespaces","defaultSearchPath","searchPath","namespace","currentNamespace","resolveMacro","macroName","pathComponents","macro","hasOwnProperty","withDefaultSearchPath","searchPathBefore","ternary","cond","ifTrue","ifFalse","set","kvPairs","k","v","asStatement","pairs","get","obj","aliasMacro","currentMacroName","newMacroName","send","method","arglist","cons","rest","append","list","additional","scoped","body","second","third","last","a","b","or","and","mod","jsComparator","incrBy","increment","incr","decr","pattern","flags","thing","things","arg","truebody","falsebody","indent","pipe","calls","cloned","placeholder","placeholderIndex","placeholderBoundaries","content","replace","transpiled","when","condition","not","exp","unless","assign","logPretty","label","prettyLog","each","array","macroExpand","asBoolean","expr","tryblock","catchblock","state$","eval","symbol","symbolCount","newSymbolCount","until","regexp","replacement","replaceAll","thunk","lambdaOptions","mapNode","pipeThunk","objects","deleteMacro","macroNames","delmacro","renameMacro","argument","eachKey","as","cases","caseDef","caseNameNode","caseLabels","caseString","alternatingConditionsAndBranches","val","chain","lines","recurseIndent","haystack","needle","withState","before","parens","destructured","lhs","rhs","transpiledRhs","literalRhs__QUERY","source","trItem","pair","importNamespace","namespaceAsString","sourceMappingUrl","sourceMappingUrl$","url","sortBy","arrayOfObjects","requires","localVars","reduce","acc","quote","debug","defaultReturn","nonReturnPart","returnPart","emptyList","def","nameTr","thisNode","docs","record","lambda","macro$","options","js","evaledJs","meta","meta$","reverse","reversed","argsOrOptions","n","quotedHash","cachedQuoteValue","quoteHashKeys","hash","quoteKeys","pairStrings","unquotes","findUnquotes","qescape","replace__BANG","debug$","argSegments","simpleList","segment","fnName","include","include$","files","docs$","optionsString","optionsHash","pop","listAttribute","examples","example","tags","docString","lastDoc","definitions","undocumented","doc","definition","counts","tag","text","docs$text$","references","textNoColor","stripAnsi","json","JSON","stringify","description","javascript","tap","escapeRegex","mappedNode","eachNode","statement__QUERY","emptyNode__QUERY","unquote__QUERY","nodeId","spliceDots","alternatingKeysAndValues","mapNodeForQuoteExpansion","expansions","types","compactNode","compacted","recurseTranspile","preprocessor","transpiler","resultNode","readerMacros","$_symbol6_$","parseFloat","expression","head","resolvedMacro","bracket","brace","returnString","toUpperCase","sourcemap","sourcemapper","version","packageInfo","stripShebang","withDirAndFile","retval","sourceCache","sibilizeFile","fileName","transpileFile","sibilizeJson","package","keywords","contributors","repository","bugs","mail","bin","main","license","devDependencies","stool","diff","strip-ansi","cardinal","dependencies","source-map","source-map-support","scripts","test","versionString","initialize","evalCode","Function","$","done","makeArray","src",760,"ansiRegex",761],"mappings":"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","file":"worker.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar commands = {  },\n\t    sibilant = (__webpack_require__(759)).sibilant;\n\tcommands.sibilize = (function commands$sibilize$(sibilantCode) {\n\t  /* commands.sibilize worker.sibilant:4:0 */\n\t\n\t  return sibilant.sibilize(sibilantCode);\n\t});\n\tvar onMessage = (function onMessage$(e) {\n\t  /* on-message worker.sibilant:7:0 */\n\t\n\t  var identifier = e.data[0],\n\t      command = e.data[1],\n\t      data = e.data[2],\n\t      commandFn = commands[command],\n\t      returnValue = {  };\n\t  (function() {\n\t    try {\n\t      return returnValue.result = commandFn.apply(this, data);\n\t    } catch (e) {\n\t      return returnValue.error = e.message;\n\t    }\n\t  }).call(this);\n\t  return postMessage([ identifier, returnValue ]);\n\t});\n\tonmessage = onMessage;\n\n/***/ },\n\n/***/ 759:\n/***/ function(module, exports, __webpack_require__) {\n\n\t//# sourceMappingURL=../maps/browser.map\n\t;\n\tthis.sibilant = (function() {\n\t  /* src/browser.sibilant:4:5 */\n\t\n\t  var sibilant = {  },\n\t      exports = sibilant;\n\t  var error = (function error$(str) {\n\t    /* error src/browser.sibilant:6:6 */\n\t  \n\t    throw str\n\t  });\n\t  var inspect = (function inspect$(item) {\n\t    /* inspect src/browser.sibilant:7:6 */\n\t  \n\t    return (function() {\n\t      if (item.toSource) {\n\t        return item.toSource();\n\t      } else {\n\t        return item.toString();\n\t      }\n\t    }).call(this);\n\t  });\n\t  var bulkMap = (function bulkMap$(arr, fn) {\n\t    /* bulk-map include/functional.sibilant:1:0 */\n\t  \n\t    var index = 0,\n\t        groupSize = fn.length,\n\t        retArr = [];\n\t    (function() {\n\t      var $_symbol1_$ = undefined;\n\t      while (index < arr.length) {\n\t        $_symbol1_$ = (function() {\n\t          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n\t          return index += groupSize;\n\t        }).call(this);\n\t      };\n\t      return $_symbol1_$;\n\t    }).call(this);\n\t    return retArr;\n\t  });\n\t  var inject = (function inject$(start, items, fn) {\n\t    /* inject include/functional.sibilant:13:0 */\n\t  \n\t    var value = start;\n\t    (function() {\n\t      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n\t        return items.forEach((function(item, index) {\n\t          /* include/functional.sibilant:16:4 */\n\t        \n\t          return value = fn(value, item, index);\n\t        }));\n\t      }\n\t    }).call(this);\n\t    return value;\n\t  });\n\t  var map = (function map$(items, fn) {\n\t    /* map include/functional.sibilant:20:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* include/functional.sibilant:22:10 */\n\t    \n\t      collector.push(fn(item, index));\n\t      return collector;\n\t    }));\n\t  });\n\t  var select = (function select$(items, fn) {\n\t    /* select include/functional.sibilant:26:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* include/functional.sibilant:28:10 */\n\t    \n\t      (function() {\n\t        if (fn(item, index)) {\n\t          return collector.push(item);\n\t        }\n\t      }).call(this);\n\t      return collector;\n\t    }));\n\t  });\n\t  var detect = (function detect$(items, fn) {\n\t    /* detect include/functional.sibilant:33:0 */\n\t  \n\t    var returnItem = undefined,\n\t        index = 0,\n\t        items = (items || []);\n\t    (function() {\n\t      var $_symbol2_$ = undefined;\n\t      while (!((items.length === index || returnItem))) {\n\t        $_symbol2_$ = (function() {\n\t          (function() {\n\t            if (fn(items[index], index)) {\n\t              return returnItem = items[index];\n\t            }\n\t          }).call(this);\n\t          return ((index)++);\n\t        }).call(this);\n\t      };\n\t      return $_symbol2_$;\n\t    }).call(this);\n\t    return returnItem;\n\t  });\n\t  var all__QUERY = (function all__QUERY$(items, fn) {\n\t    /* all? include/functional.sibilant:45:0 */\n\t  \n\t    return typeof detect(items, (function(item, index) {\n\t      /* include/functional.sibilant:46:31 */\n\t    \n\t      return !(fn(item, index));\n\t    })) === \"undefined\";\n\t  });\n\t  var none__QUERY = (function none__QUERY$(items, fn) {\n\t    /* none? include/functional.sibilant:48:0 */\n\t  \n\t    return typeof detect(items, fn) === \"undefined\";\n\t  });\n\t  var any__QUERY = (function any__QUERY$(items, fn) {\n\t    /* any? include/functional.sibilant:51:0 */\n\t  \n\t    return typeof detect(items, fn) !== \"undefined\";\n\t  });\n\t  var reject = (function reject$(items, fn) {\n\t    /* reject include/functional.sibilant:54:0 */\n\t  \n\t    var args = [ items, fn ];\n\t    return select(items, (function() {\n\t      /* include/functional.sibilant:56:16 */\n\t    \n\t      return !(fn.apply(this, arguments));\n\t    }));\n\t  });\n\t  var compact = (function compact$(arr) {\n\t    /* compact include/functional.sibilant:58:0 */\n\t  \n\t    return select(arr, (function(item) {\n\t      /* include/functional.sibilant:59:17 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var interleave = (function interleave$(glue, arr) {\n\t    /* interleave include/functional.sibilant:65:0 */\n\t  \n\t    (function() {\n\t      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n\t        var temp = glue;\n\t        glue = arr;\n\t        return arr = temp;\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n\t        return inject([], arr, (function(collector, item, index) {\n\t          /* include/functional.sibilant:71:13 */\n\t        \n\t          return collector.concat([ item, glue[index] ]);\n\t        }));\n\t      } else {\n\t        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n\t          /* include/functional.sibilant:75:13 */\n\t        \n\t          return collector.concat([ glue, item ]);\n\t        }));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatten = (function flatten$(items) {\n\t    /* flatten include/functional.sibilant:78:0 */\n\t  \n\t    var items = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inject([], items, (function(collector, item) {\n\t      /* include/functional.sibilant:80:10 */\n\t    \n\t      return collector.concat((function() {\n\t        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t          return flatten.apply(this, item);\n\t        } else {\n\t          return item;\n\t        }\n\t      }).call(this));\n\t    }));\n\t  });\n\t  var recurseMap = (function recurseMap$(item, fn) {\n\t    /* recurse-map include/functional.sibilant:87:0 */\n\t  \n\t    return (function() {\n\t      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        return map(item, (function(subitem) {\n\t          /* include/functional.sibilant:88:32 */\n\t        \n\t          return recurseMap(subitem, fn);\n\t        }));\n\t      } else {\n\t        return fn(item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var pluck = (function pluck$(items, attribute) {\n\t    /* pluck include/functional.sibilant:91:0 */\n\t  \n\t    return map(items, (function(item) {\n\t      /* include/functional.sibilant:92:16 */\n\t    \n\t      return item[attribute];\n\t    }));\n\t  });\n\t  var mergeInto = (function mergeInto$(into, from) {\n\t    /* merge-into include/functional.sibilant:94:0 */\n\t  \n\t    Object.keys(from).forEach((function(key) {\n\t      /* include/functional.sibilant:95:5 */\n\t    \n\t      return into[key] = from[key];\n\t    }));\n\t    return into;\n\t  });\n\t  var clone = (function clone$(object) {\n\t    /* clone include/functional.sibilant:98:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key) {\n\t      /* include/functional.sibilant:100:13 */\n\t    \n\t      collector[key] = object[key];\n\t      return collector;\n\t    }));\n\t  });\n\t  var mapValues = (function mapValues$(object, fn) {\n\t    /* map-values include/functional.sibilant:104:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key, index) {\n\t      /* include/functional.sibilant:106:13 */\n\t    \n\t      collector[key] = fn(object[key], key);\n\t      return collector;\n\t    }));\n\t  });\n\t  var mergeWith = (function mergeWith$(into, from) {\n\t    /* merge-with include/functional.sibilant:110:0 */\n\t  \n\t    return mergeInto(clone(into), from);\n\t  });\n\t  var log__BANG = (function log__BANG$(args) {\n\t    /* log! src/colors.sibilant:1:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inspect__BANG.apply(this, args).forEach((function() {\n\t      /* src/colors.sibilant:2:35 */\n\t    \n\t      return console.log(arguments[0]);\n\t    }));\n\t  });\n\t  var inspect__BANG = (function inspect__BANG$(args) {\n\t    /* inspect! src/colors.sibilant:4:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return args.map((function() {\n\t      /* src/colors.sibilant:5:15 */\n\t    \n\t      return util.inspect(arguments[0], {\n\t        colors: false,\n\t        depth: 3\n\t      });\n\t    }));\n\t  });\n\t  var color = (function color$(code, items, depth) {\n\t    /* color src/colors.sibilant:7:0 */\n\t  \n\t    return (code + items.join(\"\") + \"\\033[0m\");\n\t  });\n\t  var black = (function black$(args) {\n\t    /* black src/colors.sibilant:10:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;30m\", args);\n\t  });\n\t  var red = (function red$(args) {\n\t    /* red src/colors.sibilant:11:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;31m\", args);\n\t  });\n\t  var green = (function green$(args) {\n\t    /* green src/colors.sibilant:12:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;32m\", args);\n\t  });\n\t  var brown = (function brown$(args) {\n\t    /* brown src/colors.sibilant:13:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;33m\", args);\n\t  });\n\t  var blue = (function blue$(args) {\n\t    /* blue src/colors.sibilant:14:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;34m\", args);\n\t  });\n\t  var purple = (function purple$(args) {\n\t    /* purple src/colors.sibilant:15:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;35m\", args);\n\t  });\n\t  var cyan = (function cyan$(args) {\n\t    /* cyan src/colors.sibilant:16:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;36m\", args);\n\t  });\n\t  var gray = (function gray$(args) {\n\t    /* gray src/colors.sibilant:17:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;37m\", args);\n\t  });\n\t  var boldGray = (function boldGray$(args) {\n\t    /* bold-gray src/colors.sibilant:18:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;30m\", args);\n\t  });\n\t  var boldRed = (function boldRed$(args) {\n\t    /* bold-red src/colors.sibilant:19:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;31m\", args);\n\t  });\n\t  var boldGreen = (function boldGreen$(args) {\n\t    /* bold-green src/colors.sibilant:20:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;32m\", args);\n\t  });\n\t  var yellow = (function yellow$(args) {\n\t    /* yellow src/colors.sibilant:21:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;33m\", args);\n\t  });\n\t  var boldBlue = (function boldBlue$(args) {\n\t    /* bold-blue src/colors.sibilant:22:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;34m\", args);\n\t  });\n\t  var boldPurple = (function boldPurple$(args) {\n\t    /* bold-purple src/colors.sibilant:23:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;35m\", args);\n\t  });\n\t  var boldCyan = (function boldCyan$(args) {\n\t    /* bold-cyan src/colors.sibilant:24:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;36m\", args);\n\t  });\n\t  var white = (function white$(args) {\n\t    /* white src/colors.sibilant:25:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;37m\", args);\n\t  });\n\t  sibilant.prettyPrint = (function sibilant$prettyPrint$(node, color, entry) {\n\t    /* sibilant.pretty-print src/pretty-printer.sibilant:3:0 */\n\t  \n\t    entry = (typeof entry !== \"undefined\") ? entry : true;\n\t    color = (typeof color !== \"undefined\") ? color : true;\n\t    return realNewlines((function() {\n\t      if (node__QUERY(node)) {\n\t        var prettyPrinter = (sibilant.prettyPrint[node.type] || sibilant.prettyPrint.default);\n\t        return prettyPrinter(node, color, entry);\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return ((function() {\n\t          if (color) {\n\t            return black(\"[\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this) + map(node, (function() {\n\t          /* src/pretty-printer.sibilant:14:28 */\n\t        \n\t          return prettify(arguments[0], color, false);\n\t        })).join((function() {\n\t          if (color) {\n\t            return black(\",\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this)) + (function() {\n\t          if (color) {\n\t            return black(\"]\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this));\n\t      } else if (color) {\n\t        return red(inspect(node));\n\t      } else {\n\t        return realNewlines(inspect(node));\n\t      }\n\t    }).call(this));\n\t  });\n\t  var prettify = sibilant.prettyPrint;\n\t  sibilant.prettyPrint.default = (function sibilant$prettyPrint$default$(node, color, entry) {\n\t    /* sibilant.pretty-print.default src/pretty-printer.sibilant:23:0 */\n\t  \n\t    var mapPretty = (function mapPretty$(attr) {\n\t      /* map-pretty src/pretty-printer.sibilant:24:5 */\n\t    \n\t      var arr = node[attr];\n\t      return (function() {\n\t        if ((arr && arr.length)) {\n\t          return map(arr, (function() {\n\t            /* src/pretty-printer.sibilant:27:27 */\n\t          \n\t            return prettify(arguments[0], color, false);\n\t          })).join(\"\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this);\n\t    });\n\t    return realNewlines(sibilant.prettyPrint.colorize(node, color, ((function() {\n\t      if (entry) {\n\t        return \"\";\n\t      } else {\n\t        return mapPretty(\"precedingIgnored\");\n\t      }\n\t    }).call(this) + mapPretty(\"modifiers\") + node.token + mapPretty(\"contents\") + mapPretty(\"closingIgnored\") + ((node.closed && acceptablePairs[node.token]) || \"\"))));\n\t  });\n\t  sibilant.prettyPrint.root = (function sibilant$prettyPrint$root$(node, color, entry) {\n\t    /* sibilant.pretty-print.root src/pretty-printer.sibilant:39:0 */\n\t  \n\t    return map(node.contents, (function() {\n\t      /* src/pretty-printer.sibilant:41:16 */\n\t    \n\t      return prettify(arguments[0], color, false);\n\t    })).join(\"\\n\");\n\t  });\n\t  sibilant.prettyPrint.output = (function sibilant$prettyPrint$output$(node, color) {\n\t    /* sibilant.pretty-print.output src/pretty-printer.sibilant:44:0 */\n\t  \n\t    return ((function() {\n\t      if (color) {\n\t        return black(\"{\");\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this) + (function() {\n\t      if (((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\")) {\n\t        return map(node.contents, (function() {\n\t          /* src/pretty-printer.sibilant:48:28 */\n\t        \n\t          return sibilant.prettyPrint.colorize(node, color, prettify(arguments[0], color, false));\n\t        })).join((function() {\n\t          if (color) {\n\t            return black(\",\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this));\n\t      } else {\n\t        return sibilant.prettyPrint.colorize(node, color, node.contents);\n\t      }\n\t    }).call(this) + (function() {\n\t      if (color) {\n\t        return black(\"}\");\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this));\n\t  });\n\t  var realNewlines = (function realNewlines$(node) {\n\t    /* real-newlines src/pretty-printer.sibilant:54:0 */\n\t  \n\t    return node.split(\"\\\\n\").join(\"\\n\");\n\t  });\n\t  sibilant.prettyPrint.colorize = (function sibilant$prettyPrint$colorize$(node, color, string) {\n\t    /* sibilant.pretty-print.colorize src/pretty-printer.sibilant:59:0 */\n\t  \n\t    return (function() {\n\t      if (!(color)) {\n\t        return string;\n\t      } else if (node.hint === \"macro\") {\n\t        return yellow(string);\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return purple(string);\n\t      } else {\n\t        return green(string);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var outputFormatter = (function outputFormatter$(node) {\n\t    /* output-formatter src/output-formatter.sibilant:1:0 */\n\t  \n\t    return (function() {\n\t      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, outputFormatter).join(\"\");\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return outputFormatter(node.contents);\n\t      } else if ((typeof node === \"string\" || typeof node === \"number\")) {\n\t        return node;\n\t      } else if (!((typeof node !== \"undefined\" && node !== null))) {\n\t        return \"\";\n\t      } else if (node__QUERY(node)) {\n\t        console.log(\"WE SHOULD NOT BE HERE\");\n\t        console.log(\"node\");\n\t        console.log(prettify(node));\n\t        return outputFormatter(transpile(node));\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.outputFormatter = outputFormatter;\n\t  var bulkMap = (function bulkMap$(arr, fn) {\n\t    /* bulk-map include/functional.sibilant:1:0 */\n\t  \n\t    var index = 0,\n\t        groupSize = fn.length,\n\t        retArr = [];\n\t    (function() {\n\t      var $_symbol3_$ = undefined;\n\t      while (index < arr.length) {\n\t        $_symbol3_$ = (function() {\n\t          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n\t          return index += groupSize;\n\t        }).call(this);\n\t      };\n\t      return $_symbol3_$;\n\t    }).call(this);\n\t    return retArr;\n\t  });\n\t  var inject = (function inject$(start, items, fn) {\n\t    /* inject include/functional.sibilant:13:0 */\n\t  \n\t    var value = start;\n\t    (function() {\n\t      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n\t        return items.forEach((function(item, index) {\n\t          /* include/functional.sibilant:16:4 */\n\t        \n\t          return value = fn(value, item, index);\n\t        }));\n\t      }\n\t    }).call(this);\n\t    return value;\n\t  });\n\t  var map = (function map$(items, fn) {\n\t    /* map include/functional.sibilant:20:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* include/functional.sibilant:22:10 */\n\t    \n\t      collector.push(fn(item, index));\n\t      return collector;\n\t    }));\n\t  });\n\t  var select = (function select$(items, fn) {\n\t    /* select include/functional.sibilant:26:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* include/functional.sibilant:28:10 */\n\t    \n\t      (function() {\n\t        if (fn(item, index)) {\n\t          return collector.push(item);\n\t        }\n\t      }).call(this);\n\t      return collector;\n\t    }));\n\t  });\n\t  var detect = (function detect$(items, fn) {\n\t    /* detect include/functional.sibilant:33:0 */\n\t  \n\t    var returnItem = undefined,\n\t        index = 0,\n\t        items = (items || []);\n\t    (function() {\n\t      var $_symbol4_$ = undefined;\n\t      while (!((items.length === index || returnItem))) {\n\t        $_symbol4_$ = (function() {\n\t          (function() {\n\t            if (fn(items[index], index)) {\n\t              return returnItem = items[index];\n\t            }\n\t          }).call(this);\n\t          return ((index)++);\n\t        }).call(this);\n\t      };\n\t      return $_symbol4_$;\n\t    }).call(this);\n\t    return returnItem;\n\t  });\n\t  var all__QUERY = (function all__QUERY$(items, fn) {\n\t    /* all? include/functional.sibilant:45:0 */\n\t  \n\t    return typeof detect(items, (function(item, index) {\n\t      /* include/functional.sibilant:46:31 */\n\t    \n\t      return !(fn(item, index));\n\t    })) === \"undefined\";\n\t  });\n\t  var none__QUERY = (function none__QUERY$(items, fn) {\n\t    /* none? include/functional.sibilant:48:0 */\n\t  \n\t    return typeof detect(items, fn) === \"undefined\";\n\t  });\n\t  var any__QUERY = (function any__QUERY$(items, fn) {\n\t    /* any? include/functional.sibilant:51:0 */\n\t  \n\t    return typeof detect(items, fn) !== \"undefined\";\n\t  });\n\t  var reject = (function reject$(items, fn) {\n\t    /* reject include/functional.sibilant:54:0 */\n\t  \n\t    var args = [ items, fn ];\n\t    return select(items, (function() {\n\t      /* include/functional.sibilant:56:16 */\n\t    \n\t      return !(fn.apply(this, arguments));\n\t    }));\n\t  });\n\t  var compact = (function compact$(arr) {\n\t    /* compact include/functional.sibilant:58:0 */\n\t  \n\t    return select(arr, (function(item) {\n\t      /* include/functional.sibilant:59:17 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var interleave = (function interleave$(glue, arr) {\n\t    /* interleave include/functional.sibilant:65:0 */\n\t  \n\t    (function() {\n\t      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n\t        var temp = glue;\n\t        glue = arr;\n\t        return arr = temp;\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n\t        return inject([], arr, (function(collector, item, index) {\n\t          /* include/functional.sibilant:71:13 */\n\t        \n\t          return collector.concat([ item, glue[index] ]);\n\t        }));\n\t      } else {\n\t        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n\t          /* include/functional.sibilant:75:13 */\n\t        \n\t          return collector.concat([ glue, item ]);\n\t        }));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatten = (function flatten$(items) {\n\t    /* flatten include/functional.sibilant:78:0 */\n\t  \n\t    var items = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inject([], items, (function(collector, item) {\n\t      /* include/functional.sibilant:80:10 */\n\t    \n\t      return collector.concat((function() {\n\t        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t          return flatten.apply(this, item);\n\t        } else {\n\t          return item;\n\t        }\n\t      }).call(this));\n\t    }));\n\t  });\n\t  var recurseMap = (function recurseMap$(item, fn) {\n\t    /* recurse-map include/functional.sibilant:87:0 */\n\t  \n\t    return (function() {\n\t      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        return map(item, (function(subitem) {\n\t          /* include/functional.sibilant:88:32 */\n\t        \n\t          return recurseMap(subitem, fn);\n\t        }));\n\t      } else {\n\t        return fn(item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var pluck = (function pluck$(items, attribute) {\n\t    /* pluck include/functional.sibilant:91:0 */\n\t  \n\t    return map(items, (function(item) {\n\t      /* include/functional.sibilant:92:16 */\n\t    \n\t      return item[attribute];\n\t    }));\n\t  });\n\t  var mergeInto = (function mergeInto$(into, from) {\n\t    /* merge-into include/functional.sibilant:94:0 */\n\t  \n\t    Object.keys(from).forEach((function(key) {\n\t      /* include/functional.sibilant:95:5 */\n\t    \n\t      return into[key] = from[key];\n\t    }));\n\t    return into;\n\t  });\n\t  var clone = (function clone$(object) {\n\t    /* clone include/functional.sibilant:98:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key) {\n\t      /* include/functional.sibilant:100:13 */\n\t    \n\t      collector[key] = object[key];\n\t      return collector;\n\t    }));\n\t  });\n\t  var mapValues = (function mapValues$(object, fn) {\n\t    /* map-values include/functional.sibilant:104:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key, index) {\n\t      /* include/functional.sibilant:106:13 */\n\t    \n\t      collector[key] = fn(object[key], key);\n\t      return collector;\n\t    }));\n\t  });\n\t  var mergeWith = (function mergeWith$(into, from) {\n\t    /* merge-with include/functional.sibilant:110:0 */\n\t  \n\t    return mergeInto(clone(into), from);\n\t  });\n\t  var parser = {  };\n\t  sibilant.parser = parser;\n\t  parser.tokens = {\n\t    \"regex\": \"(\\\\/(\\\\\\\\\\\\\\/|[^\\\\/\\\\n])+\\\\/[glim]*)\",\n\t    \"comment\": \"(;.*)\",\n\t    \"string\": \"(\\\"(([^\\\"]|(\\\\\\\\\\\"))*[^\\\\\\\\])?\\\")\",\n\t    \"number\": \"(-?[0-9][0-9.,]*)\",\n\t    \"literal\": \"(-?[*.$a-zA-Z_][/*.a-zA-Z0-9-_]*(\\\\?|!)?)\",\n\t    \"special\": \"([&'])\",\n\t    \"at\": \"@\",\n\t    \"tick\": \"[`']\",\n\t    \"hat\": \"(\\\\^)\",\n\t    \"dots\": \"(\\\\.+)\",\n\t    \"argPlaceholder\": \"(#[0-9]+)\",\n\t    \"otherChar\": \"([\\\\|#><=!\\\\+\\\\/\\\\*-]+)\",\n\t    \"openExpression\": \"(\\\\(|\\\\{|\\\\[)\",\n\t    \"closeExpression\": \"(\\\\)|\\\\}|\\\\])\",\n\t    \"newline\": \"\\\\n\",\n\t    \"whitespace\": \"\\\\s+\",\n\t    \"ignored\": \".\"\n\t  };\n\t  parser.tokenPrecedence = [ \"regex\", \"comment\", \"string\", \"number\", \"dots\", \"tick\", \"hat\", \"at\", \"special\", \"literal\", \"argPlaceholder\", \"otherChar\", \"openExpression\", \"closeExpression\", \"newline\", \"whitespace\", \"ignored\" ];\n\t  parser.orderedRegexes = parser.tokenPrecedence.map((function(x) {\n\t    /* src/parser.sibilant:41:23 */\n\t  \n\t    return mergeInto((new RegExp((\"^\" + parser.tokens[x]), undefined)), { name: x });\n\t  }));\n\t  var orderedRegexes = parser.orderedRegexes;\n\t  parser.parse = (function parser$parse$(string, context) {\n\t    /* parser.parse src/parser.sibilant:46:0 */\n\t  \n\t    context = (typeof context !== \"undefined\") ? context : {\n\t      position: 0,\n\t      stack: [],\n\t      line: 1,\n\t      lastNewline: 0,\n\t      col: 0\n\t    };\n\t    var match = true,\n\t        regexName = null,\n\t        remainingInput = string;\n\t    (function() {\n\t      var $_symbol5_$ = undefined;\n\t      while (match) {\n\t        $_symbol5_$ = (function() {\n\t          detect(orderedRegexes, (function(r) {\n\t            /* src/parser.sibilant:57:20 */\n\t          \n\t            regexName = r.name;\n\t            return match = r.exec(remainingInput);\n\t          }));\n\t          return (function() {\n\t            if ((typeof match !== \"undefined\" && match !== null)) {\n\t              var matchString = match[0],\n\t                  length = matchString.length;\n\t              context.stack.push({\n\t                dir: sibilant.dir,\n\t                file: sibilant.file,\n\t                token: matchString,\n\t                type: regexName,\n\t                start: context.position,\n\t                line: context.line,\n\t                col: context.col,\n\t                length: length,\n\t                contents: []\n\t              });\n\t              (function() {\n\t                if (\"newline\" === regexName) {\n\t                  ((context.line)++);\n\t                  context.col = 0;\n\t                  return context.lastNewline = context.position;\n\t                } else if ((\"string\" === regexName && matchString.indexOf(\"\\n\") !== -1)) {\n\t                  var stringNewlineCount = (matchString.split(\"\\n\").length - 1);\n\t                  context.line += stringNewlineCount;\n\t                  return context.col = (length - matchString.lastIndexOf(\"\\n\"));\n\t                } else {\n\t                  return context.col += length;\n\t                }\n\t              }).call(this);\n\t              context.position += length;\n\t              return remainingInput = (function() {\n\t                if (remainingInput.length) {\n\t                  return remainingInput.slice(length);\n\t                } else {\n\t                  return \"\";\n\t                }\n\t              }).call(this);\n\t            }\n\t          }).call(this);\n\t        }).call(this);\n\t      };\n\t      return $_symbol5_$;\n\t    }).call(this);\n\t    return context.stack;\n\t  });\n\t  var parse = parser.parse;\n\t  var restructurers = {  },\n\t      acceptablePairs = {\n\t    \"(\": \")\",\n\t    \"[\": \"]\",\n\t    \"{\": \"}\"\n\t  },\n\t      bracketTypes = {\n\t    \"(\": \"expression\",\n\t    \"[\": \"bracket\",\n\t    \"{\": \"brace\"\n\t  };\n\t  var restructure = (function restructure$(input) {\n\t    /* restructure src/restructurer.sibilant:7:0 */\n\t  \n\t    var output = {\n\t      type: \"root\",\n\t      contents: [],\n\t      file: sibilant.file,\n\t      col: 0,\n\t      line: 1\n\t    },\n\t        context = {\n\t      parseStack: [ output ],\n\t      output: output,\n\t      input: input,\n\t      ignoredTokens: [],\n\t      specials: 0\n\t    };\n\t    inject(context, input, (function(context, token, index) {\n\t      /* src/restructurer.sibilant:20:13 */\n\t    \n\t      var restructurer = (restructurers[token.type] || restructurers.default);\n\t      return restructurer(token, context, index);\n\t    }));\n\t    (function() {\n\t      if (!(1 === context.parseStack.length)) {\n\t        var unclosedNode = context.parseStack[0];\n\t        throw (new Error((\"unclosed node at \" + unclosedNode.file + \":\" + unclosedNode.line + \":\" + unclosedNode.col + \"\\n  \" + prettify(unclosedNode, false).slice(0, 100))))\n\t      }\n\t    }).call(this);\n\t    return output;\n\t  });\n\t  sibilant.restructure = restructure;\n\t  restructurers.openExpression = (function restructurers$openExpression$(token, context) {\n\t    /* restructurers.open-expression src/restructurer.sibilant:35:0 */\n\t  \n\t    var first = context.parseStack[0];\n\t    token.contents = [];\n\t    token.type = bracketTypes[token.token];\n\t    acceptIgnoredTokens(token, context);\n\t    acceptSpecials(token, context);\n\t    first.contents.push(token);\n\t    context.parseStack.unshift(token);\n\t    return context;\n\t  });\n\t  restructurers.closeExpression = (function restructurers$closeExpression$(node, context, index) {\n\t    /* restructurers.close-expression src/restructurer.sibilant:47:0 */\n\t  \n\t    var first = context.parseStack[0];\n\t    (function() {\n\t      if (node__QUERY(first, \"root\")) {\n\t        throw (new Error((\"unexpected \" + node.token + \" on \" + node.file + \":\" + node.line + \":\" + node.col)))\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (acceptablePairs[first.token] !== node.token) {\n\t        throw (new Error((\"trying to close \" + yellow(sibilant.prettyPrint(first)) + \"\\n   on \" + first.file + \":\" + first.line + \":\" + first.col + \"\\n   with \" + sibilant.prettyPrint(node) + \"\\n   on \" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\")))\n\t      }\n\t    }).call(this);\n\t    first.end = node.end;\n\t    first.closed = true;\n\t    first.closingIgnored = context.ignoredTokens;\n\t    context.ignoredTokens = [];\n\t    context.parseStack.shift();\n\t    closeSpecials(first, context);\n\t    (function() {\n\t      if (context.parseStack.length === 0) {\n\t        throw (new Error((\"unbalanced parens:\\n\" + inspect(parseStack))))\n\t      }\n\t    }).call(this);\n\t    return context;\n\t  });\n\t  var openSpecial = (function openSpecial$(node, context) {\n\t    /* open-special src/restructurer.sibilant:72:0 */\n\t  \n\t    ((context.specials)++);\n\t    acceptIgnoredTokens(node, context);\n\t    var first = context.parseStack[0];\n\t    node.contents = [];\n\t    first.contents.push(node);\n\t    context.parseStack.unshift(node);\n\t    return context;\n\t  });\n\t  var acceptSpecials = (function acceptSpecials$(node, context) {\n\t    /* accept-specials src/restructurer.sibilant:85:0 */\n\t  \n\t    node.specials = context.specials;\n\t    context.specials = 0;\n\t    return context;\n\t  });\n\t  var acceptIgnoredTokens = (function acceptIgnoredTokens$(node, context) {\n\t    /* accept-ignored-tokens src/restructurer.sibilant:90:0 */\n\t  \n\t    node.precedingIgnored = context.ignoredTokens;\n\t    context.ignoredTokens = [];\n\t    return context;\n\t  });\n\t  var closeSpecials = (function closeSpecials$(node, context) {\n\t    /* close-specials src/restructurer.sibilant:95:0 */\n\t  \n\t    (function() {\n\t      if (node.specials > 0) {\n\t        ((node.specials)--);\n\t        context.parseStack.shift();\n\t        return closeSpecials(node, context);\n\t      }\n\t    }).call(this);\n\t    return context;\n\t  });\n\t  var accumulateIgnoredToken = (function accumulateIgnoredToken$(token, context, index) {\n\t    /* accumulate-ignored-token src/restructurer.sibilant:103:0 */\n\t  \n\t    context.ignoredTokens.push(token);\n\t    return context;\n\t  });\n\t  [ \"hat\", \"dots\", \"tick\", \"at\" ].forEach((function(special) {\n\t    /* src/restructurer.sibilant:107:0 */\n\t  \n\t    return restructurers[special] = openSpecial;\n\t  }));\n\t  [ \"whitespace\", \"newline\", \"ignored\" ].forEach((function(ignored) {\n\t    /* src/restructurer.sibilant:110:0 */\n\t  \n\t    return restructurers[ignored] = accumulateIgnoredToken;\n\t  }));\n\t  restructurers.default = (function restructurers$default$(token, context, index) {\n\t    /* restructurers.default src/restructurer.sibilant:113:0 */\n\t  \n\t    acceptSpecials(token, context);\n\t    acceptIgnoredTokens(token, context);\n\t    context.parseStack[0].contents.push(token);\n\t    return closeSpecials(token, context);\n\t  });\n\t  var coreNamespace = {  },\n\t      macroNamespaces = { core: coreNamespace };\n\t  sibilant.state = {  };\n\t  sibilant.macros = {\n\t    \"namespaces\": macroNamespaces,\n\t    \"defaultSearchPath\": [ \"core\" ],\n\t    \"searchPath\": [ \"core\" ],\n\t    \"namespace\": coreNamespace\n\t  };\n\t  var namespace = sibilant.macros.namespace,\n\t      macros = sibilant.macros.namespace;\n\t  sibilant.macros.currentNamespace = (function sibilant$macros$currentNamespace$() {\n\t    /* sibilant.macros.current-namespace src/macros.sibilant:14:0 */\n\t  \n\t    return sibilant.macros.namespaces[sibilant.macros.searchPath[0]];\n\t  });\n\t  sibilant.resolveMacro = (function sibilant$resolveMacro$(macroName) {\n\t    /* sibilant.resolve-macro src/macros.sibilant:17:0 */\n\t  \n\t    return (function() {\n\t      if ((macroName.indexOf(\"/\") !== -1 && 1 < macroName.length && !(macroName.indexOf(\"\\n\") !== -1))) {\n\t        var pathComponents = macroName.split(\"/\"),\n\t            macro = (sibilant.macros.namespaces.hasOwnProperty(pathComponents[0]) && sibilant.macros.namespaces[pathComponents[0]][pathComponents.slice(1).join(\"/\")]);\n\t        return (function() {\n\t          if (macro) {\n\t            return macro;\n\t          } else {\n\t            return error((\"called namespaced macro \" + macroName + \" but could not find namespace \" + pathComponents[0] + \". you might need to include the file that defines it first.\"));\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        var namespace = detect(sibilant.macros.searchPath, (function(namespace) {\n\t          /* src/macros.sibilant:29:33 */\n\t        \n\t          return sibilant.macros.namespaces[namespace].hasOwnProperty(macroName);\n\t        }));\n\t        return (function() {\n\t          if (namespace) {\n\t            return sibilant.macros.namespaces[namespace][macroName];\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.withDefaultSearchPath = (function sibilant$withDefaultSearchPath$(fn) {\n\t    /* sibilant.with-default-search-path src/macros.sibilant:34:0 */\n\t  \n\t    var searchPathBefore = sibilant.macros.searchPath;\n\t    sibilant.macros.searchPath = sibilant.macros.defaultSearchPath;\n\t    var returnValue = fn();\n\t    sibilant.macros.searchPath = searchPathBefore;\n\t    return returnValue;\n\t  });\n\t  sibilant.macros.namespaces.core.ternary = (function ternary$(cond, ifTrue, ifFalse) {\n\t    /* ternary include/macros.sibilant:9:0 */\n\t  \n\t    return [ \"(\", transpile(cond), \") ? \", transpile(ifTrue), \" : \", transpile(ifFalse) ];\n\t  });\n\t  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n\t    /* set include/macros.sibilant:19:0 */\n\t  \n\t    var kvPairs = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n\t      /* include/macros.sibilant:21:34 */\n\t    \n\t      return asStatement([ \"(\", transpile(arr), \")\", \"[\", transpile(k), \"] = \", transpile(v) ]);\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n\t    /* var include/macros.sibilant:25:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return asStatement([ \"var \", interleave(\",\\n    \", bulkMap(pairs, (function(name, value) {\n\t      /* include/macros.sibilant:30:25 */\n\t    \n\t      return [ transpile(name), \" = \", transpile(value) ];\n\t    }))) ]);\n\t  });\n\t  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n\t    /* get include/macros.sibilant:35:0 */\n\t  \n\t    var keys = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(\", transpile(obj), \")\", map(keys, (function(key) {\n\t      /* include/macros.sibilant:36:42 */\n\t    \n\t      return [ \"[\", transpile(key), \"]\" ];\n\t    })) ];\n\t  });\n\t  sibilant.macros.namespaces.core.aliasMacro = (function aliasMacro$(currentMacroName, newMacroName) {\n\t    /* alias-macro include/macros.sibilant:47:0 */\n\t  \n\t    var currentMacroName = outputFormatter(transpile(currentMacroName)),\n\t        newMacroName = outputFormatter(transpile(newMacroName));\n\t    sibilant.macros.namespace[newMacroName] = sibilant.macros.namespace[currentMacroName];\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.send = (function send$(object, method, args) {\n\t    /* send include/macros.sibilant:62:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return [ transpile(object), \".\", transpile(method), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.apply = (function apply$(fn, arglist) {\n\t    /* apply include/macros.sibilant:74:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 2119,\n\t      line: 75,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 2120,\n\t        line: 75,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"apply\",\n\t          type: \"literal\",\n\t          start: 2121,\n\t          line: 75,\n\t          col: 10,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, fn, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"this\",\n\t        type: \"literal\",\n\t        start: 2131,\n\t        line: 75,\n\t        col: 20,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 2130,\n\t          line: 75,\n\t          col: 19,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, arglist ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.cons = (function cons$(first, rest) {\n\t    /* cons include/macros.sibilant:86:0 */\n\t  \n\t    return [ \"[ \", transpile(first), \" ].concat(\", transpile(rest), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.append = (function append$(list, additional) {\n\t    /* append include/macros.sibilant:95:0 */\n\t  \n\t    var additional = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 2690,\n\t      line: 96,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 2691,\n\t        line: 96,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"concat\",\n\t          type: \"literal\",\n\t          start: 2692,\n\t          line: 96,\n\t          col: 10,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, list, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 2705,\n\t        line: 96,\n\t        col: 23,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"list\",\n\t          type: \"literal\",\n\t          start: 2706,\n\t          line: 96,\n\t          col: 24,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(additional),\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 2704,\n\t          line: 96,\n\t          col: 22,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.length = (function length$(arr) {\n\t    /* length include/macros.sibilant:102:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 2871,\n\t      line: 103,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 2872,\n\t        line: 103,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":2881,\"line\":103,\"col\":18,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"length\",\"type\":\"literal\",\"start\":2882,\"line\":103,\"col\":19,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":2880,\"line\":103,\"col\":17,\"length\":1,\"contents\":[]}]} ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.scoped = (function scoped$(body) {\n\t    /* scoped include/macros.sibilant:109:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 3126,\n\t      line: 110,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 3127,\n\t        line: 110,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"call\",\n\t          type: \"literal\",\n\t          start: 3128,\n\t          line: 110,\n\t          col: 10,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 3133,\n\t        line: 110,\n\t        col: 15,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"lambda\",\n\t          type: \"literal\",\n\t          start: 3134,\n\t          line: 110,\n\t          col: 16,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          node: this,\n\t          args: []\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3132,\n\t          line: 110,\n\t          col: 14,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"this\",\n\t        type: \"literal\",\n\t        start: 3172,\n\t        line: 110,\n\t        col: 54,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3171,\n\t          line: 110,\n\t          col: 53,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.first = (function first$(arr) {\n\t    /* first include/macros.sibilant:130:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 3954,\n\t      line: 130,\n\t      col: 20,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 3955,\n\t        line: 130,\n\t        col: 21,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 3964,\n\t        line: 130,\n\t        col: 30,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3963,\n\t          line: 130,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.second = (function second$(arr) {\n\t    /* second include/macros.sibilant:131:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 3989,\n\t      line: 131,\n\t      col: 21,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 3990,\n\t        line: 131,\n\t        col: 22,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        start: 3999,\n\t        line: 131,\n\t        col: 31,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3998,\n\t          line: 131,\n\t          col: 30,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.third = (function third$(arr) {\n\t    /* third include/macros.sibilant:132:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 4023,\n\t      line: 132,\n\t      col: 20,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 4024,\n\t        line: 132,\n\t        col: 21,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"2\",\n\t        type: \"number\",\n\t        start: 4033,\n\t        line: 132,\n\t        col: 30,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 4032,\n\t          line: 132,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.rest = (function rest$(arr) {\n\t    /* rest include/macros.sibilant:138:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 4170,\n\t      line: 138,\n\t      col: 19,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 4171,\n\t        line: 138,\n\t        col: 20,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"slice\",\n\t          type: \"literal\",\n\t          start: 4172,\n\t          line: 138,\n\t          col: 21,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        start: 4183,\n\t        line: 138,\n\t        col: 32,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 4182,\n\t          line: 138,\n\t          col: 31,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.last = (function last$(arr) {\n\t    /* last include/macros.sibilant:143:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 4330,\n\t      line: 143,\n\t      col: 19,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"first\",\n\t        type: \"literal\",\n\t        start: 4331,\n\t        line: 143,\n\t        col: 20,\n\t        length: 5,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 4337,\n\t        line: 143,\n\t        col: 26,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 4338,\n\t          line: 143,\n\t          col: 27,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"slice\",\n\t            type: \"literal\",\n\t            start: 4339,\n\t            line: 143,\n\t            col: 28,\n\t            length: 5,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, arr, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          start: 4350,\n\t          line: 143,\n\t          col: 39,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 4349,\n\t            line: 143,\n\t            col: 38,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 4336,\n\t          line: 143,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"=\"] = (function $$(a, b) {\n\t    /* = include/macros.sibilant:146:0 */\n\t  \n\t    return [ transpile(a), \" === \", transpile(b) ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"+\"] = (function $$(args) {\n\t    /* + include/macros.sibilant:153:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.concat = sibilant.macros.namespaces.core[\"+\"];\n\t  sibilant.macros.namespaces.core[\"-\"] = (function $$(args) {\n\t    /* - include/macros.sibilant:161:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" - \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"_\"] = (function _$(args) {\n\t    /* * include/macros.sibilant:167:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" * \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"/\"] = (function $$(args) {\n\t    /* / include/macros.sibilant:174:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" / \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.or = (function or$(args) {\n\t    /* or include/macros.sibilant:181:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" || \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.and = (function and$(args) {\n\t    /* and include/macros.sibilant:189:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (1 === args.length) ? transpile(args[0]) : [ \"(\", interleave(\" && \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.mod = (function mod$(args) {\n\t    /* mod include/macros.sibilant:196:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" % \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\">\"] = (function $$(args) {\n\t    /* > include/macros.sibilant:231:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \">\";\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7315,\n\t      line: 233,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7316,\n\t        line: 233,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* include/macros.sibilant:234:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"<\"] = (function $$(args) {\n\t    /* < include/macros.sibilant:238:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"<\";\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7527,\n\t      line: 240,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7528,\n\t        line: 240,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* include/macros.sibilant:241:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"<=\"] = (function $$(args) {\n\t    /* <= include/macros.sibilant:244:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"<=\";\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7740,\n\t      line: 246,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7741,\n\t        line: 246,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* include/macros.sibilant:247:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\">=\"] = (function $$(args) {\n\t    /* >= include/macros.sibilant:250:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \">=\";\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7953,\n\t      line: 252,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7954,\n\t        line: 252,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* include/macros.sibilant:253:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"!=\"] = (function $$(args) {\n\t    /* != include/macros.sibilant:255:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"!==\";\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 8166,\n\t      line: 257,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 8167,\n\t        line: 257,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* include/macros.sibilant:258:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"=\"] = (function $$(args) {\n\t    /* = include/macros.sibilant:261:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"===\";\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 8379,\n\t      line: 263,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 8380,\n\t        line: 263,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* include/macros.sibilant:264:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.incrBy = (function incrBy$(item, increment) {\n\t    /* incr-by include/macros.sibilant:271:0 */\n\t  \n\t    return [ transpile(item), \" += \", transpile(increment) ];\n\t  });\n\t  sibilant.macros.namespaces.core.incr = (function incr$(item) {\n\t    /* incr include/macros.sibilant:280:0 */\n\t  \n\t    return [ \"((\", transpile(item), \")++)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.decr = (function decr$(item) {\n\t    /* decr include/macros.sibilant:287:0 */\n\t  \n\t    return [ \"((\", transpile(item), \")--)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.new = (function new$(constructor, args) {\n\t    /* new include/macros.sibilant:294:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(new \", {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9236,\n\t      line: 295,\n\t      col: 17,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"call\",\n\t        type: \"literal\",\n\t        start: 9237,\n\t        line: 295,\n\t        col: 18,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, constructor ].concat(args),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }, \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.regex = (function regex$(pattern, flags) {\n\t    /* regex include/macros.sibilant:302:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9481,\n\t      line: 303,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"new\",\n\t        type: \"literal\",\n\t        start: 9482,\n\t        line: 303,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"RegExp\",\n\t        type: \"literal\",\n\t        start: 9486,\n\t        line: 303,\n\t        col: 13,\n\t        length: 6,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9485,\n\t          line: 303,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, pattern, (flags || \"undefined\") ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"zero__QUERY\"] = (function zero__QUERY$(item) {\n\t    /* zero? include/macros.sibilant:310:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9647,\n\t      line: 310,\n\t      col: 21,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 9648,\n\t        line: 310,\n\t        col: 22,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, item, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 9656,\n\t        line: 310,\n\t        col: 30,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9655,\n\t          line: 310,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"empty__QUERY\"] = (function empty__QUERY$(arr) {\n\t    /* empty? include/macros.sibilant:316:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9811,\n\t      line: 317,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 9812,\n\t        line: 317,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 9814,\n\t        line: 317,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9813,\n\t          line: 317,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 9816,\n\t        line: 317,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"length\",\n\t          type: \"literal\",\n\t          start: 9817,\n\t          line: 317,\n\t          col: 14,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, arr ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9815,\n\t          line: 317,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"odd__QUERY\"] = (function odd__QUERY$(number) {\n\t    /* odd? include/macros.sibilant:323:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9963,\n\t      line: 324,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 9964,\n\t        line: 324,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        start: 9966,\n\t        line: 324,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9965,\n\t          line: 324,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 9968,\n\t        line: 324,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"mod\",\n\t          type: \"literal\",\n\t          start: 9969,\n\t          line: 324,\n\t          col: 14,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, number, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"2\",\n\t          type: \"number\",\n\t          start: 9981,\n\t          line: 324,\n\t          col: 26,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 9980,\n\t            line: 324,\n\t            col: 25,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9967,\n\t          line: 324,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"even__QUERY\"] = (function even__QUERY$(number) {\n\t    /* even? include/macros.sibilant:330:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 10134,\n\t      line: 331,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 10135,\n\t        line: 331,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 10137,\n\t        line: 331,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 10136,\n\t          line: 331,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 10139,\n\t        line: 331,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"mod\",\n\t          type: \"literal\",\n\t          start: 10140,\n\t          line: 331,\n\t          col: 14,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, number, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"2\",\n\t          type: \"number\",\n\t          start: 10152,\n\t          line: 331,\n\t          col: 26,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 10151,\n\t            line: 331,\n\t            col: 25,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 10138,\n\t          line: 331,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.typeof = (function typeof$(thing) {\n\t    /* typeof include/macros.sibilant:338:0 */\n\t  \n\t    return [ \"typeof \", transpile(thing) ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"string__QUERY\"] = (function string__QUERY$(things) {\n\t    /* string? include/macros.sibilant:344:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 10588,\n\t      line: 345,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 10589,\n\t        line: 345,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* include/macros.sibilant:345:29 */\n\t      \n\t        return {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 10620,\n\t          line: 345,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 10621,\n\t            line: 345,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 10623,\n\t            line: 345,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 10624,\n\t              line: 345,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 10622,\n\t              line: 345,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10639,\"line\":345,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"string\",\"type\":\"literal\",\"start\":10640,\"line\":345,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10638,\"line\":345,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"function__QUERY\"] = (function function__QUERY$(things) {\n\t    /* function? include/macros.sibilant:351:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 10832,\n\t      line: 352,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 10833,\n\t        line: 352,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* include/macros.sibilant:352:29 */\n\t      \n\t        return {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 10864,\n\t          line: 352,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 10865,\n\t            line: 352,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 10867,\n\t            line: 352,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 10868,\n\t              line: 352,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 10866,\n\t              line: 352,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10883,\"line\":352,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"function\",\"type\":\"literal\",\"start\":10884,\"line\":352,\"col\":60,\"length\":8,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10882,\"line\":352,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"undefined__QUERY\"] = (function undefined__QUERY$(things) {\n\t    /* undefined? include/macros.sibilant:361:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11199,\n\t      line: 362,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 11200,\n\t        line: 362,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* include/macros.sibilant:362:29 */\n\t      \n\t        return {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 11231,\n\t          line: 362,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 11232,\n\t            line: 362,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 11234,\n\t            line: 362,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 11235,\n\t              line: 362,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 11233,\n\t              line: 362,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11250,\"line\":362,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11251,\"line\":362,\"col\":60,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11249,\"line\":362,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"defined__QUERY\"] = (function defined__QUERY$(things) {\n\t    /* defined? include/macros.sibilant:370:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11526,\n\t      line: 371,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 11527,\n\t        line: 371,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* include/macros.sibilant:371:29 */\n\t      \n\t        return {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 11558,\n\t          line: 371,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"!=\",\n\t            type: \"otherChar\",\n\t            start: 11559,\n\t            line: 371,\n\t            col: 41,\n\t            length: 2,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 11562,\n\t            line: 371,\n\t            col: 44,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 11563,\n\t              line: 371,\n\t              col: 45,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 11561,\n\t              line: 371,\n\t              col: 43,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11578,\"line\":371,\"col\":60,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11579,\"line\":371,\"col\":61,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11577,\"line\":371,\"col\":59,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"number__QUERY\"] = (function number__QUERY$(things) {\n\t    /* number? include/macros.sibilant:378:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11787,\n\t      line: 379,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 11788,\n\t        line: 379,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* include/macros.sibilant:379:29 */\n\t      \n\t        return {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 11819,\n\t          line: 379,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 11820,\n\t            line: 379,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 11822,\n\t            line: 379,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 11823,\n\t              line: 379,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 11821,\n\t              line: 379,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11838,\"line\":379,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"number\",\"type\":\"literal\",\"start\":11839,\"line\":379,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11837,\"line\":379,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.if = (function if$(arg, truebody, falsebody) {\n\t    /* if include/macros.sibilant:383:0 */\n\t  \n\t    return [ \"(function() {\", indent([ \"if (\", transpile(arg), \") {\", indent({\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11999,\n\t      line: 386,\n\t      col: 33,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 12000,\n\t        line: 386,\n\t        col: 34,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(truebody),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"} else {\", indent({\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 12086,\n\t      line: 388,\n\t      col: 33,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 12087,\n\t        line: 388,\n\t        col: 34,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(falsebody),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.pipe = (function pipe$(calls) {\n\t    /* pipe include/macros.sibilant:416:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inject(undefined, calls, (function(value, item) {\n\t      /* include/macros.sibilant:418:15 */\n\t    \n\t      return (function() {\n\t        if (typeof value === \"undefined\") {\n\t          return item;\n\t        } else {\n\t          return (function() {\n\t            /* include/macros.sibilant:420:21 */\n\t          \n\t            var cloned = (function() {\n\t              if (node__QUERY(item, \"literal\", \"dots\")) {\n\t                return {\n\t                  dir: \"include\",\n\t                  file: \"include/macros.sibilant\",\n\t                  token: \"(\",\n\t                  type: \"expression\",\n\t                  start: 13192,\n\t                  line: 422,\n\t                  col: 39,\n\t                  length: 1,\n\t                  contents: [ item ],\n\t                  precedingIgnored: [],\n\t                  specials: 0,\n\t                  end: undefined,\n\t                  closed: true,\n\t                  closingIgnored: []\n\t                };\n\t              } else {\n\t                return clone(item);\n\t              }\n\t            }).call(this);\n\t            var placeholder = detect(cloned.contents, (function(node) {\n\t              /* include/macros.sibilant:426:47 */\n\t            \n\t              return (node__QUERY(node, \"otherChar\") && \"#\" === node.token);\n\t            })),\n\t                placeholderIndex = cloned.contents.indexOf(placeholder),\n\t                placeholderBoundaries = (function() {\n\t              if (placeholder) {\n\t                return [ placeholderIndex, (1 + placeholderIndex) ];\n\t              } else {\n\t                return [ 1, 1 ];\n\t              }\n\t            }).call(this);\n\t            return mergeInto(cloned, { contents: cloned.contents.slice(0, placeholderBoundaries[0]).concat([ value ], cloned.contents.slice(placeholderBoundaries[1])) });\n\t          }).call(this);\n\t        }\n\t      }).call(this);\n\t    }));\n\t  });\n\t  sibilant.macros.namespaces.core[\"|>\"] = sibilant.macros.namespaces.core.pipe;\n\t  sibilant.macros.namespaces.core.comment = (function comment$(contents) {\n\t    /* comment include/macros.sibilant:447:0 */\n\t  \n\t    var contents = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return map(contents, (function(content) {\n\t      /* include/macros.sibilant:448:21 */\n\t    \n\t      return [ \"// \", recurseMap(transpile(content), (function(item) {\n\t        /* include/macros.sibilant:450:36 */\n\t      \n\t        return (item) ? outputFormatter(transpile(item)).replace((new RegExp(\"\\n\", \"g\")), \"\\n// \") : null;\n\t      })) ];\n\t    }));\n\t  });\n\t  sibilant.macros.namespaces.core[\"array__QUERY\"] = (function array__QUERY$(thing) {\n\t    /* array? include/macros.sibilant:470:0 */\n\t  \n\t    var transpiled = transpile(thing);\n\t    return [ \"((\", transpiled, \") && typeof (\", transpiled, \") === \\\"object\\\" && (\", transpiled, \").constructor.name === \\\"Array\\\")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"list__QUERY\"] = sibilant.macros.namespaces.core[\"array__QUERY\"];\n\t  sibilant.macros.namespaces.core[\"hash__QUERY\"] = (function hash__QUERY$(thing) {\n\t    /* hash? include/macros.sibilant:482:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 15730,\n\t      line: 483,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 15731,\n\t        line: 483,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 15735,\n\t        line: 483,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          start: 15736,\n\t          line: 483,\n\t          col: 14,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15738,\"line\":483,\"col\":16,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"start\":15739,\"line\":483,\"col\":17,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15737,\"line\":483,\"col\":15,\"length\":1,\"contents\":[]}]}, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 15746,\n\t          line: 483,\n\t          col: 24,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"typeof\",\n\t            type: \"literal\",\n\t            start: 15747,\n\t            line: 483,\n\t            col: 25,\n\t            length: 6,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 15745,\n\t            line: 483,\n\t            col: 23,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 15734,\n\t          line: 483,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 15776,\n\t        line: 484,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 15777,\n\t          line: 484,\n\t          col: 14,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"null\",\n\t          type: \"literal\",\n\t          start: 15787,\n\t          line: 484,\n\t          col: 24,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 15786,\n\t            line: 484,\n\t            col: 23,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 15762,\n\t          line: 483,\n\t          col: 40,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"             \",\n\t          type: \"whitespace\",\n\t          start: 15763,\n\t          line: 484,\n\t          col: 0,\n\t          length: 13,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 15806,\n\t        line: 485,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 15807,\n\t          line: 485,\n\t          col: 14,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 15810,\n\t          line: 485,\n\t          col: 17,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            start: 15811,\n\t            line: 485,\n\t            col: 18,\n\t            length: 3,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15822,\"line\":485,\"col\":29,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"start\":15823,\"line\":485,\"col\":30,\"length\":11,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15821,\"line\":485,\"col\":28,\"length\":1,\"contents\":[]}]}, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15835,\"line\":485,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"start\":15836,\"line\":485,\"col\":43,\"length\":4,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15834,\"line\":485,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 15809,\n\t            line: 485,\n\t            col: 16,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15842,\"line\":485,\"col\":49,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"start\":15843,\"line\":485,\"col\":50,\"length\":5,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15841,\"line\":485,\"col\":48,\"length\":1,\"contents\":[]}]} ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 15792,\n\t          line: 484,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"             \",\n\t          type: \"whitespace\",\n\t          start: 15793,\n\t          line: 485,\n\t          col: 0,\n\t          length: 13,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"object__QUERY\"] = sibilant.macros.namespaces.core[\"hash__QUERY\"];\n\t  sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"] = (function _scopedWithoutReturn$(body) {\n\t    /* *scoped-without-return include/macros.sibilant:488:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(function() {\", indent.apply(this, body), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"_scopedWithoutSource\"] = (function _scopedWithoutSource$(body) {\n\t    /* *scoped-without-source include/macros.sibilant:492:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 16030,\n\t      line: 493,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"*scoped-without-return\",\n\t        type: \"literal\",\n\t        start: 16031,\n\t        line: 493,\n\t        col: 9,\n\t        length: 22,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 16054,\n\t        line: 493,\n\t        col: 32,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"do\",\n\t          type: \"literal\",\n\t          start: 16055,\n\t          line: 493,\n\t          col: 33,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 16053,\n\t          line: 493,\n\t          col: 31,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.when = (function when$(condition, body) {\n\t    /* when include/macros.sibilant:502:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"](\"if (\", condition, \") {\", indent({\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 16476,\n\t      line: 505,\n\t      col: 18,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 16477,\n\t        line: 505,\n\t        col: 19,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\");\n\t  });\n\t  sibilant.macros.namespaces.core.not = (function not$(exp) {\n\t    /* not include/macros.sibilant:514:0 */\n\t  \n\t    return [ \"!(\", transpile(exp), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.unless = (function unless$(condition, body) {\n\t    /* unless include/macros.sibilant:527:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(function() {\", indent([ \"if (\", {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 17209,\n\t      line: 529,\n\t      col: 25,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"not\",\n\t        type: \"literal\",\n\t        start: 17210,\n\t        line: 529,\n\t        col: 26,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, condition ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }, \") {\", indent({\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 17265,\n\t      line: 530,\n\t      col: 33,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 17266,\n\t        line: 530,\n\t        col: 34,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.assign = (function assign$(args) {\n\t    /* assign include/macros.sibilant:535:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", bulkMap(args, (function(name, value) {\n\t      /* include/macros.sibilant:537:28 */\n\t    \n\t      return asStatement([ transpile(name), \" = \", transpile(value) ]);\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.logPretty = (function logPretty$(label, arg) {\n\t    /* log-pretty include/macros.sibilant:549:0 */\n\t  \n\t    var node = this;\n\t    (function() {\n\t      if (typeof arg === \"undefined\") {\n\t        arg = label;\n\t        return label = [ \"\\\"\", prettify(label, false), \"\\\"\" ];\n\t      }\n\t    }).call(this);\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 18088,\n\t      line: 554,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"console.log\",\n\t        type: \"literal\",\n\t        start: 18089,\n\t        line: 554,\n\t        col: 9,\n\t        length: 11,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 18101,\n\t        line: 554,\n\t        col: 21,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"concat\",\n\t          type: \"literal\",\n\t          start: 18102,\n\t          line: 554,\n\t          col: 22,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, [ \"\\\"\", node.file, \":\", node.line, \"\\\"\" ], {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\\" \\\"\",\n\t          type: \"string\",\n\t          start: 18146,\n\t          line: 554,\n\t          col: 66,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 18145,\n\t            line: 554,\n\t            col: 65,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        }, label, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\\" = \\\"\",\n\t          type: \"string\",\n\t          start: 18157,\n\t          line: 554,\n\t          col: 77,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 18156,\n\t            line: 554,\n\t            col: 76,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 18163,\n\t          line: 554,\n\t          col: 83,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"prettify\",\n\t            type: \"literal\",\n\t            start: 18164,\n\t            line: 554,\n\t            col: 84,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, arg ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 18162,\n\t            line: 554,\n\t            col: 82,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 18100,\n\t          line: 554,\n\t          col: 20,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.prettyLog = sibilant.macros.namespaces.core.logPretty;\n\t  sibilant.macros.namespaces.core.each = (function each$(item, array, body) {\n\t    /* each include/macros.sibilant:567:17 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 18958,\n\t      line: 568,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 18959,\n\t        line: 568,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"for-each\",\n\t          type: \"literal\",\n\t          start: 18960,\n\t          line: 568,\n\t          col: 10,\n\t          length: 8,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, array, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 18995,\n\t        line: 569,\n\t        col: 19,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"lambda\",\n\t          type: \"literal\",\n\t          start: 18996,\n\t          line: 569,\n\t          col: 20,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          node: this,\n\t          args: (function() {\n\t            if (node__QUERY(item, \"expression\")) {\n\t              return item;\n\t            } else {\n\t              return [ item ];\n\t            }\n\t          }).call(this)\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 18975,\n\t          line: 568,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"                   \",\n\t          type: \"whitespace\",\n\t          start: 18976,\n\t          line: 569,\n\t          col: 0,\n\t          length: 19,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.macroExpand = (function macroExpand$(name) {\n\t    /* macro-expand include/macros.sibilant:582:0 */\n\t  \n\t    var macro = macros[outputFormatter(transpile(name))];\n\t    return (function() {\n\t      if (macro) {\n\t        return macro.toString();\n\t      } else {\n\t        return \"undefined\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.throw = (function throw$(error) {\n\t    /* throw include/macros.sibilant:595:0 */\n\t  \n\t    return [ \"throw \", transpile(error) ];\n\t  });\n\t  sibilant.macros.namespaces.core.asBoolean = (function asBoolean$(expr) {\n\t    /* as-boolean include/macros.sibilant:606:0 */\n\t  \n\t    return [ \"(!!(\", transpile(expr), \"))\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.try = (function try$(tryblock, catchblock) {\n\t    /* try include/macros.sibilant:612:0 */\n\t  \n\t    return [ \"(function() {\", indent([ \"try {\", indent({\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 19928,\n\t      line: 615,\n\t      col: 26,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 19929,\n\t        line: 615,\n\t        col: 27,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, tryblock ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"} catch (e) {\", indent({\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 20003,\n\t      line: 617,\n\t      col: 26,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 20004,\n\t        line: 617,\n\t        col: 27,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, catchblock ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.state = (function state$(pairs) {\n\t    /* state include/macros.sibilant:629:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (function() {\n\t      if (1 === pairs.length) {\n\t        return sibilant.state[outputFormatter(transpile(pairs[0]))];\n\t      } else {\n\t        bulkMap(pairs, (function(k, v) {\n\t          /* include/macros.sibilant:632:31 */\n\t        \n\t          return sibilant.state[outputFormatter(transpile(k))] = eval(outputFormatter(transpile(v)));\n\t        }));\n\t        return null;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.symbol = (function symbol$() {\n\t    /* symbol include/macros.sibilant:638:0 */\n\t  \n\t    var symbolCount = (sibilant.state.symbolCount || 0),\n\t        newSymbolCount = (1 + symbolCount);\n\t    sibilant.macros.namespaces.core.state(\"symbolCount\", newSymbolCount);\n\t    return [ (\"$_symbol\" + newSymbolCount + \"_$\") ];\n\t  });\n\t  sibilant.macros.namespaces.core.while = (function while$(condition, body) {\n\t    /* while include/macros.sibilant:653:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    var symbol = sibilant.macros.namespaces.core.symbol();\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 21141,\n\t      line: 655,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"*scoped-without-source\",\n\t        type: \"literal\",\n\t        start: 21142,\n\t        line: 655,\n\t        col: 9,\n\t        length: 22,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 21174,\n\t        line: 656,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"var\",\n\t          type: \"literal\",\n\t          start: 21175,\n\t          line: 656,\n\t          col: 10,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, symbol ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 21164,\n\t          line: 655,\n\t          col: 31,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          start: 21165,\n\t          line: 656,\n\t          col: 0,\n\t          length: 9,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        type: \"output\",\n\t        contents: [ \"while (\", transpile(condition), \") {\", indent({\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 21311,\n\t          line: 659,\n\t          col: 35,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"assign\",\n\t            type: \"literal\",\n\t            start: 21312,\n\t            line: 659,\n\t            col: 36,\n\t            length: 6,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, symbol, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 21327,\n\t            line: 659,\n\t            col: 51,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"*scoped-without-source\",\n\t              type: \"literal\",\n\t              start: 21328,\n\t              line: 659,\n\t              col: 52,\n\t              length: 22,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ].concat(body),\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 21326,\n\t              line: 659,\n\t              col: 50,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          } ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }), \"}\" ]\n\t      }, symbol ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.until = (function until$(condition, body) {\n\t    /* until include/macros.sibilant:672:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 21720,\n\t      line: 673,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"while\",\n\t        type: \"literal\",\n\t        start: 21721,\n\t        line: 673,\n\t        col: 9,\n\t        length: 5,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 21727,\n\t        line: 673,\n\t        col: 15,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"not\",\n\t          type: \"literal\",\n\t          start: 21728,\n\t          line: 673,\n\t          col: 16,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, condition ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 21726,\n\t          line: 673,\n\t          col: 14,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"match__QUERY\"] = (function match__QUERY$(regexp, string) {\n\t    /* match? include/macros.sibilant:682:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 22001,\n\t      line: 683,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 22002,\n\t        line: 683,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"match\",\n\t          type: \"literal\",\n\t          start: 22003,\n\t          line: 683,\n\t          col: 10,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, regexp ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"matchRegex__QUERY\"] = (function matchRegex__QUERY$(string, pattern, flags) {\n\t    /* match-regex? include/macros.sibilant:688:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 22237,\n\t      line: 689,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"match?\",\n\t        type: \"literal\",\n\t        start: 22238,\n\t        line: 689,\n\t        col: 9,\n\t        length: 6,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 22245,\n\t        line: 689,\n\t        col: 16,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          start: 22246,\n\t          line: 689,\n\t          col: 17,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern, flags ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 22244,\n\t          line: 689,\n\t          col: 15,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, string ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.replace = (function replace$(string, pattern, replacement) {\n\t    /* replace include/macros.sibilant:695:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 22499,\n\t      line: 696,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 22500,\n\t        line: 696,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"replace\",\n\t          type: \"literal\",\n\t          start: 22501,\n\t          line: 696,\n\t          col: 10,\n\t          length: 7,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 22531,\n\t        line: 697,\n\t        col: 14,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          start: 22532,\n\t          line: 697,\n\t          col: 15,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 22516,\n\t          line: 696,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"              \",\n\t          type: \"whitespace\",\n\t          start: 22517,\n\t          line: 697,\n\t          col: 0,\n\t          length: 14,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, replacement ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.replaceAll = (function replaceAll$(string, pattern, replacement) {\n\t    /* replace-all include/macros.sibilant:703:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 22796,\n\t      line: 704,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 22797,\n\t        line: 704,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"replace\",\n\t          type: \"literal\",\n\t          start: 22798,\n\t          line: 704,\n\t          col: 10,\n\t          length: 7,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 22814,\n\t        line: 704,\n\t        col: 26,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          start: 22815,\n\t          line: 704,\n\t          col: 27,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":22830,\"line\":704,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"g\",\"type\":\"literal\",\"start\":22831,\"line\":704,\"col\":43,\"length\":1,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":22829,\"line\":704,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 22813,\n\t          line: 704,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, replacement ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.thunk = (function thunk$(body) {\n\t    /* thunk include/macros.sibilant:717:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var node = this,\n\t        lambdaOptions = {\n\t      node: node,\n\t      args: []\n\t    };\n\t    (function() {\n\t      if (!(node__QUERY(body[0]))) {\n\t        mergeInto(lambdaOptions, body[0]);\n\t        return body = body.slice(1);\n\t      }\n\t    }).call(this);\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 23419,\n\t      line: 725,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"lambda\",\n\t        type: \"literal\",\n\t        start: 23420,\n\t        line: 725,\n\t        col: 9,\n\t        length: 6,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, lambdaOptions ].concat(mapNode(body, (function(node) {\n\t        /* include/macros.sibilant:727:17 */\n\t      \n\t        return (function() {\n\t          if (node__QUERY(node, \"argPlaceholder\")) {\n\t            return {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 23572,\n\t              line: 729,\n\t              col: 24,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"include\",\n\t                file: \"include/macros.sibilant\",\n\t                token: \"argument\",\n\t                type: \"literal\",\n\t                start: 23573,\n\t                line: 729,\n\t                col: 25,\n\t                length: 8,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, node.token.replace((new RegExp(\"^#\", undefined)), \"\") ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            };\n\t          } else {\n\t            return node;\n\t          }\n\t        }).call(this);\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"#>\"] = sibilant.macros.namespaces.core.thunk;\n\t  sibilant.macros.namespaces.core.pipeThunk = (function pipeThunk$(calls) {\n\t    /* pipe-thunk include/macros.sibilant:740:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 23953,\n\t      line: 740,\n\t      col: 30,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"thunk\",\n\t        type: \"literal\",\n\t        start: 23954,\n\t        line: 740,\n\t        col: 31,\n\t        length: 5,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, { node: this }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 23975,\n\t        line: 740,\n\t        col: 52,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"pipe\",\n\t          type: \"literal\",\n\t          start: 23976,\n\t          line: 740,\n\t          col: 53,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"#0\",\n\t          type: \"argPlaceholder\",\n\t          start: 23981,\n\t          line: 740,\n\t          col: 58,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 23980,\n\t            line: 740,\n\t            col: 57,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ].concat(calls),\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 23974,\n\t          line: 740,\n\t          col: 51,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"#->\"] = sibilant.macros.namespaces.core.pipeThunk;\n\t  sibilant.macros.namespaces.core.keys = (function keys$(obj) {\n\t    /* keys include/macros.sibilant:752:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 24287,\n\t      line: 753,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"Object.keys\",\n\t        type: \"literal\",\n\t        start: 24288,\n\t        line: 753,\n\t        col: 9,\n\t        length: 11,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, obj ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.delete = (function delete$(objects) {\n\t    /* delete include/macros.sibilant:765:0 */\n\t  \n\t    var objects = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", map(objects, (function(obj) {\n\t      /* include/macros.sibilant:766:37 */\n\t    \n\t      return asStatement([ \"delete \", transpile(obj) ]);\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.deleteMacro = (function deleteMacro$(macroNames) {\n\t    /* delete-macro include/macros.sibilant:777:0 */\n\t  \n\t    var macroNames = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    macroNames.forEach((function(macroName) {\n\t      /* include/macros.sibilant:778:7 */\n\t    \n\t      return delete sibilant.macros.namespace[outputFormatter(transpile(macroName))];\n\t    }));\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.delmacro = sibilant.macros.namespaces.core.deleteMacro;\n\t  sibilant.macros.namespaces.core.renameMacro = (function renameMacro$(currentMacroName, newMacroName) {\n\t    /* rename-macro include/macros.sibilant:790:0 */\n\t  \n\t    sibilant.macros.namespaces.core.aliasMacro(currentMacroName, newMacroName);\n\t    sibilant.macros.namespaces.core.deleteMacro(currentMacroName);\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.arguments = (function arguments$() {\n\t    /* arguments include/macros.sibilant:805:0 */\n\t  \n\t    return [ \"(Array.prototype.slice.apply(arguments))\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.argument = (function argument$(index) {\n\t    /* argument include/macros.sibilant:817:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 25873,\n\t      line: 818,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 25874,\n\t        line: 818,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"arguments\",\n\t        type: \"literal\",\n\t        start: 25878,\n\t        line: 818,\n\t        col: 13,\n\t        length: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 25877,\n\t          line: 818,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, index ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.eachKey = (function eachKey$(as, obj, body) {\n\t    /* each-key include/macros.sibilant:826:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 26081,\n\t      line: 827,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        start: 26082,\n\t        line: 827,\n\t        col: 9,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, obj, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 26092,\n\t        line: 827,\n\t        col: 19,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"keys\",\n\t          type: \"literal\",\n\t          start: 26093,\n\t          line: 827,\n\t          col: 20,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 26091,\n\t          line: 827,\n\t          col: 18,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 26113,\n\t        line: 828,\n\t        col: 14,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 26114,\n\t          line: 828,\n\t          col: 15,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"for-each\",\n\t            type: \"literal\",\n\t            start: 26115,\n\t            line: 828,\n\t            col: 16,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 26124,\n\t          line: 828,\n\t          col: 25,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"lambda\",\n\t            type: \"literal\",\n\t            start: 26125,\n\t            line: 828,\n\t            col: 26,\n\t            length: 6,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            args: (function() {\n\t              if (node__QUERY(as, \"expression\")) {\n\t                return as;\n\t              } else {\n\t                return [ as ];\n\t              }\n\t            }).call(this),\n\t            node: this\n\t          } ].concat(body),\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 26123,\n\t            line: 828,\n\t            col: 24,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 26098,\n\t          line: 827,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"              \",\n\t          type: \"whitespace\",\n\t          start: 26099,\n\t          line: 828,\n\t          col: 0,\n\t          length: 14,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.switch = (function switch$(obj, cases) {\n\t    /* switch include/macros.sibilant:849:0 */\n\t  \n\t    var cases = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(function() {\", indent([ \"switch(\", transpile(obj), \") {\", map(cases, (function(caseDef) {\n\t      /* include/macros.sibilant:852:30 */\n\t    \n\t      var caseNameNode = caseDef.contents[0],\n\t          caseLabels = (function() {\n\t        if (node__QUERY(caseNameNode, \"expression\", \"bracket\")) {\n\t          return caseNameNode.contents;\n\t        } else {\n\t          return [ caseNameNode ];\n\t        }\n\t      }).call(this),\n\t          caseString = interleave(\"\\n\", map(caseLabels, (function(c) {\n\t        /* include/macros.sibilant:858:78 */\n\t      \n\t        return (function() {\n\t          if (\"default\" === c.token) {\n\t            return \"default:\";\n\t          } else {\n\t            return [ \"case \", transpile(c), \":\" ];\n\t          }\n\t        }).call(this);\n\t      })));\n\t      return [ \"\\n\", caseString, indent({\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 27770,\n\t        line: 862,\n\t        col: 59,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"do\",\n\t          type: \"literal\",\n\t          start: 27771,\n\t          line: 862,\n\t          col: 60,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(caseDef.contents.slice(1)),\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }) ];\n\t    })), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.if = (function if$(alternatingConditionsAndBranches) {\n\t    /* if include/macros.sibilant:894:0 */\n\t  \n\t    var alternatingConditionsAndBranches = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(function() {\", indent(interleave(\" else \", bulkMap(alternatingConditionsAndBranches, (function(cond, val) {\n\t      /* include/macros.sibilant:899:25 */\n\t    \n\t      return (function() {\n\t        if (typeof val !== \"undefined\") {\n\t          return [ \"if (\", transpile(cond), \") {\", indent({\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 29046,\n\t            line: 902,\n\t            col: 44,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"do\",\n\t              type: \"literal\",\n\t              start: 29047,\n\t              line: 902,\n\t              col: 45,\n\t              length: 2,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, val ],\n\t            precedingIgnored: [],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }), \"}\" ];\n\t        } else {\n\t          return [ \"{\", indent({\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 29144,\n\t            line: 904,\n\t            col: 47,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"do\",\n\t              type: \"literal\",\n\t              start: 29145,\n\t              line: 904,\n\t              col: 48,\n\t              length: 2,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, cond ],\n\t            precedingIgnored: [],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }), \"}\" ];\n\t        }\n\t      }).call(this);\n\t    })))), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.chain = (function chain$(object, calls) {\n\t    /* chain include/macros.sibilant:923:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    console.log(\"DEPRECATION WARNING: DO NOT USE CHAIN\");\n\t    console.log((\"  \" + this.file + \":\" + this.line + \":\" + this.col));\n\t    return (function() {\n\t      if (0 === calls.length) {\n\t        return transpile(object);\n\t      } else if (1 === calls.length) {\n\t        return {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 29687,\n\t          line: 927,\n\t          col: 31,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"send\",\n\t            type: \"literal\",\n\t            start: 29688,\n\t            line: 927,\n\t            col: 32,\n\t            length: 4,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, object ].concat(calls[0].contents),\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      } else {\n\t        var lines = map(calls, (function(call, index) {\n\t          /* include/macros.sibilant:929:34 */\n\t        \n\t          return [ \".\", transpile(call.contents[0]), \"(\", interleave(\", \", map(call.contents.slice(1), transpile)), \")\" ];\n\t        }));\n\t        return [ transpile(object), lines[0], \"\\n  \", recurseIndent(interleave(\"\\n\", lines.slice(1))) ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core[\"instanceOf__QUERY\"] = (function instanceOf__QUERY$(item, type) {\n\t    /* instance-of? include/macros.sibilant:948:0 */\n\t  \n\t    return [ \"(\", transpile(item), \" instanceof \", transpile(type), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"includes__QUERY\"] = (function includes__QUERY$(haystack, needle) {\n\t    /* includes? include/macros.sibilant:959:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 30666,\n\t      line: 960,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        start: 30667,\n\t        line: 960,\n\t        col: 9,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, haystack, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 30682,\n\t        line: 960,\n\t        col: 24,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 30683,\n\t          line: 960,\n\t          col: 25,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"index-of\",\n\t            type: \"literal\",\n\t            start: 30684,\n\t            line: 960,\n\t            col: 26,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, needle ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 30681,\n\t          line: 960,\n\t          col: 23,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 30702,\n\t        line: 960,\n\t        col: 44,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 30703,\n\t          line: 960,\n\t          col: 45,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          start: 30706,\n\t          line: 960,\n\t          col: 48,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 30705,\n\t            line: 960,\n\t            col: 47,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 30701,\n\t          line: 960,\n\t          col: 43,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"excludes__QUERY\"] = (function excludes__QUERY$(haystack, needle) {\n\t    /* excludes? include/macros.sibilant:972:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 30979,\n\t      line: 973,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        start: 30980,\n\t        line: 973,\n\t        col: 9,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, haystack, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 30995,\n\t        line: 973,\n\t        col: 24,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 30996,\n\t          line: 973,\n\t          col: 25,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"index-of\",\n\t            type: \"literal\",\n\t            start: 30997,\n\t            line: 973,\n\t            col: 26,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, needle ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 30994,\n\t          line: 973,\n\t          col: 23,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 31015,\n\t        line: 973,\n\t        col: 44,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          start: 31016,\n\t          line: 973,\n\t          col: 45,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          start: 31018,\n\t          line: 973,\n\t          col: 47,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 31017,\n\t            line: 973,\n\t            col: 46,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 31014,\n\t          line: 973,\n\t          col: 43,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"exists__QUERY\"] = (function exists__QUERY$(thing) {\n\t    /* exists? include/macros.sibilant:983:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 31233,\n\t      line: 984,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 31234,\n\t        line: 984,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 31238,\n\t        line: 984,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"defined?\",\n\t          type: \"literal\",\n\t          start: 31239,\n\t          line: 984,\n\t          col: 14,\n\t          length: 8,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 31237,\n\t          line: 984,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 31256,\n\t        line: 984,\n\t        col: 31,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 31257,\n\t          line: 984,\n\t          col: 32,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"null\",\n\t          type: \"literal\",\n\t          start: 31267,\n\t          line: 984,\n\t          col: 42,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 31266,\n\t            line: 984,\n\t            col: 41,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 31255,\n\t          line: 984,\n\t          col: 30,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.withState = (function withState$(k, v, body) {\n\t    /* with-state include/macros.sibilant:990:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var before = sibilant.macros.namespaces.core.state(k);\n\t    sibilant.macros.namespaces.core.state(k, v);\n\t    var returnValue = interleave(\"\\n\", map(body, transpile));\n\t    sibilant.macros.namespaces.core.state(k, before);\n\t    return returnValue;\n\t  });\n\t  sibilant.macros.namespaces.core.join = (function join$(arr, glue) {\n\t    /* join include/macros.sibilant:1012:0 */\n\t  \n\t    (function() {\n\t      if ((typeof glue !== \"undefined\" && typeof arr === \"undefined\")) {\n\t        arr = glue;\n\t        return glue = undefined;\n\t      }\n\t    }).call(this);\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 31967,\n\t      line: 1015,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 31968,\n\t        line: 1015,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"join\",\n\t          type: \"literal\",\n\t          start: 31969,\n\t          line: 1015,\n\t          col: 10,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arr, (glue || \"\\\"\\\"\") ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.parens = (function parens$(node) {\n\t    /* parens include/macros.sibilant:1017:0 */\n\t  \n\t    return [ \"(\", node, \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"_destructure\"] = (function _destructure$(pairs) {\n\t    /* *destructure include/macros.sibilant:1021:0 */\n\t  \n\t    var destructured = [];\n\t    bulkMap(pairs, (function(lhs, rhs) {\n\t      /* include/macros.sibilant:1023:21 */\n\t    \n\t      var transpiledRhs = transpile(rhs);\n\t      return (function() {\n\t        switch(lhs.type) {\n\t        case \"bracket\":\n\t          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n\t              source = (function() {\n\t            if (literalRhs__QUERY) {\n\t              return transpiledRhs;\n\t            } else {\n\t              var symbol = sibilant.macros.namespaces.core.symbol();\n\t              destructured.push([ symbol, transpiledRhs ]);\n\t              return symbol;\n\t            }\n\t          }).call(this);\n\t          lhs.contents.forEach((function(item, index) {\n\t            /* include/macros.sibilant:1033:32 */\n\t          \n\t            return destructured.push([ transpile(item), {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 32968,\n\t              line: 1034,\n\t              col: 76,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"include\",\n\t                file: \"include/macros.sibilant\",\n\t                token: \"get\",\n\t                type: \"literal\",\n\t                start: 32969,\n\t                line: 1034,\n\t                col: 77,\n\t                length: 3,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, source, index ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ]);\n\t          }));\n\t          return (function() {\n\t            if (!(literalRhs__QUERY)) {\n\t              return destructured.push([ source, \"undefined\" ]);\n\t            }\n\t          }).call(this);\n\t        \n\t        case \"brace\":\n\t          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n\t              source = (function() {\n\t            if (literalRhs__QUERY) {\n\t              return transpiledRhs;\n\t            } else if (1 === lhs.contents.length) {\n\t              return [ \"(\", rhs, \")\" ];\n\t            } else {\n\t              var symbol = sibilant.macros.namespaces.core.symbol();\n\t              destructured.push([ symbol, transpiledRhs ]);\n\t              return symbol;\n\t            }\n\t          }).call(this);\n\t          lhs.contents.forEach((function(item, index) {\n\t            /* include/macros.sibilant:1046:32 */\n\t          \n\t            var trItem = transpile(item);\n\t            return destructured.push([ trItem, {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 34059,\n\t              line: 1048,\n\t              col: 67,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"include\",\n\t                file: \"include/macros.sibilant\",\n\t                token: \"get\",\n\t                type: \"literal\",\n\t                start: 34060,\n\t                line: 1048,\n\t                col: 68,\n\t                length: 3,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, source, [ \"\\\"\", trItem, \"\\\"\" ] ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ]);\n\t          }));\n\t          return (function() {\n\t            if (!((literalRhs__QUERY || 1 === lhs.contents.length))) {\n\t              return destructured.push([ source, \"undefined\" ]);\n\t            }\n\t          }).call(this);\n\t        \n\t        default:\n\t          return destructured.push([ transpile(lhs), (function() {\n\t            if (rhs) {\n\t              return transpiledRhs;\n\t            } else {\n\t              return \"undefined\";\n\t            }\n\t          }).call(this) ]);\n\t        }\n\t      }).call(this);\n\t    }));\n\t    return destructured;\n\t  });\n\t  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n\t    /* var include/macros.sibilant:1070:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return asStatement([ \"var \", interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n\t      /* include/macros.sibilant:1074:25 */\n\t    \n\t      return [ pair[0], \" = \", pair[1] ];\n\t    })), \",\\n    \") ]);\n\t  });\n\t  sibilant.macros.namespaces.core.assign = (function assign$(pairs) {\n\t    /* assign include/macros.sibilant:1093:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n\t      /* include/macros.sibilant:1096:17 */\n\t    \n\t      return asStatement([ pair[0], \" = \", pair[1] ]);\n\t    })), \"\\n\");\n\t  });\n\t  sibilant.macros.namespaces.core.default = (function default$(pairs) {\n\t    /* default include/macros.sibilant:1104:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", bulkMap(pairs, (function(name, value) {\n\t      /* include/macros.sibilant:1105:40 */\n\t    \n\t      return {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 36165,\n\t        line: 1106,\n\t        col: 35,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"assign\",\n\t          type: \"literal\",\n\t          start: 36166,\n\t          line: 1106,\n\t          col: 36,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, name, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 36179,\n\t          line: 1106,\n\t          col: 49,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"ternary\",\n\t            type: \"literal\",\n\t            start: 36180,\n\t            line: 1106,\n\t            col: 50,\n\t            length: 7,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 36188,\n\t            line: 1106,\n\t            col: 58,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"defined?\",\n\t              type: \"literal\",\n\t              start: 36189,\n\t              line: 1106,\n\t              col: 59,\n\t              length: 8,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, name ],\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 36187,\n\t              line: 1106,\n\t              col: 57,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, name, value ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 36178,\n\t            line: 1106,\n\t            col: 48,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      };\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.importNamespace = (function importNamespace$(namespace) {\n\t    /* import-namespace include/macros.sibilant:1109:0 */\n\t  \n\t    var namespaceAsString = outputFormatter(transpile(namespace));\n\t    (function() {\n\t      if (!(sibilant.macros.namespaces.hasOwnProperty(namespaceAsString))) {\n\t        return sibilant.macros.namespaces[namespaceAsString] = {  };\n\t      }\n\t    }).call(this);\n\t    sibilant.macros.searchPath.unshift(namespaceAsString);\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core.namespace = (function namespace$(namespace) {\n\t    /* namespace include/macros.sibilant:1117:0 */\n\t  \n\t    sibilant.macros.namespaces.core.importNamespace(namespace);\n\t    sibilant.macros.namespace = sibilant.macros.namespaces[outputFormatter(transpile(namespace))];\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core[\"hasKey__QUERY\"] = (function hasKey__QUERY$(object, key) {\n\t    /* has-key? include/macros.sibilant:1132:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 36973,\n\t      line: 1133,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 36974,\n\t        line: 1133,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"has-own-property\",\n\t          type: \"literal\",\n\t          start: 36975,\n\t          line: 1133,\n\t          col: 10,\n\t          length: 16,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, object, key ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n\t    /* get include/macros.sibilant:1154:0 */\n\t  \n\t    var keys = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ transpile(obj), map(keys, (function(key) {\n\t      /* include/macros.sibilant:1156:19 */\n\t    \n\t      var transpiled = transpile(key),\n\t          output = outputFormatter(transpiled);\n\t      return (function() {\n\t        if (output.match((new RegExp(\"^\\\"[a-zA-Z0-9]+\\\"$\", undefined)))) {\n\t          return [ \".\", output.replace((new RegExp(\"\\\"\", \"g\")), \"\") ];\n\t        } else {\n\t          return [ \"[\", transpiled, \"]\" ];\n\t        }\n\t      }).call(this);\n\t    })) ];\n\t  });\n\t  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n\t    /* set include/macros.sibilant:1183:0 */\n\t  \n\t    var kvPairs = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n\t      /* include/macros.sibilant:1184:43 */\n\t    \n\t      return {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 38641,\n\t        line: 1184,\n\t        col: 52,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"assign\",\n\t          type: \"literal\",\n\t          start: 38642,\n\t          line: 1184,\n\t          col: 53,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 38649,\n\t          line: 1184,\n\t          col: 60,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            start: 38650,\n\t            line: 1184,\n\t            col: 61,\n\t            length: 3,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, arr, k ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 38648,\n\t            line: 1184,\n\t            col: 59,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, v ],\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      };\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core[\"lowerCase__QUERY\"] = (function lowerCase__QUERY$(str) {\n\t    /* lower-case? include/macros.sibilant:1189:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 38838,\n\t      line: 1190,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 38839,\n\t        line: 1190,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 38841,\n\t        line: 1190,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 38842,\n\t          line: 1190,\n\t          col: 12,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"to-lower-case\",\n\t            type: \"literal\",\n\t            start: 38843,\n\t            line: 1190,\n\t            col: 13,\n\t            length: 13,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 38840,\n\t          line: 1190,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, str ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"upperCase__QUERY\"] = (function upperCase__QUERY$(str) {\n\t    /* upper-case? include/macros.sibilant:1197:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 39039,\n\t      line: 1198,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 39040,\n\t        line: 1198,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 39042,\n\t        line: 1198,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 39043,\n\t          line: 1198,\n\t          col: 12,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"to-upper-case\",\n\t            type: \"literal\",\n\t            start: 39044,\n\t            line: 1198,\n\t            col: 13,\n\t            length: 13,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 39041,\n\t          line: 1198,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, str ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.sourceMappingUrl = (function sourceMappingUrl$(url) {\n\t    /* source-mapping-url include/macros.sibilant:1205:0 */\n\t  \n\t    return [ \"//# sourceMappingURL=\", eval(outputFormatter(transpile(url))), \"\\n\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.sortBy = (function sortBy$(arrayOfObjects, attribute) {\n\t    /* sort-by include/macros.sibilant:1214:0 */\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 39678,\n\t      line: 1215,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 39679,\n\t        line: 1215,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"sort\",\n\t          type: \"literal\",\n\t          start: 39680,\n\t          line: 1215,\n\t          col: 10,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arrayOfObjects, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 39718,\n\t        line: 1216,\n\t        col: 15,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"#->\",\n\t          type: \"otherChar\",\n\t          start: 39719,\n\t          line: 1216,\n\t          col: 16,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 39723,\n\t          line: 1216,\n\t          col: 20,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            start: 39724,\n\t            line: 1216,\n\t            col: 21,\n\t            length: 3,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, attribute ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 39722,\n\t            line: 1216,\n\t            col: 19,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 39760,\n\t          line: 1217,\n\t          col: 20,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"to-string\",\n\t            type: \"literal\",\n\t            start: 39761,\n\t            line: 1217,\n\t            col: 21,\n\t            length: 9,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"\\n\",\n\t            type: \"newline\",\n\t            start: 39739,\n\t            line: 1216,\n\t            col: 36,\n\t            length: 1,\n\t            contents: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"                    \",\n\t            type: \"whitespace\",\n\t            start: 39740,\n\t            line: 1217,\n\t            col: 0,\n\t            length: 20,\n\t            contents: []\n\t          } ]\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 39791,\n\t          line: 1218,\n\t          col: 20,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \".\",\n\t            type: \"dots\",\n\t            start: 39792,\n\t            line: 1218,\n\t            col: 21,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"locale-compare\",\n\t              type: \"literal\",\n\t              start: 39793,\n\t              line: 1218,\n\t              col: 22,\n\t              length: 14,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ],\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 39808,\n\t            line: 1218,\n\t            col: 37,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"get\",\n\t              type: \"literal\",\n\t              start: 39809,\n\t              line: 1218,\n\t              col: 38,\n\t              length: 3,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"#1\",\n\t              type: \"argPlaceholder\",\n\t              start: 39813,\n\t              line: 1218,\n\t              col: 42,\n\t              length: 2,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: [ {\n\t                dir: \"include\",\n\t                file: \"include/macros.sibilant\",\n\t                token: \" \",\n\t                type: \"whitespace\",\n\t                start: 39812,\n\t                line: 1218,\n\t                col: 41,\n\t                length: 1,\n\t                contents: []\n\t              } ]\n\t            }, attribute ],\n\t            precedingIgnored: [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 39807,\n\t              line: 1218,\n\t              col: 36,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          } ],\n\t          precedingIgnored: [ {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"\\n\",\n\t            type: \"newline\",\n\t            start: 39770,\n\t            line: 1217,\n\t            col: 30,\n\t            length: 1,\n\t            contents: []\n\t          }, {\n\t            dir: \"include\",\n\t            file: \"include/macros.sibilant\",\n\t            token: \"                    \",\n\t            type: \"whitespace\",\n\t            start: 39771,\n\t            line: 1218,\n\t            col: 0,\n\t            length: 20,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 39702,\n\t          line: 1215,\n\t          col: 32,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \"               \",\n\t          type: \"whitespace\",\n\t          start: 39703,\n\t          line: 1216,\n\t          col: 0,\n\t          length: 15,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"require__BANG\"] = (function require__BANG$(requires) {\n\t    /* require! include/macros.sibilant:1221:0 */\n\t  \n\t    var requires = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 39872,\n\t      line: 1222,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"var\",\n\t        type: \"literal\",\n\t        start: 39873,\n\t        line: 1222,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(inject([], requires, (function(pairs, node) {\n\t        /* include/macros.sibilant:1223:25 */\n\t      \n\t        return pairs.concat((function() {\n\t          if ((0 === (pairs.length % 2) && node__QUERY(node, \"tick\", \"string\"))) {\n\t            return [ mergeInto(clone(node), {\n\t              token: outputFormatter(transpile(node)).slice(1, -1),\n\t              contents: [],\n\t              type: \"literal\"\n\t            }), {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 40481,\n\t              line: 1233,\n\t              col: 33,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"include\",\n\t                file: \"include/macros.sibilant\",\n\t                token: \"require\",\n\t                type: \"literal\",\n\t                start: 40482,\n\t                line: 1233,\n\t                col: 34,\n\t                length: 7,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, node ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ];\n\t          } else if (1 === (pairs.length % 2)) {\n\t            return [ {\n\t              dir: \"include\",\n\t              file: \"include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 40589,\n\t              line: 1236,\n\t              col: 36,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"include\",\n\t                file: \"include/macros.sibilant\",\n\t                token: \"require\",\n\t                type: \"literal\",\n\t                start: 40590,\n\t                line: 1236,\n\t                col: 37,\n\t                length: 7,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, node ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ];\n\t          } else {\n\t            return [ node ];\n\t          }\n\t        }).call(this));\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.export = (function export$(localVars) {\n\t    /* export include/macros.sibilant:1241:0 */\n\t  \n\t    var localVars = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var pairs = localVars.reduce((function(acc, value) {\n\t      /* include/macros.sibilant:1243:19 */\n\t    \n\t      return acc.concat([ sibilant.macros.namespaces.core.quote(value), value ]);\n\t    }), []);\n\t    return {\n\t      dir: \"include\",\n\t      file: \"include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 40832,\n\t      line: 1245,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"set\",\n\t        type: \"literal\",\n\t        start: 40833,\n\t        line: 1245,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"include\",\n\t        file: \"include/macros.sibilant\",\n\t        token: \"exports\",\n\t        type: \"literal\",\n\t        start: 40837,\n\t        line: 1245,\n\t        col: 13,\n\t        length: 7,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"include\",\n\t          file: \"include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 40836,\n\t          line: 1245,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ].concat(pairs),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.return = (function return$(token) {\n\t    /* return include/macros.sibilant:1248:0 */\n\t  \n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(\"returning \", prettify(token));\n\t      }\n\t    }).call(this);\n\t    var defaultReturn = asStatement([ \"return \", transpile(token) ]);\n\t    return (function() {\n\t      if ((token && token.contents && token.contents.length)) {\n\t        return (function() {\n\t          switch(token.contents[0].token) {\n\t          case \"return\":\n\t          case \"throw\":\n\t          case \"do\":\n\t            return transpile(token);\n\t          \n\t          case \"delete\":\n\t            var deleteMacro = macros.delete;\n\t            return (function() {\n\t              if (token.contents.length < 3) {\n\t                return defaultReturn;\n\t              } else {\n\t                return [ asStatement(deleteMacro.apply(this, token.contents.slice(1, -1))), \"\\nreturn \", asStatement(deleteMacro(token.contents.slice(-1)[0])) ];\n\t              }\n\t            }).call(this);\n\t          \n\t          case \"def\":\n\t            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return(token.contents[1]) ];\n\t          \n\t          case \"assign\":\n\t            return (function() {\n\t              if (token.contents.length < 4) {\n\t                return defaultReturn;\n\t              } else {\n\t                var result = clone(transpile(token));\n\t                result.contents = result.contents.slice(0, -4).concat([ \"return \" ], result.contents.slice(-4));\n\t                return result;\n\t              }\n\t            }).call(this);\n\t          \n\t          case \"var\":\n\t            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return((function() {\n\t              if (0 === (token.contents.length % 2)) {\n\t                return token.contents.slice(-1)[0];\n\t              } else {\n\t                return token.contents.slice(-2)[0];\n\t              }\n\t            }).call(this)) ];\n\t          \n\t          case \"set\":\n\t            return (function() {\n\t              if (token.contents.length < 5) {\n\t                return defaultReturn;\n\t              } else {\n\t                var obj = token.contents[1],\n\t                    nonReturnPart = token.contents.slice(2, (token.contents.length - 2)),\n\t                    returnPart = token.contents.slice(-2);\n\t                nonReturnPart.unshift(obj);\n\t                returnPart.unshift(obj);\n\t                return [ sibilant.macros.namespaces.core.set.apply(this, nonReturnPart), \"\\nreturn \", sibilant.macros.namespaces.core.set.apply(this, returnPart) ];\n\t              }\n\t            }).call(this);\n\t          \n\t          default:\n\t            return defaultReturn;\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        return defaultReturn;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.do = (function do$(body) {\n\t    /* do include/macros.sibilant:1295:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (function() {\n\t      if (1 === body.length) {\n\t        return sibilant.macros.namespaces.core.return(body[0]);\n\t      } else if (body.length) {\n\t        return [ interleave(map(body.slice(0, -1), (function() {\n\t          /* include/macros.sibilant:1303:19 */\n\t        \n\t          return asStatement(arguments[0]);\n\t        })), \"\\n\"), \"\\n\", sibilant.macros.namespaces.core.return(body.slice(-1)[0]) ];\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.emptyList = (function emptyList$() {\n\t    /* empty-list include/macros.sibilant:1310:0 */\n\t  \n\t    return \"null\";\n\t  });\n\t  sibilant.macros.namespaces.core.def = (function def$(name, args, body) {\n\t    /* def include/macros.sibilant:1321:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    (function() {\n\t      if (typeof name === \"undefined\") {\n\t        return error(\"invalid function definition. missing name.\");\n\t      } else if (typeof args === \"undefined\") {\n\t        return error(\"invalid function definition. missing arguments or return value.\");\n\t      }\n\t    }).call(this);\n\t    var nameTr = transpile(name),\n\t        thisNode = this;\n\t    sibilant.docs.record(\"function\", sibilant.macros.searchPath[0], name, this);\n\t    return asStatement([ (function() {\n\t      if (outputFormatter(nameTr).match((new RegExp(\"\\\\.\", undefined)))) {\n\t        return \"\";\n\t      } else {\n\t        return \"var \";\n\t      }\n\t    }).call(this), nameTr, \" = \", sibilant.macros.namespaces.core.lambda({\n\t      name: name,\n\t      args: args,\n\t      node: thisNode,\n\t      body: body\n\t    }) ]);\n\t  });\n\t  sibilant.macros.namespaces.core.macro = (function macro$(name, args, body) {\n\t    /* macro include/macros.sibilant:1345:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var nameTr = outputFormatter(transpile(name)),\n\t        options = {\n\t      name: name,\n\t      args: args,\n\t      node: this\n\t    },\n\t        js = outputFormatter(sibilant.macros.namespaces.core.lambda.apply(this, [ options ].concat(body)));\n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(js);\n\t      }\n\t    }).call(this);\n\t    sibilant.docs.record(\"macro\", sibilant.macros.searchPath[0], name, this);\n\t    var evaledJs = (function() {\n\t      try {\n\t        return eval(js);\n\t      } catch (e) {\n\t        console.log(e.message);\n\t        console.log(red(e.stack.split(\"\\n\")[1]));\n\t        return console.log((\"error in parsing macro \" + sibilant.prettyPrint(name) + \":\\n\" + js));\n\t      }\n\t    }).call(this);\n\t    sibilant.macros.namespace[nameTr] = evaledJs;\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core.meta = (function meta$(body) {\n\t    /* meta include/macros.sibilant:1372:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var js = outputFormatter(transpile(sibilant.macros.namespaces.core.scoped.apply(this, body)));\n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(js);\n\t      }\n\t    }).call(this);\n\t    return outputFormatter(eval(js));\n\t  });\n\t  sibilant.macros.namespaces.core.reverse = (function reverse$(arr) {\n\t    /* reverse include/macros.sibilant:1377:0 */\n\t  \n\t    var reversed = [];\n\t    arr.forEach((function(item) {\n\t      /* include/macros.sibilant:1379:5 */\n\t    \n\t      return reversed.unshift(item);\n\t    }));\n\t    return reversed;\n\t  });\n\t  sibilant.macros.namespaces.core.lambda = (function lambda$(argsOrOptions, body) {\n\t    /* lambda include/macros.sibilant:1398:8 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(argsOrOptions);\n\t      }\n\t    }).call(this);\n\t    var args = (argsOrOptions.args || argsOrOptions),\n\t        body = (argsOrOptions.body || body),\n\t        args = (function() {\n\t      if (node__QUERY(args, \"expression\")) {\n\t        return args.contents;\n\t      } else if ((node__QUERY(args) && 0 === body.length)) {\n\t        body = [ args ];\n\t        return [];\n\t      } else {\n\t        return args;\n\t      }\n\t    }).call(this),\n\t        name = (function() {\n\t      if (argsOrOptions.name) {\n\t        return outputFormatter(transpile(argsOrOptions.name)).replace((new RegExp(\"\\\\W+\", \"g\")), \"$\").concat(\"$\");\n\t      }\n\t    }).call(this),\n\t        rest = detect(args, (function() {\n\t      /* include/macros.sibilant:1413:23 */\n\t    \n\t      return node__QUERY(arguments[0], \"dots\");\n\t    }));\n\t    var thisNode = this,\n\t        node = detect([ argsOrOptions.node, thisNode, argsOrOptions.name, args, body[0] ], (function(n) {\n\t      /* include/macros.sibilant:1418:16 */\n\t    \n\t      return (node__QUERY(n) && n.file);\n\t    }));\n\t    return [ \"(function\", (function() {\n\t      if (name) {\n\t        return (\" \" + name);\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this), \"(\", interleave(\", \", map(args, transpile)), \") {\", (function() {\n\t      if ((argsOrOptions.name || node)) {\n\t        return indent([ \"/*\", (function() {\n\t          if (argsOrOptions.name) {\n\t            return (\" \" + sibilant.prettyPrint(argsOrOptions.name, false));\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this), (function() {\n\t          if (node) {\n\t            return (\" \" + node.file + \":\" + node.line + \":\" + node.col);\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this), \" */\" ]);\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this), (function() {\n\t      if ((typeof rest !== \"undefined\" && rest !== null)) {\n\t        return indent(asStatement([ \"var \", transpile(rest), \" = Array.prototype.slice.call(arguments, \", (args.length - 1), \")\" ]));\n\t      }\n\t    }).call(this), indent(sibilant.macros.namespaces.core.do.apply(this, body)), \"})\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"#\"] = sibilant.macros.namespaces.core.lambda;\n\t  sibilant.macros.namespaces.core.quotedHash = (function quotedHash$(pairs) {\n\t    /* quoted-hash include/macros.sibilant:1436:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var cachedQuoteValue = sibilant.quoteHashKeys;\n\t    sibilant.quoteHashKeys = true;\n\t    var value = sibilant.macros.namespaces.core.hash.apply(this, pairs);\n\t    sibilant.quoteHashKeys = cachedQuoteValue;\n\t    return value;\n\t  });\n\t  sibilant.macros.namespaces.core.hash = (function hash$(pairs) {\n\t    /* hash include/macros.sibilant:1447:8 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    (function() {\n\t      if (1 === (pairs.length % 2)) {\n\t        return error((\"odd number of key-value pairs in hash: \" + inspect(pairs)));\n\t      }\n\t    }).call(this);\n\t    var quoteKeys = sibilant.quoteHashKeys,\n\t        pairStrings = bulkMap(pairs, (function(key, value) {\n\t      /* include/macros.sibilant:1453:39 */\n\t    \n\t      return [ (function() {\n\t        if ((quoteKeys && !(node__QUERY(key, \"string\")))) {\n\t          return [ \"\\\"\", transpile(key), \"\\\"\" ];\n\t        } else {\n\t          return transpile(key);\n\t        }\n\t      }).call(this), \": \", transpile(value) ];\n\t    }));\n\t    return (function() {\n\t      if (1 >= pairStrings.length) {\n\t        return [ \"{ \", interleave(\", \", pairStrings), \" }\" ];\n\t      } else {\n\t        return [ \"{\", indent(interleave(\",\\n\", pairStrings)), \"}\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.quote = (function quote$(content) {\n\t    /* quote include/macros.sibilant:1464:0 */\n\t  \n\t    var unquotes = findUnquotes(content);\n\t    return (function() {\n\t      if (typeof content === \"string\") {\n\t        return (\"\\\"\" + qescape(content) + \"\\\"\");\n\t      } else if (typeof content === \"number\") {\n\t        return sibilant.macros.namespaces.core.quote(content.toString());\n\t      } else if (node__QUERY(content, \"literal\", \"otherChar\")) {\n\t        return [ \"\\\"\", transpile(content), \"\\\"\" ];\n\t      } else if (Object.keys(unquotes).length) {\n\t        return replace__BANG(content, unquotes);\n\t      } else if (node__QUERY(content, \"expression\")) {\n\t        return [ \"\\\"\", mapNode(transpile(content), qescape), \"\\\"\" ];\n\t      } else if (node__QUERY(content, \"bracket\")) {\n\t        return sibilant.macros.namespaces.core.list.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n\t      } else if (node__QUERY(content, \"brace\")) {\n\t        return sibilant.macros.namespaces.core.hash.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n\t      } else {\n\t        console.log((\"unknown content\" + inspect(content)));\n\t        return content;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.debug = (function debug$(val) {\n\t    /* debug include/macros.sibilant:1487:0 */\n\t  \n\t    sibilant.debug = eval(outputFormatter(transpile(val)));\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.list = (function list$(args) {\n\t    /* list include/macros.sibilant:1498:7 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var argSegments = [];\n\t    return (function() {\n\t      if (0 === args.length) {\n\t        return \"[]\";\n\t      } else {\n\t        var simpleList = (function simpleList$(args) {\n\t          /* simple-list include/macros.sibilant:1502:12 */\n\t        \n\t          return [ \"[ \", interleave(\", \", map(args, (function(arg) {\n\t            /* include/macros.sibilant:1503:50 */\n\t          \n\t            return arg.transpiled;\n\t          }))), \" ]\" ];\n\t        });\n\t        args.forEach((function(arg) {\n\t          /* include/macros.sibilant:1505:27 */\n\t        \n\t          return (function() {\n\t            if (node__QUERY(arg, \"dots\")) {\n\t              return argSegments.push({ transpiled: transpile(arg) });\n\t            } else if (((argSegments.slice(-1)[0]) && typeof (argSegments.slice(-1)[0]) === \"object\" && (argSegments.slice(-1)[0]).constructor.name === \"Array\")) {\n\t              return argSegments.slice(-1)[0].push({ transpiled: transpile(arg) });\n\t            } else {\n\t              return argSegments.push([ { transpiled: transpile(arg) } ]);\n\t            }\n\t          }).call(this);\n\t        }));\n\t        argSegments = map(argSegments, (function(segment) {\n\t          /* include/macros.sibilant:1511:38 */\n\t        \n\t          return (function() {\n\t            if (((segment) && typeof (segment) === \"object\" && (segment).constructor.name === \"Array\")) {\n\t              return simpleList(segment);\n\t            } else {\n\t              return segment.transpiled;\n\t            }\n\t          }).call(this);\n\t        }));\n\t        return (function() {\n\t          if (1 === argSegments.length) {\n\t            return argSegments[0];\n\t          } else {\n\t            return [ argSegments[0], \".concat(\", interleave(\", \", argSegments.slice(1)), \")\" ];\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.call = (function call$(fnName, args) {\n\t    /* call include/macros.sibilant:1528:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return (function() {\n\t      if (any__QUERY(args, (function() {\n\t        /* include/macros.sibilant:1529:20 */\n\t      \n\t        return node__QUERY(arguments[0], \"dots\");\n\t      }))) {\n\t        return macros.apply(fnName, macros.list.apply(this, args));\n\t      } else {\n\t        return [ transpile(fnName), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.dots = (function dots$(contents) {\n\t    /* dots include/macros.sibilant:1534:0 */\n\t  \n\t    var contents = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return transpile(contents);\n\t  });\n\t  sibilant.macros.namespaces.core.include = (function include$(files) {\n\t    /* include include/macros.sibilant:1549:0 */\n\t  \n\t    var files = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(files.map((function(file) {\n\t      /* include/macros.sibilant:1551:17 */\n\t    \n\t      return sibilant.withDefaultSearchPath((function() {\n\t        /* include/macros.sibilant:1553:20 */\n\t      \n\t        return sibilant.include(eval(outputFormatter(transpile(file))));\n\t      }));\n\t    })), \"\\n\");\n\t  });\n\t  sibilant.macros.namespaces.core.docs = (function docs$(options) {\n\t    /* docs include/macros.sibilant:1560:0 */\n\t  \n\t    var options = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var optionsString = undefined,\n\t        optionsHash = {  };\n\t    (function() {\n\t      if (1 === (options.length % 2)) {\n\t        return (function() {\n\t          if ((node__QUERY(options[0], \"string\") || typeof options[0] === \"string\")) {\n\t            return optionsString = options.shift();\n\t          } else if ((node__QUERY(options.slice(-1)[0], \"string\") || typeof options.slice(-1)[0] === \"string\")) {\n\t            return optionsString = options.pop();\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t    bulkMap(options, (function(key, value) {\n\t      /* include/macros.sibilant:1571:23 */\n\t    \n\t      return optionsHash[outputFormatter(transpile(key))] = value;\n\t    }));\n\t    [ \"examples\", \"references\" ].forEach((function(listAttribute) {\n\t      /* include/macros.sibilant:1574:5 */\n\t    \n\t      return (function() {\n\t        if ((optionsHash.hasOwnProperty(listAttribute) && node__QUERY(optionsHash[listAttribute], \"bracket\"))) {\n\t          return optionsHash[listAttribute] = optionsHash[listAttribute].contents;\n\t        }\n\t      }).call(this);\n\t    }));\n\t    (function() {\n\t      if (optionsHash.hasOwnProperty(\"example\")) {\n\t        (function() {\n\t          if (optionsHash.hasOwnProperty(\"examples\")) {\n\t            return error(\"please provide example OR examples, not both\");\n\t          }\n\t        }).call(this);\n\t        optionsHash.examples = [ optionsHash.example ];\n\t        return delete optionsHash.example;\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (optionsHash.hasOwnProperty(\"tags\")) {\n\t        return optionsHash.tags = eval(outputFormatter(transpile(sibilant.macros.namespaces.core.quote(optionsHash.tags))));\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (node__QUERY(optionsString, \"string\")) {\n\t        return optionsHash.docString = eval(outputFormatter(transpile(optionsString)));\n\t      } else if (typeof optionsString === \"string\") {\n\t        return optionsHash.docString = optionsString;\n\t      }\n\t    }).call(this);\n\t    sibilant.docs.lastDoc = optionsHash;\n\t    return null;\n\t  });\n\t  var docs = sibilant.docs = {\n\t    definitions: [],\n\t    undocumented: {  }\n\t  };\n\t  docs.record = (function docs$record$(type, namespace, name, node) {\n\t    /* docs.record src/docs.sibilant:4:0 */\n\t  \n\t    var doc = docs.lastDoc;\n\t    (function() {\n\t      if (typeof doc !== \"undefined\") {\n\t        delete sibilant.docs.undocumented[name];\n\t        return sibilant.docs.definitions.push(mergeInto(doc, {\n\t          name: name,\n\t          type: type,\n\t          namespace: namespace,\n\t          definition: node\n\t        }));\n\t      } else {\n\t        return sibilant.docs.undocumented[name] = true;\n\t      }\n\t    }).call(this);\n\t    return delete sibilant.docs.lastDoc;\n\t  });\n\t  docs.tags = (function docs$tags$() {\n\t    /* docs.tags src/docs.sibilant:16:0 */\n\t  \n\t    var tags = flatten(pluck(docs.definitions, \"tags\")),\n\t        counts = {  };\n\t    tags.forEach((function(tag) {\n\t      /* src/docs.sibilant:19:5 */\n\t    \n\t      return counts[tag] = ((counts[tag] || 0) + 1);\n\t    }));\n\t    return counts;\n\t  });\n\t  docs.text = (function docs$text$() {\n\t    /* docs.text src/docs.sibilant:27:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* src/docs.sibilant:29:15 */\n\t    \n\t      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n\t        if (definition.references) {\n\t          return (\"references:\\n  \" + (definition.references.map((function() {\n\t            /* src/docs.sibilant:35:51 */\n\t          \n\t            return eval(outputFormatter(transpile(arguments[0])));\n\t          })).join(\"\\n  \") + \"\\n\"));\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + (function() {\n\t        if (definition.tags) {\n\t          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n\t        /* src/docs.sibilant:46:43 */\n\t      \n\t        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n\t      })).join(\"\\n\\n\") + \"\\n\\n\");\n\t    })).join(\"\");\n\t  });\n\t  docs.textNoColor = (function docs$textNoColor$() {\n\t    /* docs.text-no-color src/docs.sibilant:53:0 */\n\t  \n\t    var stripAnsi = __webpack_require__(760);\n\t    return stripAnsi(docs.text());\n\t  });\n\t  docs.json = (function docs$json$() {\n\t    /* docs.json src/docs.sibilant:58:0 */\n\t  \n\t    return JSON.stringify(docs.data());\n\t  });\n\t  docs.data = (function docs$data$() {\n\t    /* docs.data src/docs.sibilant:61:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* src/docs.sibilant:63:6 */\n\t    \n\t      return {\n\t        name: prettify(definition.name, false),\n\t        namespace: definition.namespace,\n\t        type: definition.type,\n\t        description: definition.docString,\n\t        references: (function() {\n\t          if (definition.references) {\n\t            return definition.references.map((function() {\n\t              /* src/docs.sibilant:69:52 */\n\t            \n\t              return arguments[0].token.slice(1, -1);\n\t            }));\n\t          } else {\n\t            return [];\n\t          }\n\t        }).call(this),\n\t        arguments: definition.definition.contents[2].contents.map((function() {\n\t          /* src/docs.sibilant:74:30 */\n\t        \n\t          return prettify(arguments[0], false);\n\t        })),\n\t        definition: prettify(definition.definition, false),\n\t        examples: (definition.examples || []).map((function() {\n\t          /* src/docs.sibilant:77:29 */\n\t        \n\t          return {\n\t            javascript: outputFormatter(transpile(arguments[0])),\n\t            sibilant: prettify(arguments[0], false)\n\t          };\n\t        })),\n\t        tags: definition.tags\n\t      };\n\t    }));\n\t  });\n\t  var tap = (function tap$(item, fn) {\n\t    /* tap src/helpers.sibilant:3:0 */\n\t  \n\t    fn(item);\n\t    return item;\n\t  });\n\t  var recurseIndent = (function recurseIndent$(args) {\n\t    /* recurse-indent src/helpers.sibilant:7:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return map(args, (function(arg) {\n\t      /* src/helpers.sibilant:9:10 */\n\t    \n\t      return (function() {\n\t        if (node__QUERY(arg)) {\n\t          return mergeInto(arg, { contents: recurseIndent.apply(this, compact(flatten(arg.contents))) });\n\t        } else if (((arg) && typeof (arg) === \"object\" && (arg).constructor.name === \"Array\")) {\n\t          return recurseIndent.apply(this, arg);\n\t        } else if (typeof arg === \"number\") {\n\t          return arg.toString();\n\t        } else if (typeof arg === \"string\") {\n\t          return arg.replace((new RegExp(\"\\\\n\", \"g\")), \"\\n  \").replace((new RegExp(\"\\\\n\\\\s+\\\\n\", \"g\")), \"\\n\\n\");\n\t        } else {\n\t          return arg;\n\t        }\n\t      }).call(this);\n\t    }));\n\t  });\n\t  var indent = (function indent$(args) {\n\t    /* indent src/helpers.sibilant:24:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"\\n  \", recurseIndent(map(args, transpile)), \"\\n\" ];\n\t  });\n\t  var escapeRegex = (function escapeRegex$(string) {\n\t    /* escape-regex src/helpers.sibilant:27:0 */\n\t  \n\t    return string.replace((new RegExp(\"[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\^\\\\$\\\\|]\", \"g\")), \"\\\\$&\");\n\t  });\n\t  var qescape = (function qescape$(content) {\n\t    /* qescape src/helpers.sibilant:30:0 */\n\t  \n\t    return (function() {\n\t      if (!((typeof content !== \"undefined\" && content !== null))) {\n\t        return \"\";\n\t      } else if (typeof content === \"string\") {\n\t        return content.split(\"\\\\\\\\ \"[0]).join(\"\\\\\\\\ \".slice(0, -1)).replace((new RegExp(\"\\\"\", \"g\")), \"\\\\\\\"\").replace((new RegExp(\"\\\\n\", \"g\")), \"\\\\n\\\" +\\n\\\"\");\n\t      } else {\n\t        return content;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var mapNode = (function mapNode$(node, fn) {\n\t    /* map-node src/helpers.sibilant:39:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        var mappedNode = fn(node);\n\t        (function() {\n\t          if (node__QUERY(mappedNode)) {\n\t            return mappedNode.contents = mapNode(mappedNode.contents, fn);\n\t          }\n\t        }).call(this);\n\t        return mappedNode;\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, (function() {\n\t          /* src/helpers.sibilant:48:32 */\n\t        \n\t          return mapNode(arguments[0], fn);\n\t        }));\n\t      } else {\n\t        return fn(node);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var eachNode = (function eachNode$(node, fn) {\n\t    /* each-node src/helpers.sibilant:51:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        return (function() {\n\t          if (fn(node)) {\n\t            return eachNode(node.contents, fn);\n\t          }\n\t        }).call(this);\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return node.forEach((function(c) {\n\t          /* src/helpers.sibilant:53:22 */\n\t        \n\t          return eachNode(c, fn);\n\t        }));\n\t      } else {\n\t        return fn(node);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var statement__QUERY = (function statement__QUERY$(transpiled) {\n\t    /* statement? src/helpers.sibilant:56:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(transpiled)) {\n\t        return statement__QUERY(transpiled.contents);\n\t      } else if (((transpiled) && typeof (transpiled) === \"object\" && (transpiled).constructor.name === \"Array\")) {\n\t        return statement__QUERY(transpiled.slice(-1)[0]);\n\t      } else if (typeof transpiled === \"string\") {\n\t        return \";\" === transpiled.slice(-1)[0];\n\t      } else {\n\t        return false;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var asStatement = (function asStatement$(node) {\n\t    /* as-statement src/helpers.sibilant:62:0 */\n\t  \n\t    var transpiled = transpile(node);\n\t    return (function() {\n\t      if (emptyNode__QUERY(transpiled)) {\n\t        return undefined;\n\t      } else if (statement__QUERY(transpiled)) {\n\t        return transpiled;\n\t      } else {\n\t        return [ transpiled, \";\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var unquote__QUERY = (function unquote__QUERY$(node) {\n\t    /* unquote? src/helpers.sibilant:69:0 */\n\t  \n\t    return node__QUERY(node, \"at\");\n\t  });\n\t  var findUnquotes = (function findUnquotes$(node) {\n\t    /* find-unquotes src/helpers.sibilant:71:0 */\n\t  \n\t    var unquotes = {  };\n\t    eachNode(node, (function(n) {\n\t      /* src/helpers.sibilant:73:21 */\n\t    \n\t      (function() {\n\t        if (unquote__QUERY(n)) {\n\t          return unquotes[n.nodeId] = transpile(n);\n\t        }\n\t      }).call(this);\n\t      return !(node__QUERY(n, \"tick\"));\n\t    }));\n\t    return unquotes;\n\t  });\n\t  var spliceDots = (function spliceDots$(node) {\n\t    /* splice-dots src/helpers.sibilant:79:0 */\n\t  \n\t    (function() {\n\t      if ((node && ((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\"))) {\n\t        var contents = [];\n\t        node.contents.forEach((function(content) {\n\t          /* src/helpers.sibilant:82:11 */\n\t        \n\t          return (function() {\n\t            if ((node__QUERY(content, \"dots\") && ((content.contents) && typeof (content.contents) === \"object\" && (content.contents).constructor.name === \"Array\") && content.contents.length === 1 && ((content.contents[0]) && typeof (content.contents[0]) === \"object\" && (content.contents[0]).constructor.name === \"Array\"))) {\n\t              return contents.push.apply(contents, content.contents[0]);\n\t            } else {\n\t              return contents.push(content);\n\t            }\n\t          }).call(this);\n\t        }));\n\t        return node.contents = contents;\n\t      }\n\t    }).call(this);\n\t    return node;\n\t  });\n\t  var alternatingKeysAndValues = (function alternatingKeysAndValues$(hash) {\n\t    /* alternating-keys-and-values src/helpers.sibilant:94:0 */\n\t  \n\t    return flatten(map(Object.keys(hash), (function(key) {\n\t      /* src/helpers.sibilant:96:19 */\n\t    \n\t      return [ key, hash[key] ];\n\t    })));\n\t  });\n\t  var mapNodeForQuoteExpansion = (function mapNodeForQuoteExpansion$(node, expansions) {\n\t    /* map-node-for-quote-expansion src/helpers.sibilant:99:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        var mappedNode = (function() {\n\t          if (expansions.hasOwnProperty(node.nodeId)) {\n\t            return expansions[node.nodeId];\n\t          } else {\n\t            return clone(node);\n\t          }\n\t        }).call(this);\n\t        (function() {\n\t          if (node__QUERY(mappedNode)) {\n\t            return mappedNode.contents = mapNodeForQuoteExpansion(mappedNode.contents, expansions);\n\t          }\n\t        }).call(this);\n\t        mappedNode = spliceDots(mappedNode);\n\t        return mappedNode;\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, (function() {\n\t          /* src/helpers.sibilant:110:19 */\n\t        \n\t          return mapNodeForQuoteExpansion(arguments[0], expansions);\n\t        }));\n\t      } else {\n\t        return node;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var replace__BANG = (function replace__BANG$(content) {\n\t    /* replace! src/helpers.sibilant:114:0 */\n\t  \n\t    return (function() {\n\t      if ((node__QUERY(content, \"dots\") && 3 === content.token.length && node__QUERY(content.contents[0], \"at\"))) {\n\t        return mergeInto(clone(content), { contents: [ transpile(content.contents[0]) ] });\n\t      } else if (node__QUERY(content, \"at\")) {\n\t        return transpile(content.contents[0]);\n\t      } else if (node__QUERY(content, \"tick\")) {\n\t        return JSON.stringify(content);\n\t      } else if ((\"object\" === typeof content && content !== null && content.constructor.name !== \"Array\")) {\n\t        return sibilant.macros.namespaces.core.hash.apply(this, Object.keys(content).reduce((function() {\n\t          /* src/helpers.sibilant:131:21 */\n\t        \n\t          return arguments[0].concat([ arguments[1], replace__BANG(content[arguments[1]]) ]);\n\t        }), []));\n\t      } else if (((content) && typeof (content) === \"object\" && (content).constructor.name === \"Array\")) {\n\t        return sibilant.macros.namespaces.core.list.apply(this, map(content, replace__BANG));\n\t      } else if (typeof content === \"undefined\") {\n\t        return \"undefined\";\n\t      } else if (typeof content === \"number\") {\n\t        return content.toString();\n\t      } else {\n\t        return JSON.stringify(content);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var node__QUERY = (function node__QUERY$(thing, types) {\n\t    /* node? src/transpiler.sibilant:1:0 */\n\t  \n\t    var types = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return ((typeof thing !== \"undefined\" && thing !== null) && \"object\" === typeof thing && typeof thing.type === \"string\" && (0 === types.length || types.indexOf(thing.type) !== -1) && thing.hasOwnProperty(\"contents\"));\n\t  });\n\t  var emptyNode__QUERY = (function emptyNode__QUERY$(item) {\n\t    /* empty-node? src/transpiler.sibilant:9:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(item)) {\n\t        return emptyNode__QUERY(item.contents);\n\t      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        return all__QUERY(item, emptyNode__QUERY);\n\t      } else if (typeof item === \"string\") {\n\t        return item.match((new RegExp(\"^\\\\s*$\", undefined)));\n\t      } else {\n\t        return (null === item || typeof item === \"undefined\" || false === item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var compactNode = (function compactNode$(item) {\n\t    /* compact-node src/transpiler.sibilant:17:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(item)) {\n\t        item.contents = compactNode(item.contents);\n\t        return (function() {\n\t          if ((item.contents && item.contents.length)) {\n\t            return item;\n\t          } else {\n\t            return null;\n\t          }\n\t        }).call(this);\n\t      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        var compacted = compact(map(item, compactNode));\n\t        return (function() {\n\t          if ((compacted && compacted.length)) {\n\t            return compacted;\n\t          } else {\n\t            return null;\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        return (function() {\n\t          if ((item === \"\" || item === false)) {\n\t            return null;\n\t          } else {\n\t            return item;\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var recurseTranspile = (function recurseTranspile$(node) {\n\t    /* recurse-transpile src/transpiler.sibilant:26:0 */\n\t  \n\t    return (function() {\n\t      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, recurseTranspile);\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return mergeInto(node, { contents: recurseTranspile(node.contents) });\n\t      } else if (node__QUERY(node)) {\n\t        return transpile(node);\n\t      } else {\n\t        return node;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var transpile = (function transpile$(node, preprocessor) {\n\t    /* transpile src/transpiler.sibilant:38:0 */\n\t  \n\t    (function() {\n\t      if (typeof node === \"string\") {\n\t        return node = {\n\t          type: \"js\",\n\t          token: node,\n\t          contents: []\n\t        };\n\t      } else if (typeof node === \"number\") {\n\t        return node = {\n\t          type: \"number\",\n\t          token: node.toString(),\n\t          contents: []\n\t        };\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return node;\n\t      } else if ((typeof node !== \"undefined\" && node !== null)) {\n\t        var transpiler = (transpile[node.type] || transpile.default),\n\t            result = transpiler(node),\n\t            resultNode = recurseTranspile((function() {\n\t          if (node__QUERY(result)) {\n\t            return result;\n\t          } else {\n\t            return {\n\t              contents: result,\n\t              type: \"output\"\n\t            };\n\t          }\n\t        }).call(this));\n\t        (function() {\n\t          if (typeof resultNode === \"undefined\") {\n\t            console.log((\"\" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\" + prettify(node) + \"\"));\n\t            console.log(prettify(result));\n\t            console.log(prettify(transpile(result)));\n\t            throw (new Error((\"Encountered an undefined return from recursive transpile.\\n\" + \"Please report this bug at \" + \"https://github.com/jbr/sibilant/issues/new\")))\n\t          }\n\t        }).call(this);\n\t        resultNode.contents = compact(flatten(resultNode.contents));\n\t        resultNode.source = node;\n\t        (function() {\n\t          if (5 > sibilant.debug) {\n\t            return console.log(prettify(node), red(\"->\"), prettify(resultNode));\n\t          }\n\t        }).call(this);\n\t        return (function() {\n\t          if (emptyNode__QUERY(resultNode)) {\n\t            return undefined;\n\t          } else {\n\t            return resultNode;\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.transpile = transpile;\n\t  var readerMacros = {  };\n\t  transpile.hat = (function transpile$hat$(node) {\n\t    /* transpile.hat src/transpiler.sibilant:85:0 */\n\t  \n\t    var token = node.contents[0].token,\n\t        $_symbol6_$ = (function() {\n\t      if (token.match((new RegExp(\"\\/\", undefined)))) {\n\t        return token.split(\"/\");\n\t      } else {\n\t        return [ sibilant.macros.searchPath[0], token ];\n\t      }\n\t    }).call(this),\n\t        namespace = $_symbol6_$[0],\n\t        macro = $_symbol6_$[1],\n\t        $_symbol6_$ = undefined;\n\t    return sibilant.macros.namespaces.core.get.call(node, \"sibilant.macros.namespaces\", sibilant.macros.namespaces.core.quote(transpile.literal({ token: namespace })), sibilant.macros.namespaces.core.quote(transpile.literal({ token: macro })));\n\t  });\n\t  transpile.tick = (function transpile$tick$(node) {\n\t    /* transpile.tick src/transpiler.sibilant:96:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.quote.apply(node, node.contents);\n\t  });\n\t  transpile.at = (function transpile$at$(node) {\n\t    /* transpile.at src/transpiler.sibilant:99:0 */\n\t  \n\t    return transpile(node.contents[0]);\n\t  });\n\t  transpile.dots = (function transpile$dots$(node) {\n\t    /* transpile.dots src/transpiler.sibilant:102:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.dots.apply(node, node.contents);\n\t  });\n\t  transpile.default = (function transpile$default$(node) {\n\t    /* transpile.default src/transpiler.sibilant:105:0 */\n\t  \n\t    return node.token;\n\t  });\n\t  transpile.output = (function transpile$output$(node) {\n\t    /* transpile.output src/transpiler.sibilant:108:0 */\n\t  \n\t    return node;\n\t  });\n\t  transpile.number = (function transpile$number$(node) {\n\t    /* transpile.number src/transpiler.sibilant:111:0 */\n\t  \n\t    return parseFloat(node.token.replace((new RegExp(\",\", \"g\")), \"\")).toString();\n\t  });\n\t  transpile.root = (function transpile$root$(node) {\n\t    /* transpile.root src/transpiler.sibilant:117:0 */\n\t  \n\t    return (function() {\n\t      if (1 === node.contents.length) {\n\t        return transpile(node.contents[0]);\n\t      } else {\n\t        return interleave(compact(map(node.contents, asStatement)), \"\\n\");\n\t      }\n\t    }).call(this);\n\t  });\n\t  transpile.expression = (function transpile$expression$(node, preprocessor) {\n\t    /* transpile.expression src/transpiler.sibilant:126:0 */\n\t  \n\t    return (function() {\n\t      if (node.contents.length) {\n\t        var head = node.contents[0],\n\t            args = node.contents,\n\t            macro = sibilant.resolveMacro(\"call\");\n\t        (function() {\n\t          if (node__QUERY(head, \"string\")) {\n\t            return macro = sibilant.resolveMacro(\"concat\");\n\t          } else if (node__QUERY(head, \"dots\")) {\n\t            macro = sibilant.resolveMacro(\"send\");\n\t            return args = [ node.contents[1], head.contents[0] ].concat(node.contents.slice(2));\n\t          } else if (node__QUERY(head, \"literal\", \"otherChar\")) {\n\t            var resolvedMacro = sibilant.resolveMacro(outputFormatter(transpile(head)));\n\t            return (function() {\n\t              if (resolvedMacro) {\n\t                head.hint = \"macro\";\n\t                macro = resolvedMacro;\n\t                return args = node.contents.slice(1);\n\t              }\n\t            }).call(this);\n\t          }\n\t        }).call(this);\n\t        return macro.apply(node, args);\n\t      } else {\n\t        return \"null\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  transpile.bracket = (function transpile$bracket$(node) {\n\t    /* transpile.bracket src/transpiler.sibilant:152:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.list.apply(this, node.contents);\n\t  });\n\t  transpile.brace = (function transpile$brace$(node) {\n\t    /* transpile.brace src/transpiler.sibilant:155:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.hash.apply(this, node.contents);\n\t  });\n\t  transpile.literal = (function transpile$literal$(node) {\n\t    /* transpile.literal src/transpiler.sibilant:157:0 */\n\t  \n\t    var string = node.token;\n\t    return inject(string.replace((new RegExp(\"\\\\*\", \"g\")), \"_\").replace((new RegExp(\"\\\\?$\", undefined)), \"__QUERY\").replace((new RegExp(\"!$\", undefined)), \"__BANG\"), string.match((new RegExp(\"-(.)\", \"g\"))), (function(returnString, match) {\n\t      /* src/transpiler.sibilant:164:13 */\n\t    \n\t      return returnString.replace(match, match[1].toUpperCase());\n\t    }));\n\t  });\n\t  transpile.string = (function transpile$string$(node) {\n\t    /* transpile.string src/transpiler.sibilant:168:0 */\n\t  \n\t    return node.token.split(\"\\n\").join(\"\\\\n\\\" +\\n\\\"\");\n\t  });\n\t  transpile.comment = (function transpile$comment$(node) {\n\t    /* transpile.comment src/transpiler.sibilant:173:0 */\n\t  \n\t    return null;\n\t  });\n\t  var docs = sibilant.docs = {\n\t    definitions: [],\n\t    undocumented: {  }\n\t  };\n\t  docs.record = (function docs$record$(type, namespace, name, node) {\n\t    /* docs.record src/docs.sibilant:4:0 */\n\t  \n\t    var doc = docs.lastDoc;\n\t    (function() {\n\t      if (typeof doc !== \"undefined\") {\n\t        delete sibilant.docs.undocumented[name];\n\t        return sibilant.docs.definitions.push(mergeInto(doc, {\n\t          name: name,\n\t          type: type,\n\t          namespace: namespace,\n\t          definition: node\n\t        }));\n\t      } else {\n\t        return sibilant.docs.undocumented[name] = true;\n\t      }\n\t    }).call(this);\n\t    return delete sibilant.docs.lastDoc;\n\t  });\n\t  docs.tags = (function docs$tags$() {\n\t    /* docs.tags src/docs.sibilant:16:0 */\n\t  \n\t    var tags = flatten(pluck(docs.definitions, \"tags\")),\n\t        counts = {  };\n\t    tags.forEach((function(tag) {\n\t      /* src/docs.sibilant:19:5 */\n\t    \n\t      return counts[tag] = ((counts[tag] || 0) + 1);\n\t    }));\n\t    return counts;\n\t  });\n\t  docs.text = (function docs$text$() {\n\t    /* docs.text src/docs.sibilant:27:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* src/docs.sibilant:29:15 */\n\t    \n\t      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n\t        if (definition.references) {\n\t          return (\"references:\\n  \" + (definition.references.map((function() {\n\t            /* src/docs.sibilant:35:51 */\n\t          \n\t            return eval(outputFormatter(transpile(arguments[0])));\n\t          })).join(\"\\n  \") + \"\\n\"));\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + (function() {\n\t        if (definition.tags) {\n\t          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n\t        /* src/docs.sibilant:46:43 */\n\t      \n\t        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n\t      })).join(\"\\n\\n\") + \"\\n\\n\");\n\t    })).join(\"\");\n\t  });\n\t  docs.textNoColor = (function docs$textNoColor$() {\n\t    /* docs.text-no-color src/docs.sibilant:53:0 */\n\t  \n\t    var stripAnsi = __webpack_require__(760);\n\t    return stripAnsi(docs.text());\n\t  });\n\t  docs.json = (function docs$json$() {\n\t    /* docs.json src/docs.sibilant:58:0 */\n\t  \n\t    return JSON.stringify(docs.data());\n\t  });\n\t  docs.data = (function docs$data$() {\n\t    /* docs.data src/docs.sibilant:61:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* src/docs.sibilant:63:6 */\n\t    \n\t      return {\n\t        name: prettify(definition.name, false),\n\t        namespace: definition.namespace,\n\t        type: definition.type,\n\t        description: definition.docString,\n\t        references: (function() {\n\t          if (definition.references) {\n\t            return definition.references.map((function() {\n\t              /* src/docs.sibilant:69:52 */\n\t            \n\t              return arguments[0].token.slice(1, -1);\n\t            }));\n\t          } else {\n\t            return [];\n\t          }\n\t        }).call(this),\n\t        arguments: definition.definition.contents[2].contents.map((function() {\n\t          /* src/docs.sibilant:74:30 */\n\t        \n\t          return prettify(arguments[0], false);\n\t        })),\n\t        definition: prettify(definition.definition, false),\n\t        examples: (definition.examples || []).map((function() {\n\t          /* src/docs.sibilant:77:29 */\n\t        \n\t          return {\n\t            javascript: outputFormatter(transpile(arguments[0])),\n\t            sibilant: prettify(arguments[0], false)\n\t          };\n\t        })),\n\t        tags: definition.tags\n\t      };\n\t    }));\n\t  });\n\t  var sibilize = (function sibilize$(input) {\n\t    /* sibilize src/require-and-include.sibilant:1:0 */\n\t  \n\t    var result = outputFormatter(transpile(restructure(parse(input))));\n\t    return result;\n\t  });\n\t  var sourcemap = (function sourcemap$(input) {\n\t    /* sourcemap src/require-and-include.sibilant:9:0 */\n\t  \n\t    return sourcemapper(transpile(restructure(parse(input))));\n\t  });\n\t  sibilant.sibilize = sibilize;\n\t  sibilant.version = (function sibilant$version$() {\n\t    /* sibilant.version src/require-and-include.sibilant:14:0 */\n\t  \n\t    return sibilant.packageInfo().version;\n\t  });\n\t  sibilant.stripShebang = (function sibilant$stripShebang$(data) {\n\t    /* sibilant.strip-shebang src/require-and-include.sibilant:17:0 */\n\t  \n\t    return data.replace((new RegExp(\"^#!.*\\\\n\", undefined)), \"\\n\");\n\t  });\n\t  sibilant.file = \"eval.sibilant\";\n\t  var withDirAndFile = (function withDirAndFile$(dir, file, fn) {\n\t    /* with-dir-and-file src/require-and-include.sibilant:22:0 */\n\t  \n\t    var before = {\n\t      dir: sibilant.dir,\n\t      file: sibilant.file\n\t    };\n\t    sibilant.dir = dir;\n\t    sibilant.file = file;\n\t    var retval = fn();\n\t    sibilant.dir = before.dir;\n\t    sibilant.file = before.file;\n\t    return retval;\n\t  });\n\t  sibilant.sourceCache = {  };\n\t  sibilant.sibilizeFile = (function sibilant$sibilizeFile$(fileName) {\n\t    /* sibilant.sibilize-file src/require-and-include.sibilant:39:0 */\n\t  \n\t    return outputFormatter(sibilant.transpileFile(fileName));\n\t  });\n\t  sibilant.sibilizeJson = (function sibilant$sibilizeJson$(fileName) {\n\t    /* sibilant.sibilize-json src/require-and-include.sibilant:44:0 */\n\t  \n\t    var before = sibilant.quoteHashKeys;\n\t    sibilant.quoteHashKeys = true;\n\t    var content = sibilant.sibilizeFile(fileName);\n\t    sibilant.quoteHashKeys = before;\n\t    return content;\n\t  });\n\t  var package = {\n\t    name: \"sibilant\",\n\t    version: \"0.4.0\",\n\t    keywords: [ \"lisp\", \"javascript\", \"language\" ],\n\t    description: \"javascript with a lisp\",\n\t    contributors: [ \"Jacob Rothstein <hi@jbr.me> (http://jbr.me)\", \"Matthew Phillips (http://www.matthewphillips.info/)\", \"Yuest Wang (http://yue.st/)\", \"Lyndon Tremblay (http://www.hoovy.org)\", \"David Sargeant (https://github.com/dubiousdavid)\" ],\n\t    repository: {\n\t      type: \"git\",\n\t      url: \"http://github.com/jbr/sibilant.git\"\n\t    },\n\t    bugs: {\n\t      mail: \"sibilant@librelist.com\",\n\t      url: \"http://github.com/jbr/sibilant/issues\"\n\t    },\n\t    bin: { sibilant: \"./bin/sibilant\" },\n\t    main: \"./lib/sibilant.js\",\n\t    license: \"MIT\",\n\t    devDependencies: {\n\t      stool: \">=0.0.7\",\n\t      diff: \">=2.2.1\",\n\t      \"strip-ansi\": \">=3.0.0\",\n\t      colors: \">=1.1.2\",\n\t      cardinal: \">=0.6.0\"\n\t    },\n\t    dependencies: {\n\t      \"source-map\": \">=0.5.3\",\n\t      \"source-map-support\": \">=0.3.3\"\n\t    },\n\t    scripts: { test: \"bin/sibilant -x stool.sibilant -- test\" }\n\t  };\n\t  sibilant.packageInfo = (function sibilant$packageInfo$() {\n\t    /* sibilant.package-info src/browser.sibilant:24:6 */\n\t  \n\t    return package;\n\t  });\n\t  sibilant.versionString = (function sibilant$versionString$() {\n\t    /* sibilant.version-string src/browser.sibilant:26:6 */\n\t  \n\t    return (package.name + \" browser version \" + package.version);\n\t  });\n\t  sibilant.dir = \"browser\";\n\t  sibilant.initialize = (function sibilant$initialize$() {\n\t    /* sibilant.initialize src/browser.sibilant:31:6 */\n\t  \n\t    return false;\n\t  });\n\t  var evalCode = (function evalCode$(js) {\n\t    /* eval-code src/browser.sibilant:32:13 */\n\t  \n\t    return (new Function(js))();\n\t  });\n\t  sibilant.include = (function sibilant$include$(url) {\n\t    /* sibilant.include src/browser.sibilant:35:6 */\n\t  \n\t    return $.get(url).done((function() {\n\t      /* src/browser.sibilant:36:32 */\n\t    \n\t      return evalCode(sibilize(arguments[0]));\n\t    }));\n\t  });\n\t  (function() {\n\t    if (typeof $ === \"function\") {\n\t      return $((function() {\n\t        /* src/browser.sibilant:39:15 */\n\t      \n\t        return map($.makeArray($(\"script[type=\\\"application/sibilant\\\"][src]\").map((function() {\n\t          /* src/browser.sibilant:42:26 */\n\t        \n\t          return this.src;\n\t        }))), sibilant.include);\n\t      }));\n\t    }\n\t  }).call(this);\n\t  return sibilant;\n\t}).call(this);\n\n/***/ },\n\n/***/ 760:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ansiRegex = __webpack_require__(761)();\n\t\n\tmodule.exports = function (str) {\n\t\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n\t};\n\n\n/***/ },\n\n/***/ 761:\n/***/ function(module, exports) {\n\n\t'use strict';\n\tmodule.exports = function () {\n\t\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n\t};\n\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** worker.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a5b2c3e334441e3bab22\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** worker.sibilant\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** include/macros.sibilant\n **/","//# sourceMappingURL=../maps/browser.map\n;\nthis.sibilant = (function() {\n  /* src/browser.sibilant:4:5 */\n\n  var sibilant = {  },\n      exports = sibilant;\n  var error = (function error$(str) {\n    /* error src/browser.sibilant:6:6 */\n  \n    throw str\n  });\n  var inspect = (function inspect$(item) {\n    /* inspect src/browser.sibilant:7:6 */\n  \n    return (function() {\n      if (item.toSource) {\n        return item.toSource();\n      } else {\n        return item.toString();\n      }\n    }).call(this);\n  });\n  var bulkMap = (function bulkMap$(arr, fn) {\n    /* bulk-map include/functional.sibilant:1:0 */\n  \n    var index = 0,\n        groupSize = fn.length,\n        retArr = [];\n    (function() {\n      var $_symbol1_$ = undefined;\n      while (index < arr.length) {\n        $_symbol1_$ = (function() {\n          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n          return index += groupSize;\n        }).call(this);\n      };\n      return $_symbol1_$;\n    }).call(this);\n    return retArr;\n  });\n  var inject = (function inject$(start, items, fn) {\n    /* inject include/functional.sibilant:13:0 */\n  \n    var value = start;\n    (function() {\n      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n        return items.forEach((function(item, index) {\n          /* include/functional.sibilant:16:4 */\n        \n          return value = fn(value, item, index);\n        }));\n      }\n    }).call(this);\n    return value;\n  });\n  var map = (function map$(items, fn) {\n    /* map include/functional.sibilant:20:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* include/functional.sibilant:22:10 */\n    \n      collector.push(fn(item, index));\n      return collector;\n    }));\n  });\n  var select = (function select$(items, fn) {\n    /* select include/functional.sibilant:26:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* include/functional.sibilant:28:10 */\n    \n      (function() {\n        if (fn(item, index)) {\n          return collector.push(item);\n        }\n      }).call(this);\n      return collector;\n    }));\n  });\n  var detect = (function detect$(items, fn) {\n    /* detect include/functional.sibilant:33:0 */\n  \n    var returnItem = undefined,\n        index = 0,\n        items = (items || []);\n    (function() {\n      var $_symbol2_$ = undefined;\n      while (!((items.length === index || returnItem))) {\n        $_symbol2_$ = (function() {\n          (function() {\n            if (fn(items[index], index)) {\n              return returnItem = items[index];\n            }\n          }).call(this);\n          return ((index)++);\n        }).call(this);\n      };\n      return $_symbol2_$;\n    }).call(this);\n    return returnItem;\n  });\n  var all__QUERY = (function all__QUERY$(items, fn) {\n    /* all? include/functional.sibilant:45:0 */\n  \n    return typeof detect(items, (function(item, index) {\n      /* include/functional.sibilant:46:31 */\n    \n      return !(fn(item, index));\n    })) === \"undefined\";\n  });\n  var none__QUERY = (function none__QUERY$(items, fn) {\n    /* none? include/functional.sibilant:48:0 */\n  \n    return typeof detect(items, fn) === \"undefined\";\n  });\n  var any__QUERY = (function any__QUERY$(items, fn) {\n    /* any? include/functional.sibilant:51:0 */\n  \n    return typeof detect(items, fn) !== \"undefined\";\n  });\n  var reject = (function reject$(items, fn) {\n    /* reject include/functional.sibilant:54:0 */\n  \n    var args = [ items, fn ];\n    return select(items, (function() {\n      /* include/functional.sibilant:56:16 */\n    \n      return !(fn.apply(this, arguments));\n    }));\n  });\n  var compact = (function compact$(arr) {\n    /* compact include/functional.sibilant:58:0 */\n  \n    return select(arr, (function(item) {\n      /* include/functional.sibilant:59:17 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var interleave = (function interleave$(glue, arr) {\n    /* interleave include/functional.sibilant:65:0 */\n  \n    (function() {\n      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n        var temp = glue;\n        glue = arr;\n        return arr = temp;\n      }\n    }).call(this);\n    return (function() {\n      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n        return inject([], arr, (function(collector, item, index) {\n          /* include/functional.sibilant:71:13 */\n        \n          return collector.concat([ item, glue[index] ]);\n        }));\n      } else {\n        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n          /* include/functional.sibilant:75:13 */\n        \n          return collector.concat([ glue, item ]);\n        }));\n      }\n    }).call(this);\n  });\n  var flatten = (function flatten$(items) {\n    /* flatten include/functional.sibilant:78:0 */\n  \n    var items = Array.prototype.slice.call(arguments, 0);\n  \n    return inject([], items, (function(collector, item) {\n      /* include/functional.sibilant:80:10 */\n    \n      return collector.concat((function() {\n        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n          return flatten.apply(this, item);\n        } else {\n          return item;\n        }\n      }).call(this));\n    }));\n  });\n  var recurseMap = (function recurseMap$(item, fn) {\n    /* recurse-map include/functional.sibilant:87:0 */\n  \n    return (function() {\n      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        return map(item, (function(subitem) {\n          /* include/functional.sibilant:88:32 */\n        \n          return recurseMap(subitem, fn);\n        }));\n      } else {\n        return fn(item);\n      }\n    }).call(this);\n  });\n  var pluck = (function pluck$(items, attribute) {\n    /* pluck include/functional.sibilant:91:0 */\n  \n    return map(items, (function(item) {\n      /* include/functional.sibilant:92:16 */\n    \n      return item[attribute];\n    }));\n  });\n  var mergeInto = (function mergeInto$(into, from) {\n    /* merge-into include/functional.sibilant:94:0 */\n  \n    Object.keys(from).forEach((function(key) {\n      /* include/functional.sibilant:95:5 */\n    \n      return into[key] = from[key];\n    }));\n    return into;\n  });\n  var clone = (function clone$(object) {\n    /* clone include/functional.sibilant:98:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key) {\n      /* include/functional.sibilant:100:13 */\n    \n      collector[key] = object[key];\n      return collector;\n    }));\n  });\n  var mapValues = (function mapValues$(object, fn) {\n    /* map-values include/functional.sibilant:104:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key, index) {\n      /* include/functional.sibilant:106:13 */\n    \n      collector[key] = fn(object[key], key);\n      return collector;\n    }));\n  });\n  var mergeWith = (function mergeWith$(into, from) {\n    /* merge-with include/functional.sibilant:110:0 */\n  \n    return mergeInto(clone(into), from);\n  });\n  var log__BANG = (function log__BANG$(args) {\n    /* log! src/colors.sibilant:1:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return inspect__BANG.apply(this, args).forEach((function() {\n      /* src/colors.sibilant:2:35 */\n    \n      return console.log(arguments[0]);\n    }));\n  });\n  var inspect__BANG = (function inspect__BANG$(args) {\n    /* inspect! src/colors.sibilant:4:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return args.map((function() {\n      /* src/colors.sibilant:5:15 */\n    \n      return util.inspect(arguments[0], {\n        colors: false,\n        depth: 3\n      });\n    }));\n  });\n  var color = (function color$(code, items, depth) {\n    /* color src/colors.sibilant:7:0 */\n  \n    return (code + items.join(\"\") + \"\\033[0m\");\n  });\n  var black = (function black$(args) {\n    /* black src/colors.sibilant:10:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;30m\", args);\n  });\n  var red = (function red$(args) {\n    /* red src/colors.sibilant:11:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;31m\", args);\n  });\n  var green = (function green$(args) {\n    /* green src/colors.sibilant:12:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;32m\", args);\n  });\n  var brown = (function brown$(args) {\n    /* brown src/colors.sibilant:13:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;33m\", args);\n  });\n  var blue = (function blue$(args) {\n    /* blue src/colors.sibilant:14:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;34m\", args);\n  });\n  var purple = (function purple$(args) {\n    /* purple src/colors.sibilant:15:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;35m\", args);\n  });\n  var cyan = (function cyan$(args) {\n    /* cyan src/colors.sibilant:16:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;36m\", args);\n  });\n  var gray = (function gray$(args) {\n    /* gray src/colors.sibilant:17:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;37m\", args);\n  });\n  var boldGray = (function boldGray$(args) {\n    /* bold-gray src/colors.sibilant:18:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;30m\", args);\n  });\n  var boldRed = (function boldRed$(args) {\n    /* bold-red src/colors.sibilant:19:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;31m\", args);\n  });\n  var boldGreen = (function boldGreen$(args) {\n    /* bold-green src/colors.sibilant:20:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;32m\", args);\n  });\n  var yellow = (function yellow$(args) {\n    /* yellow src/colors.sibilant:21:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;33m\", args);\n  });\n  var boldBlue = (function boldBlue$(args) {\n    /* bold-blue src/colors.sibilant:22:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;34m\", args);\n  });\n  var boldPurple = (function boldPurple$(args) {\n    /* bold-purple src/colors.sibilant:23:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;35m\", args);\n  });\n  var boldCyan = (function boldCyan$(args) {\n    /* bold-cyan src/colors.sibilant:24:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;36m\", args);\n  });\n  var white = (function white$(args) {\n    /* white src/colors.sibilant:25:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;37m\", args);\n  });\n  sibilant.prettyPrint = (function sibilant$prettyPrint$(node, color, entry) {\n    /* sibilant.pretty-print src/pretty-printer.sibilant:3:0 */\n  \n    entry = (typeof entry !== \"undefined\") ? entry : true;\n    color = (typeof color !== \"undefined\") ? color : true;\n    return realNewlines((function() {\n      if (node__QUERY(node)) {\n        var prettyPrinter = (sibilant.prettyPrint[node.type] || sibilant.prettyPrint.default);\n        return prettyPrinter(node, color, entry);\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return ((function() {\n          if (color) {\n            return black(\"[\");\n          } else {\n            return \"\";\n          }\n        }).call(this) + map(node, (function() {\n          /* src/pretty-printer.sibilant:14:28 */\n        \n          return prettify(arguments[0], color, false);\n        })).join((function() {\n          if (color) {\n            return black(\",\");\n          } else {\n            return \"\";\n          }\n        }).call(this)) + (function() {\n          if (color) {\n            return black(\"]\");\n          } else {\n            return \"\";\n          }\n        }).call(this));\n      } else if (color) {\n        return red(inspect(node));\n      } else {\n        return realNewlines(inspect(node));\n      }\n    }).call(this));\n  });\n  var prettify = sibilant.prettyPrint;\n  sibilant.prettyPrint.default = (function sibilant$prettyPrint$default$(node, color, entry) {\n    /* sibilant.pretty-print.default src/pretty-printer.sibilant:23:0 */\n  \n    var mapPretty = (function mapPretty$(attr) {\n      /* map-pretty src/pretty-printer.sibilant:24:5 */\n    \n      var arr = node[attr];\n      return (function() {\n        if ((arr && arr.length)) {\n          return map(arr, (function() {\n            /* src/pretty-printer.sibilant:27:27 */\n          \n            return prettify(arguments[0], color, false);\n          })).join(\"\");\n        } else {\n          return \"\";\n        }\n      }).call(this);\n    });\n    return realNewlines(sibilant.prettyPrint.colorize(node, color, ((function() {\n      if (entry) {\n        return \"\";\n      } else {\n        return mapPretty(\"precedingIgnored\");\n      }\n    }).call(this) + mapPretty(\"modifiers\") + node.token + mapPretty(\"contents\") + mapPretty(\"closingIgnored\") + ((node.closed && acceptablePairs[node.token]) || \"\"))));\n  });\n  sibilant.prettyPrint.root = (function sibilant$prettyPrint$root$(node, color, entry) {\n    /* sibilant.pretty-print.root src/pretty-printer.sibilant:39:0 */\n  \n    return map(node.contents, (function() {\n      /* src/pretty-printer.sibilant:41:16 */\n    \n      return prettify(arguments[0], color, false);\n    })).join(\"\\n\");\n  });\n  sibilant.prettyPrint.output = (function sibilant$prettyPrint$output$(node, color) {\n    /* sibilant.pretty-print.output src/pretty-printer.sibilant:44:0 */\n  \n    return ((function() {\n      if (color) {\n        return black(\"{\");\n      } else {\n        return \"\";\n      }\n    }).call(this) + (function() {\n      if (((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\")) {\n        return map(node.contents, (function() {\n          /* src/pretty-printer.sibilant:48:28 */\n        \n          return sibilant.prettyPrint.colorize(node, color, prettify(arguments[0], color, false));\n        })).join((function() {\n          if (color) {\n            return black(\",\");\n          } else {\n            return \"\";\n          }\n        }).call(this));\n      } else {\n        return sibilant.prettyPrint.colorize(node, color, node.contents);\n      }\n    }).call(this) + (function() {\n      if (color) {\n        return black(\"}\");\n      } else {\n        return \"\";\n      }\n    }).call(this));\n  });\n  var realNewlines = (function realNewlines$(node) {\n    /* real-newlines src/pretty-printer.sibilant:54:0 */\n  \n    return node.split(\"\\\\n\").join(\"\\n\");\n  });\n  sibilant.prettyPrint.colorize = (function sibilant$prettyPrint$colorize$(node, color, string) {\n    /* sibilant.pretty-print.colorize src/pretty-printer.sibilant:59:0 */\n  \n    return (function() {\n      if (!(color)) {\n        return string;\n      } else if (node.hint === \"macro\") {\n        return yellow(string);\n      } else if (node__QUERY(node, \"output\")) {\n        return purple(string);\n      } else {\n        return green(string);\n      }\n    }).call(this);\n  });\n  var outputFormatter = (function outputFormatter$(node) {\n    /* output-formatter src/output-formatter.sibilant:1:0 */\n  \n    return (function() {\n      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, outputFormatter).join(\"\");\n      } else if (node__QUERY(node, \"output\")) {\n        return outputFormatter(node.contents);\n      } else if ((typeof node === \"string\" || typeof node === \"number\")) {\n        return node;\n      } else if (!((typeof node !== \"undefined\" && node !== null))) {\n        return \"\";\n      } else if (node__QUERY(node)) {\n        console.log(\"WE SHOULD NOT BE HERE\");\n        console.log(\"node\");\n        console.log(prettify(node));\n        return outputFormatter(transpile(node));\n      }\n    }).call(this);\n  });\n  sibilant.outputFormatter = outputFormatter;\n  var bulkMap = (function bulkMap$(arr, fn) {\n    /* bulk-map include/functional.sibilant:1:0 */\n  \n    var index = 0,\n        groupSize = fn.length,\n        retArr = [];\n    (function() {\n      var $_symbol3_$ = undefined;\n      while (index < arr.length) {\n        $_symbol3_$ = (function() {\n          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n          return index += groupSize;\n        }).call(this);\n      };\n      return $_symbol3_$;\n    }).call(this);\n    return retArr;\n  });\n  var inject = (function inject$(start, items, fn) {\n    /* inject include/functional.sibilant:13:0 */\n  \n    var value = start;\n    (function() {\n      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n        return items.forEach((function(item, index) {\n          /* include/functional.sibilant:16:4 */\n        \n          return value = fn(value, item, index);\n        }));\n      }\n    }).call(this);\n    return value;\n  });\n  var map = (function map$(items, fn) {\n    /* map include/functional.sibilant:20:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* include/functional.sibilant:22:10 */\n    \n      collector.push(fn(item, index));\n      return collector;\n    }));\n  });\n  var select = (function select$(items, fn) {\n    /* select include/functional.sibilant:26:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* include/functional.sibilant:28:10 */\n    \n      (function() {\n        if (fn(item, index)) {\n          return collector.push(item);\n        }\n      }).call(this);\n      return collector;\n    }));\n  });\n  var detect = (function detect$(items, fn) {\n    /* detect include/functional.sibilant:33:0 */\n  \n    var returnItem = undefined,\n        index = 0,\n        items = (items || []);\n    (function() {\n      var $_symbol4_$ = undefined;\n      while (!((items.length === index || returnItem))) {\n        $_symbol4_$ = (function() {\n          (function() {\n            if (fn(items[index], index)) {\n              return returnItem = items[index];\n            }\n          }).call(this);\n          return ((index)++);\n        }).call(this);\n      };\n      return $_symbol4_$;\n    }).call(this);\n    return returnItem;\n  });\n  var all__QUERY = (function all__QUERY$(items, fn) {\n    /* all? include/functional.sibilant:45:0 */\n  \n    return typeof detect(items, (function(item, index) {\n      /* include/functional.sibilant:46:31 */\n    \n      return !(fn(item, index));\n    })) === \"undefined\";\n  });\n  var none__QUERY = (function none__QUERY$(items, fn) {\n    /* none? include/functional.sibilant:48:0 */\n  \n    return typeof detect(items, fn) === \"undefined\";\n  });\n  var any__QUERY = (function any__QUERY$(items, fn) {\n    /* any? include/functional.sibilant:51:0 */\n  \n    return typeof detect(items, fn) !== \"undefined\";\n  });\n  var reject = (function reject$(items, fn) {\n    /* reject include/functional.sibilant:54:0 */\n  \n    var args = [ items, fn ];\n    return select(items, (function() {\n      /* include/functional.sibilant:56:16 */\n    \n      return !(fn.apply(this, arguments));\n    }));\n  });\n  var compact = (function compact$(arr) {\n    /* compact include/functional.sibilant:58:0 */\n  \n    return select(arr, (function(item) {\n      /* include/functional.sibilant:59:17 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var interleave = (function interleave$(glue, arr) {\n    /* interleave include/functional.sibilant:65:0 */\n  \n    (function() {\n      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n        var temp = glue;\n        glue = arr;\n        return arr = temp;\n      }\n    }).call(this);\n    return (function() {\n      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n        return inject([], arr, (function(collector, item, index) {\n          /* include/functional.sibilant:71:13 */\n        \n          return collector.concat([ item, glue[index] ]);\n        }));\n      } else {\n        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n          /* include/functional.sibilant:75:13 */\n        \n          return collector.concat([ glue, item ]);\n        }));\n      }\n    }).call(this);\n  });\n  var flatten = (function flatten$(items) {\n    /* flatten include/functional.sibilant:78:0 */\n  \n    var items = Array.prototype.slice.call(arguments, 0);\n  \n    return inject([], items, (function(collector, item) {\n      /* include/functional.sibilant:80:10 */\n    \n      return collector.concat((function() {\n        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n          return flatten.apply(this, item);\n        } else {\n          return item;\n        }\n      }).call(this));\n    }));\n  });\n  var recurseMap = (function recurseMap$(item, fn) {\n    /* recurse-map include/functional.sibilant:87:0 */\n  \n    return (function() {\n      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        return map(item, (function(subitem) {\n          /* include/functional.sibilant:88:32 */\n        \n          return recurseMap(subitem, fn);\n        }));\n      } else {\n        return fn(item);\n      }\n    }).call(this);\n  });\n  var pluck = (function pluck$(items, attribute) {\n    /* pluck include/functional.sibilant:91:0 */\n  \n    return map(items, (function(item) {\n      /* include/functional.sibilant:92:16 */\n    \n      return item[attribute];\n    }));\n  });\n  var mergeInto = (function mergeInto$(into, from) {\n    /* merge-into include/functional.sibilant:94:0 */\n  \n    Object.keys(from).forEach((function(key) {\n      /* include/functional.sibilant:95:5 */\n    \n      return into[key] = from[key];\n    }));\n    return into;\n  });\n  var clone = (function clone$(object) {\n    /* clone include/functional.sibilant:98:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key) {\n      /* include/functional.sibilant:100:13 */\n    \n      collector[key] = object[key];\n      return collector;\n    }));\n  });\n  var mapValues = (function mapValues$(object, fn) {\n    /* map-values include/functional.sibilant:104:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key, index) {\n      /* include/functional.sibilant:106:13 */\n    \n      collector[key] = fn(object[key], key);\n      return collector;\n    }));\n  });\n  var mergeWith = (function mergeWith$(into, from) {\n    /* merge-with include/functional.sibilant:110:0 */\n  \n    return mergeInto(clone(into), from);\n  });\n  var parser = {  };\n  sibilant.parser = parser;\n  parser.tokens = {\n    \"regex\": \"(\\\\/(\\\\\\\\\\\\\\/|[^\\\\/\\\\n])+\\\\/[glim]*)\",\n    \"comment\": \"(;.*)\",\n    \"string\": \"(\\\"(([^\\\"]|(\\\\\\\\\\\"))*[^\\\\\\\\])?\\\")\",\n    \"number\": \"(-?[0-9][0-9.,]*)\",\n    \"literal\": \"(-?[*.$a-zA-Z_][/*.a-zA-Z0-9-_]*(\\\\?|!)?)\",\n    \"special\": \"([&'])\",\n    \"at\": \"@\",\n    \"tick\": \"[`']\",\n    \"hat\": \"(\\\\^)\",\n    \"dots\": \"(\\\\.+)\",\n    \"argPlaceholder\": \"(#[0-9]+)\",\n    \"otherChar\": \"([\\\\|#><=!\\\\+\\\\/\\\\*-]+)\",\n    \"openExpression\": \"(\\\\(|\\\\{|\\\\[)\",\n    \"closeExpression\": \"(\\\\)|\\\\}|\\\\])\",\n    \"newline\": \"\\\\n\",\n    \"whitespace\": \"\\\\s+\",\n    \"ignored\": \".\"\n  };\n  parser.tokenPrecedence = [ \"regex\", \"comment\", \"string\", \"number\", \"dots\", \"tick\", \"hat\", \"at\", \"special\", \"literal\", \"argPlaceholder\", \"otherChar\", \"openExpression\", \"closeExpression\", \"newline\", \"whitespace\", \"ignored\" ];\n  parser.orderedRegexes = parser.tokenPrecedence.map((function(x) {\n    /* src/parser.sibilant:41:23 */\n  \n    return mergeInto((new RegExp((\"^\" + parser.tokens[x]), undefined)), { name: x });\n  }));\n  var orderedRegexes = parser.orderedRegexes;\n  parser.parse = (function parser$parse$(string, context) {\n    /* parser.parse src/parser.sibilant:46:0 */\n  \n    context = (typeof context !== \"undefined\") ? context : {\n      position: 0,\n      stack: [],\n      line: 1,\n      lastNewline: 0,\n      col: 0\n    };\n    var match = true,\n        regexName = null,\n        remainingInput = string;\n    (function() {\n      var $_symbol5_$ = undefined;\n      while (match) {\n        $_symbol5_$ = (function() {\n          detect(orderedRegexes, (function(r) {\n            /* src/parser.sibilant:57:20 */\n          \n            regexName = r.name;\n            return match = r.exec(remainingInput);\n          }));\n          return (function() {\n            if ((typeof match !== \"undefined\" && match !== null)) {\n              var matchString = match[0],\n                  length = matchString.length;\n              context.stack.push({\n                dir: sibilant.dir,\n                file: sibilant.file,\n                token: matchString,\n                type: regexName,\n                start: context.position,\n                line: context.line,\n                col: context.col,\n                length: length,\n                contents: []\n              });\n              (function() {\n                if (\"newline\" === regexName) {\n                  ((context.line)++);\n                  context.col = 0;\n                  return context.lastNewline = context.position;\n                } else if ((\"string\" === regexName && matchString.indexOf(\"\\n\") !== -1)) {\n                  var stringNewlineCount = (matchString.split(\"\\n\").length - 1);\n                  context.line += stringNewlineCount;\n                  return context.col = (length - matchString.lastIndexOf(\"\\n\"));\n                } else {\n                  return context.col += length;\n                }\n              }).call(this);\n              context.position += length;\n              return remainingInput = (function() {\n                if (remainingInput.length) {\n                  return remainingInput.slice(length);\n                } else {\n                  return \"\";\n                }\n              }).call(this);\n            }\n          }).call(this);\n        }).call(this);\n      };\n      return $_symbol5_$;\n    }).call(this);\n    return context.stack;\n  });\n  var parse = parser.parse;\n  var restructurers = {  },\n      acceptablePairs = {\n    \"(\": \")\",\n    \"[\": \"]\",\n    \"{\": \"}\"\n  },\n      bracketTypes = {\n    \"(\": \"expression\",\n    \"[\": \"bracket\",\n    \"{\": \"brace\"\n  };\n  var restructure = (function restructure$(input) {\n    /* restructure src/restructurer.sibilant:7:0 */\n  \n    var output = {\n      type: \"root\",\n      contents: [],\n      file: sibilant.file,\n      col: 0,\n      line: 1\n    },\n        context = {\n      parseStack: [ output ],\n      output: output,\n      input: input,\n      ignoredTokens: [],\n      specials: 0\n    };\n    inject(context, input, (function(context, token, index) {\n      /* src/restructurer.sibilant:20:13 */\n    \n      var restructurer = (restructurers[token.type] || restructurers.default);\n      return restructurer(token, context, index);\n    }));\n    (function() {\n      if (!(1 === context.parseStack.length)) {\n        var unclosedNode = context.parseStack[0];\n        throw (new Error((\"unclosed node at \" + unclosedNode.file + \":\" + unclosedNode.line + \":\" + unclosedNode.col + \"\\n  \" + prettify(unclosedNode, false).slice(0, 100))))\n      }\n    }).call(this);\n    return output;\n  });\n  sibilant.restructure = restructure;\n  restructurers.openExpression = (function restructurers$openExpression$(token, context) {\n    /* restructurers.open-expression src/restructurer.sibilant:35:0 */\n  \n    var first = context.parseStack[0];\n    token.contents = [];\n    token.type = bracketTypes[token.token];\n    acceptIgnoredTokens(token, context);\n    acceptSpecials(token, context);\n    first.contents.push(token);\n    context.parseStack.unshift(token);\n    return context;\n  });\n  restructurers.closeExpression = (function restructurers$closeExpression$(node, context, index) {\n    /* restructurers.close-expression src/restructurer.sibilant:47:0 */\n  \n    var first = context.parseStack[0];\n    (function() {\n      if (node__QUERY(first, \"root\")) {\n        throw (new Error((\"unexpected \" + node.token + \" on \" + node.file + \":\" + node.line + \":\" + node.col)))\n      }\n    }).call(this);\n    (function() {\n      if (acceptablePairs[first.token] !== node.token) {\n        throw (new Error((\"trying to close \" + yellow(sibilant.prettyPrint(first)) + \"\\n   on \" + first.file + \":\" + first.line + \":\" + first.col + \"\\n   with \" + sibilant.prettyPrint(node) + \"\\n   on \" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\")))\n      }\n    }).call(this);\n    first.end = node.end;\n    first.closed = true;\n    first.closingIgnored = context.ignoredTokens;\n    context.ignoredTokens = [];\n    context.parseStack.shift();\n    closeSpecials(first, context);\n    (function() {\n      if (context.parseStack.length === 0) {\n        throw (new Error((\"unbalanced parens:\\n\" + inspect(parseStack))))\n      }\n    }).call(this);\n    return context;\n  });\n  var openSpecial = (function openSpecial$(node, context) {\n    /* open-special src/restructurer.sibilant:72:0 */\n  \n    ((context.specials)++);\n    acceptIgnoredTokens(node, context);\n    var first = context.parseStack[0];\n    node.contents = [];\n    first.contents.push(node);\n    context.parseStack.unshift(node);\n    return context;\n  });\n  var acceptSpecials = (function acceptSpecials$(node, context) {\n    /* accept-specials src/restructurer.sibilant:85:0 */\n  \n    node.specials = context.specials;\n    context.specials = 0;\n    return context;\n  });\n  var acceptIgnoredTokens = (function acceptIgnoredTokens$(node, context) {\n    /* accept-ignored-tokens src/restructurer.sibilant:90:0 */\n  \n    node.precedingIgnored = context.ignoredTokens;\n    context.ignoredTokens = [];\n    return context;\n  });\n  var closeSpecials = (function closeSpecials$(node, context) {\n    /* close-specials src/restructurer.sibilant:95:0 */\n  \n    (function() {\n      if (node.specials > 0) {\n        ((node.specials)--);\n        context.parseStack.shift();\n        return closeSpecials(node, context);\n      }\n    }).call(this);\n    return context;\n  });\n  var accumulateIgnoredToken = (function accumulateIgnoredToken$(token, context, index) {\n    /* accumulate-ignored-token src/restructurer.sibilant:103:0 */\n  \n    context.ignoredTokens.push(token);\n    return context;\n  });\n  [ \"hat\", \"dots\", \"tick\", \"at\" ].forEach((function(special) {\n    /* src/restructurer.sibilant:107:0 */\n  \n    return restructurers[special] = openSpecial;\n  }));\n  [ \"whitespace\", \"newline\", \"ignored\" ].forEach((function(ignored) {\n    /* src/restructurer.sibilant:110:0 */\n  \n    return restructurers[ignored] = accumulateIgnoredToken;\n  }));\n  restructurers.default = (function restructurers$default$(token, context, index) {\n    /* restructurers.default src/restructurer.sibilant:113:0 */\n  \n    acceptSpecials(token, context);\n    acceptIgnoredTokens(token, context);\n    context.parseStack[0].contents.push(token);\n    return closeSpecials(token, context);\n  });\n  var coreNamespace = {  },\n      macroNamespaces = { core: coreNamespace };\n  sibilant.state = {  };\n  sibilant.macros = {\n    \"namespaces\": macroNamespaces,\n    \"defaultSearchPath\": [ \"core\" ],\n    \"searchPath\": [ \"core\" ],\n    \"namespace\": coreNamespace\n  };\n  var namespace = sibilant.macros.namespace,\n      macros = sibilant.macros.namespace;\n  sibilant.macros.currentNamespace = (function sibilant$macros$currentNamespace$() {\n    /* sibilant.macros.current-namespace src/macros.sibilant:14:0 */\n  \n    return sibilant.macros.namespaces[sibilant.macros.searchPath[0]];\n  });\n  sibilant.resolveMacro = (function sibilant$resolveMacro$(macroName) {\n    /* sibilant.resolve-macro src/macros.sibilant:17:0 */\n  \n    return (function() {\n      if ((macroName.indexOf(\"/\") !== -1 && 1 < macroName.length && !(macroName.indexOf(\"\\n\") !== -1))) {\n        var pathComponents = macroName.split(\"/\"),\n            macro = (sibilant.macros.namespaces.hasOwnProperty(pathComponents[0]) && sibilant.macros.namespaces[pathComponents[0]][pathComponents.slice(1).join(\"/\")]);\n        return (function() {\n          if (macro) {\n            return macro;\n          } else {\n            return error((\"called namespaced macro \" + macroName + \" but could not find namespace \" + pathComponents[0] + \". you might need to include the file that defines it first.\"));\n          }\n        }).call(this);\n      } else {\n        var namespace = detect(sibilant.macros.searchPath, (function(namespace) {\n          /* src/macros.sibilant:29:33 */\n        \n          return sibilant.macros.namespaces[namespace].hasOwnProperty(macroName);\n        }));\n        return (function() {\n          if (namespace) {\n            return sibilant.macros.namespaces[namespace][macroName];\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.withDefaultSearchPath = (function sibilant$withDefaultSearchPath$(fn) {\n    /* sibilant.with-default-search-path src/macros.sibilant:34:0 */\n  \n    var searchPathBefore = sibilant.macros.searchPath;\n    sibilant.macros.searchPath = sibilant.macros.defaultSearchPath;\n    var returnValue = fn();\n    sibilant.macros.searchPath = searchPathBefore;\n    return returnValue;\n  });\n  sibilant.macros.namespaces.core.ternary = (function ternary$(cond, ifTrue, ifFalse) {\n    /* ternary include/macros.sibilant:9:0 */\n  \n    return [ \"(\", transpile(cond), \") ? \", transpile(ifTrue), \" : \", transpile(ifFalse) ];\n  });\n  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n    /* set include/macros.sibilant:19:0 */\n  \n    var kvPairs = Array.prototype.slice.call(arguments, 1);\n  \n    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n      /* include/macros.sibilant:21:34 */\n    \n      return asStatement([ \"(\", transpile(arr), \")\", \"[\", transpile(k), \"] = \", transpile(v) ]);\n    })));\n  });\n  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n    /* var include/macros.sibilant:25:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return asStatement([ \"var \", interleave(\",\\n    \", bulkMap(pairs, (function(name, value) {\n      /* include/macros.sibilant:30:25 */\n    \n      return [ transpile(name), \" = \", transpile(value) ];\n    }))) ]);\n  });\n  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n    /* get include/macros.sibilant:35:0 */\n  \n    var keys = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(\", transpile(obj), \")\", map(keys, (function(key) {\n      /* include/macros.sibilant:36:42 */\n    \n      return [ \"[\", transpile(key), \"]\" ];\n    })) ];\n  });\n  sibilant.macros.namespaces.core.aliasMacro = (function aliasMacro$(currentMacroName, newMacroName) {\n    /* alias-macro include/macros.sibilant:47:0 */\n  \n    var currentMacroName = outputFormatter(transpile(currentMacroName)),\n        newMacroName = outputFormatter(transpile(newMacroName));\n    sibilant.macros.namespace[newMacroName] = sibilant.macros.namespace[currentMacroName];\n    return null;\n  });\n  sibilant.macros.namespaces.core.send = (function send$(object, method, args) {\n    /* send include/macros.sibilant:62:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 2);\n  \n    return [ transpile(object), \".\", transpile(method), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.apply = (function apply$(fn, arglist) {\n    /* apply include/macros.sibilant:74:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 2119,\n      line: 75,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 2120,\n        line: 75,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"apply\",\n          type: \"literal\",\n          start: 2121,\n          line: 75,\n          col: 10,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, fn, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"this\",\n        type: \"literal\",\n        start: 2131,\n        line: 75,\n        col: 20,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 2130,\n          line: 75,\n          col: 19,\n          length: 1,\n          contents: []\n        } ]\n      }, arglist ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.cons = (function cons$(first, rest) {\n    /* cons include/macros.sibilant:86:0 */\n  \n    return [ \"[ \", transpile(first), \" ].concat(\", transpile(rest), \")\" ];\n  });\n  sibilant.macros.namespaces.core.append = (function append$(list, additional) {\n    /* append include/macros.sibilant:95:0 */\n  \n    var additional = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 2690,\n      line: 96,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 2691,\n        line: 96,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"concat\",\n          type: \"literal\",\n          start: 2692,\n          line: 96,\n          col: 10,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, list, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 2705,\n        line: 96,\n        col: 23,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"list\",\n          type: \"literal\",\n          start: 2706,\n          line: 96,\n          col: 24,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(additional),\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 2704,\n          line: 96,\n          col: 22,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.length = (function length$(arr) {\n    /* length include/macros.sibilant:102:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 2871,\n      line: 103,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 2872,\n        line: 103,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":2881,\"line\":103,\"col\":18,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"length\",\"type\":\"literal\",\"start\":2882,\"line\":103,\"col\":19,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":2880,\"line\":103,\"col\":17,\"length\":1,\"contents\":[]}]} ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.scoped = (function scoped$(body) {\n    /* scoped include/macros.sibilant:109:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 3126,\n      line: 110,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 3127,\n        line: 110,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"call\",\n          type: \"literal\",\n          start: 3128,\n          line: 110,\n          col: 10,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 3133,\n        line: 110,\n        col: 15,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"lambda\",\n          type: \"literal\",\n          start: 3134,\n          line: 110,\n          col: 16,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          node: this,\n          args: []\n        } ].concat(body),\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3132,\n          line: 110,\n          col: 14,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"this\",\n        type: \"literal\",\n        start: 3172,\n        line: 110,\n        col: 54,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3171,\n          line: 110,\n          col: 53,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.first = (function first$(arr) {\n    /* first include/macros.sibilant:130:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 3954,\n      line: 130,\n      col: 20,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 3955,\n        line: 130,\n        col: 21,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 3964,\n        line: 130,\n        col: 30,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3963,\n          line: 130,\n          col: 29,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.second = (function second$(arr) {\n    /* second include/macros.sibilant:131:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 3989,\n      line: 131,\n      col: 21,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 3990,\n        line: 131,\n        col: 22,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        start: 3999,\n        line: 131,\n        col: 31,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3998,\n          line: 131,\n          col: 30,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.third = (function third$(arr) {\n    /* third include/macros.sibilant:132:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 4023,\n      line: 132,\n      col: 20,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 4024,\n        line: 132,\n        col: 21,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"2\",\n        type: \"number\",\n        start: 4033,\n        line: 132,\n        col: 30,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 4032,\n          line: 132,\n          col: 29,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.rest = (function rest$(arr) {\n    /* rest include/macros.sibilant:138:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 4170,\n      line: 138,\n      col: 19,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 4171,\n        line: 138,\n        col: 20,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"slice\",\n          type: \"literal\",\n          start: 4172,\n          line: 138,\n          col: 21,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arr, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        start: 4183,\n        line: 138,\n        col: 32,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 4182,\n          line: 138,\n          col: 31,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.last = (function last$(arr) {\n    /* last include/macros.sibilant:143:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 4330,\n      line: 143,\n      col: 19,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"first\",\n        type: \"literal\",\n        start: 4331,\n        line: 143,\n        col: 20,\n        length: 5,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 4337,\n        line: 143,\n        col: 26,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 4338,\n          line: 143,\n          col: 27,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"slice\",\n            type: \"literal\",\n            start: 4339,\n            line: 143,\n            col: 28,\n            length: 5,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, arr, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          start: 4350,\n          line: 143,\n          col: 39,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 4349,\n            line: 143,\n            col: 38,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 4336,\n          line: 143,\n          col: 25,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"=\"] = (function $$(a, b) {\n    /* = include/macros.sibilant:146:0 */\n  \n    return [ transpile(a), \" === \", transpile(b) ];\n  });\n  sibilant.macros.namespaces.core[\"+\"] = (function $$(args) {\n    /* + include/macros.sibilant:153:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.concat = sibilant.macros.namespaces.core[\"+\"];\n  sibilant.macros.namespaces.core[\"-\"] = (function $$(args) {\n    /* - include/macros.sibilant:161:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" - \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"_\"] = (function _$(args) {\n    /* * include/macros.sibilant:167:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" * \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"/\"] = (function $$(args) {\n    /* / include/macros.sibilant:174:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" / \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.or = (function or$(args) {\n    /* or include/macros.sibilant:181:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" || \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.and = (function and$(args) {\n    /* and include/macros.sibilant:189:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return (1 === args.length) ? transpile(args[0]) : [ \"(\", interleave(\" && \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.mod = (function mod$(args) {\n    /* mod include/macros.sibilant:196:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" % \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\">\"] = (function $$(args) {\n    /* > include/macros.sibilant:231:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \">\";\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7315,\n      line: 233,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7316,\n        line: 233,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* include/macros.sibilant:234:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"<\"] = (function $$(args) {\n    /* < include/macros.sibilant:238:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"<\";\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7527,\n      line: 240,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7528,\n        line: 240,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* include/macros.sibilant:241:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"<=\"] = (function $$(args) {\n    /* <= include/macros.sibilant:244:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"<=\";\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7740,\n      line: 246,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7741,\n        line: 246,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* include/macros.sibilant:247:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\">=\"] = (function $$(args) {\n    /* >= include/macros.sibilant:250:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \">=\";\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7953,\n      line: 252,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7954,\n        line: 252,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* include/macros.sibilant:253:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"!=\"] = (function $$(args) {\n    /* != include/macros.sibilant:255:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"!==\";\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 8166,\n      line: 257,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 8167,\n        line: 257,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* include/macros.sibilant:258:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"=\"] = (function $$(args) {\n    /* = include/macros.sibilant:261:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"===\";\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 8379,\n      line: 263,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 8380,\n        line: 263,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* include/macros.sibilant:264:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.incrBy = (function incrBy$(item, increment) {\n    /* incr-by include/macros.sibilant:271:0 */\n  \n    return [ transpile(item), \" += \", transpile(increment) ];\n  });\n  sibilant.macros.namespaces.core.incr = (function incr$(item) {\n    /* incr include/macros.sibilant:280:0 */\n  \n    return [ \"((\", transpile(item), \")++)\" ];\n  });\n  sibilant.macros.namespaces.core.decr = (function decr$(item) {\n    /* decr include/macros.sibilant:287:0 */\n  \n    return [ \"((\", transpile(item), \")--)\" ];\n  });\n  sibilant.macros.namespaces.core.new = (function new$(constructor, args) {\n    /* new include/macros.sibilant:294:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(new \", {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9236,\n      line: 295,\n      col: 17,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"call\",\n        type: \"literal\",\n        start: 9237,\n        line: 295,\n        col: 18,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, constructor ].concat(args),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }, \")\" ];\n  });\n  sibilant.macros.namespaces.core.regex = (function regex$(pattern, flags) {\n    /* regex include/macros.sibilant:302:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9481,\n      line: 303,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"new\",\n        type: \"literal\",\n        start: 9482,\n        line: 303,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"RegExp\",\n        type: \"literal\",\n        start: 9486,\n        line: 303,\n        col: 13,\n        length: 6,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9485,\n          line: 303,\n          col: 12,\n          length: 1,\n          contents: []\n        } ]\n      }, pattern, (flags || \"undefined\") ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"zero__QUERY\"] = (function zero__QUERY$(item) {\n    /* zero? include/macros.sibilant:310:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9647,\n      line: 310,\n      col: 21,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 9648,\n        line: 310,\n        col: 22,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, item, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 9656,\n        line: 310,\n        col: 30,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9655,\n          line: 310,\n          col: 29,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"empty__QUERY\"] = (function empty__QUERY$(arr) {\n    /* empty? include/macros.sibilant:316:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9811,\n      line: 317,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 9812,\n        line: 317,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 9814,\n        line: 317,\n        col: 11,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9813,\n          line: 317,\n          col: 10,\n          length: 1,\n          contents: []\n        } ]\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 9816,\n        line: 317,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"length\",\n          type: \"literal\",\n          start: 9817,\n          line: 317,\n          col: 14,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, arr ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9815,\n          line: 317,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"odd__QUERY\"] = (function odd__QUERY$(number) {\n    /* odd? include/macros.sibilant:323:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9963,\n      line: 324,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 9964,\n        line: 324,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        start: 9966,\n        line: 324,\n        col: 11,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9965,\n          line: 324,\n          col: 10,\n          length: 1,\n          contents: []\n        } ]\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 9968,\n        line: 324,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"mod\",\n          type: \"literal\",\n          start: 9969,\n          line: 324,\n          col: 14,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, number, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"2\",\n          type: \"number\",\n          start: 9981,\n          line: 324,\n          col: 26,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 9980,\n            line: 324,\n            col: 25,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9967,\n          line: 324,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"even__QUERY\"] = (function even__QUERY$(number) {\n    /* even? include/macros.sibilant:330:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 10134,\n      line: 331,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 10135,\n        line: 331,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 10137,\n        line: 331,\n        col: 11,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 10136,\n          line: 331,\n          col: 10,\n          length: 1,\n          contents: []\n        } ]\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 10139,\n        line: 331,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"mod\",\n          type: \"literal\",\n          start: 10140,\n          line: 331,\n          col: 14,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, number, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"2\",\n          type: \"number\",\n          start: 10152,\n          line: 331,\n          col: 26,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 10151,\n            line: 331,\n            col: 25,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 10138,\n          line: 331,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.typeof = (function typeof$(thing) {\n    /* typeof include/macros.sibilant:338:0 */\n  \n    return [ \"typeof \", transpile(thing) ];\n  });\n  sibilant.macros.namespaces.core[\"string__QUERY\"] = (function string__QUERY$(things) {\n    /* string? include/macros.sibilant:344:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 10588,\n      line: 345,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 10589,\n        line: 345,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* include/macros.sibilant:345:29 */\n      \n        return {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 10620,\n          line: 345,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 10621,\n            line: 345,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 10623,\n            line: 345,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 10624,\n              line: 345,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 10622,\n              line: 345,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10639,\"line\":345,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"string\",\"type\":\"literal\",\"start\":10640,\"line\":345,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10638,\"line\":345,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"function__QUERY\"] = (function function__QUERY$(things) {\n    /* function? include/macros.sibilant:351:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 10832,\n      line: 352,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 10833,\n        line: 352,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* include/macros.sibilant:352:29 */\n      \n        return {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 10864,\n          line: 352,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 10865,\n            line: 352,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 10867,\n            line: 352,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 10868,\n              line: 352,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 10866,\n              line: 352,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10883,\"line\":352,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"function\",\"type\":\"literal\",\"start\":10884,\"line\":352,\"col\":60,\"length\":8,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10882,\"line\":352,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"undefined__QUERY\"] = (function undefined__QUERY$(things) {\n    /* undefined? include/macros.sibilant:361:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11199,\n      line: 362,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 11200,\n        line: 362,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* include/macros.sibilant:362:29 */\n      \n        return {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 11231,\n          line: 362,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 11232,\n            line: 362,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 11234,\n            line: 362,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 11235,\n              line: 362,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 11233,\n              line: 362,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11250,\"line\":362,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11251,\"line\":362,\"col\":60,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11249,\"line\":362,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"defined__QUERY\"] = (function defined__QUERY$(things) {\n    /* defined? include/macros.sibilant:370:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11526,\n      line: 371,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 11527,\n        line: 371,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* include/macros.sibilant:371:29 */\n      \n        return {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 11558,\n          line: 371,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"!=\",\n            type: \"otherChar\",\n            start: 11559,\n            line: 371,\n            col: 41,\n            length: 2,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 11562,\n            line: 371,\n            col: 44,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 11563,\n              line: 371,\n              col: 45,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 11561,\n              line: 371,\n              col: 43,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11578,\"line\":371,\"col\":60,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11579,\"line\":371,\"col\":61,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11577,\"line\":371,\"col\":59,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"number__QUERY\"] = (function number__QUERY$(things) {\n    /* number? include/macros.sibilant:378:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11787,\n      line: 379,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 11788,\n        line: 379,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* include/macros.sibilant:379:29 */\n      \n        return {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 11819,\n          line: 379,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 11820,\n            line: 379,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 11822,\n            line: 379,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 11823,\n              line: 379,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 11821,\n              line: 379,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11838,\"line\":379,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"number\",\"type\":\"literal\",\"start\":11839,\"line\":379,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11837,\"line\":379,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.if = (function if$(arg, truebody, falsebody) {\n    /* if include/macros.sibilant:383:0 */\n  \n    return [ \"(function() {\", indent([ \"if (\", transpile(arg), \") {\", indent({\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11999,\n      line: 386,\n      col: 33,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 12000,\n        line: 386,\n        col: 34,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(truebody),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"} else {\", indent({\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 12086,\n      line: 388,\n      col: 33,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 12087,\n        line: 388,\n        col: 34,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(falsebody),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.pipe = (function pipe$(calls) {\n    /* pipe include/macros.sibilant:416:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 0);\n  \n    return inject(undefined, calls, (function(value, item) {\n      /* include/macros.sibilant:418:15 */\n    \n      return (function() {\n        if (typeof value === \"undefined\") {\n          return item;\n        } else {\n          return (function() {\n            /* include/macros.sibilant:420:21 */\n          \n            var cloned = (function() {\n              if (node__QUERY(item, \"literal\", \"dots\")) {\n                return {\n                  dir: \"include\",\n                  file: \"include/macros.sibilant\",\n                  token: \"(\",\n                  type: \"expression\",\n                  start: 13192,\n                  line: 422,\n                  col: 39,\n                  length: 1,\n                  contents: [ item ],\n                  precedingIgnored: [],\n                  specials: 0,\n                  end: undefined,\n                  closed: true,\n                  closingIgnored: []\n                };\n              } else {\n                return clone(item);\n              }\n            }).call(this);\n            var placeholder = detect(cloned.contents, (function(node) {\n              /* include/macros.sibilant:426:47 */\n            \n              return (node__QUERY(node, \"otherChar\") && \"#\" === node.token);\n            })),\n                placeholderIndex = cloned.contents.indexOf(placeholder),\n                placeholderBoundaries = (function() {\n              if (placeholder) {\n                return [ placeholderIndex, (1 + placeholderIndex) ];\n              } else {\n                return [ 1, 1 ];\n              }\n            }).call(this);\n            return mergeInto(cloned, { contents: cloned.contents.slice(0, placeholderBoundaries[0]).concat([ value ], cloned.contents.slice(placeholderBoundaries[1])) });\n          }).call(this);\n        }\n      }).call(this);\n    }));\n  });\n  sibilant.macros.namespaces.core[\"|>\"] = sibilant.macros.namespaces.core.pipe;\n  sibilant.macros.namespaces.core.comment = (function comment$(contents) {\n    /* comment include/macros.sibilant:447:0 */\n  \n    var contents = Array.prototype.slice.call(arguments, 0);\n  \n    return map(contents, (function(content) {\n      /* include/macros.sibilant:448:21 */\n    \n      return [ \"// \", recurseMap(transpile(content), (function(item) {\n        /* include/macros.sibilant:450:36 */\n      \n        return (item) ? outputFormatter(transpile(item)).replace((new RegExp(\"\\n\", \"g\")), \"\\n// \") : null;\n      })) ];\n    }));\n  });\n  sibilant.macros.namespaces.core[\"array__QUERY\"] = (function array__QUERY$(thing) {\n    /* array? include/macros.sibilant:470:0 */\n  \n    var transpiled = transpile(thing);\n    return [ \"((\", transpiled, \") && typeof (\", transpiled, \") === \\\"object\\\" && (\", transpiled, \").constructor.name === \\\"Array\\\")\" ];\n  });\n  sibilant.macros.namespaces.core[\"list__QUERY\"] = sibilant.macros.namespaces.core[\"array__QUERY\"];\n  sibilant.macros.namespaces.core[\"hash__QUERY\"] = (function hash__QUERY$(thing) {\n    /* hash? include/macros.sibilant:482:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 15730,\n      line: 483,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 15731,\n        line: 483,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 15735,\n        line: 483,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          start: 15736,\n          line: 483,\n          col: 14,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15738,\"line\":483,\"col\":16,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"start\":15739,\"line\":483,\"col\":17,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15737,\"line\":483,\"col\":15,\"length\":1,\"contents\":[]}]}, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 15746,\n          line: 483,\n          col: 24,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"typeof\",\n            type: \"literal\",\n            start: 15747,\n            line: 483,\n            col: 25,\n            length: 6,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 15745,\n            line: 483,\n            col: 23,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 15734,\n          line: 483,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 15776,\n        line: 484,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 15777,\n          line: 484,\n          col: 14,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"null\",\n          type: \"literal\",\n          start: 15787,\n          line: 484,\n          col: 24,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 15786,\n            line: 484,\n            col: 23,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 15762,\n          line: 483,\n          col: 40,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"             \",\n          type: \"whitespace\",\n          start: 15763,\n          line: 484,\n          col: 0,\n          length: 13,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 15806,\n        line: 485,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 15807,\n          line: 485,\n          col: 14,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 15810,\n          line: 485,\n          col: 17,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            start: 15811,\n            line: 485,\n            col: 18,\n            length: 3,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15822,\"line\":485,\"col\":29,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"start\":15823,\"line\":485,\"col\":30,\"length\":11,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15821,\"line\":485,\"col\":28,\"length\":1,\"contents\":[]}]}, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15835,\"line\":485,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"start\":15836,\"line\":485,\"col\":43,\"length\":4,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15834,\"line\":485,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 15809,\n            line: 485,\n            col: 16,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15842,\"line\":485,\"col\":49,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"start\":15843,\"line\":485,\"col\":50,\"length\":5,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15841,\"line\":485,\"col\":48,\"length\":1,\"contents\":[]}]} ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 15792,\n          line: 484,\n          col: 29,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"             \",\n          type: \"whitespace\",\n          start: 15793,\n          line: 485,\n          col: 0,\n          length: 13,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"object__QUERY\"] = sibilant.macros.namespaces.core[\"hash__QUERY\"];\n  sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"] = (function _scopedWithoutReturn$(body) {\n    /* *scoped-without-return include/macros.sibilant:488:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(function() {\", indent.apply(this, body), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core[\"_scopedWithoutSource\"] = (function _scopedWithoutSource$(body) {\n    /* *scoped-without-source include/macros.sibilant:492:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 16030,\n      line: 493,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"*scoped-without-return\",\n        type: \"literal\",\n        start: 16031,\n        line: 493,\n        col: 9,\n        length: 22,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 16054,\n        line: 493,\n        col: 32,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"do\",\n          type: \"literal\",\n          start: 16055,\n          line: 493,\n          col: 33,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(body),\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 16053,\n          line: 493,\n          col: 31,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.when = (function when$(condition, body) {\n    /* when include/macros.sibilant:502:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"](\"if (\", condition, \") {\", indent({\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 16476,\n      line: 505,\n      col: 18,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 16477,\n        line: 505,\n        col: 19,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\");\n  });\n  sibilant.macros.namespaces.core.not = (function not$(exp) {\n    /* not include/macros.sibilant:514:0 */\n  \n    return [ \"!(\", transpile(exp), \")\" ];\n  });\n  sibilant.macros.namespaces.core.unless = (function unless$(condition, body) {\n    /* unless include/macros.sibilant:527:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(function() {\", indent([ \"if (\", {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 17209,\n      line: 529,\n      col: 25,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"not\",\n        type: \"literal\",\n        start: 17210,\n        line: 529,\n        col: 26,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, condition ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }, \") {\", indent({\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 17265,\n      line: 530,\n      col: 33,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 17266,\n        line: 530,\n        col: 34,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.assign = (function assign$(args) {\n    /* assign include/macros.sibilant:535:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", bulkMap(args, (function(name, value) {\n      /* include/macros.sibilant:537:28 */\n    \n      return asStatement([ transpile(name), \" = \", transpile(value) ]);\n    })));\n  });\n  sibilant.macros.namespaces.core.logPretty = (function logPretty$(label, arg) {\n    /* log-pretty include/macros.sibilant:549:0 */\n  \n    var node = this;\n    (function() {\n      if (typeof arg === \"undefined\") {\n        arg = label;\n        return label = [ \"\\\"\", prettify(label, false), \"\\\"\" ];\n      }\n    }).call(this);\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 18088,\n      line: 554,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"console.log\",\n        type: \"literal\",\n        start: 18089,\n        line: 554,\n        col: 9,\n        length: 11,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 18101,\n        line: 554,\n        col: 21,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"concat\",\n          type: \"literal\",\n          start: 18102,\n          line: 554,\n          col: 22,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, [ \"\\\"\", node.file, \":\", node.line, \"\\\"\" ], {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\\" \\\"\",\n          type: \"string\",\n          start: 18146,\n          line: 554,\n          col: 66,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 18145,\n            line: 554,\n            col: 65,\n            length: 1,\n            contents: []\n          } ]\n        }, label, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\\" = \\\"\",\n          type: \"string\",\n          start: 18157,\n          line: 554,\n          col: 77,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 18156,\n            line: 554,\n            col: 76,\n            length: 1,\n            contents: []\n          } ]\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 18163,\n          line: 554,\n          col: 83,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"prettify\",\n            type: \"literal\",\n            start: 18164,\n            line: 554,\n            col: 84,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, arg ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 18162,\n            line: 554,\n            col: 82,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 18100,\n          line: 554,\n          col: 20,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.prettyLog = sibilant.macros.namespaces.core.logPretty;\n  sibilant.macros.namespaces.core.each = (function each$(item, array, body) {\n    /* each include/macros.sibilant:567:17 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 18958,\n      line: 568,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 18959,\n        line: 568,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"for-each\",\n          type: \"literal\",\n          start: 18960,\n          line: 568,\n          col: 10,\n          length: 8,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, array, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 18995,\n        line: 569,\n        col: 19,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"lambda\",\n          type: \"literal\",\n          start: 18996,\n          line: 569,\n          col: 20,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          node: this,\n          args: (function() {\n            if (node__QUERY(item, \"expression\")) {\n              return item;\n            } else {\n              return [ item ];\n            }\n          }).call(this)\n        } ].concat(body),\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 18975,\n          line: 568,\n          col: 25,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"                   \",\n          type: \"whitespace\",\n          start: 18976,\n          line: 569,\n          col: 0,\n          length: 19,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.macroExpand = (function macroExpand$(name) {\n    /* macro-expand include/macros.sibilant:582:0 */\n  \n    var macro = macros[outputFormatter(transpile(name))];\n    return (function() {\n      if (macro) {\n        return macro.toString();\n      } else {\n        return \"undefined\";\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.throw = (function throw$(error) {\n    /* throw include/macros.sibilant:595:0 */\n  \n    return [ \"throw \", transpile(error) ];\n  });\n  sibilant.macros.namespaces.core.asBoolean = (function asBoolean$(expr) {\n    /* as-boolean include/macros.sibilant:606:0 */\n  \n    return [ \"(!!(\", transpile(expr), \"))\" ];\n  });\n  sibilant.macros.namespaces.core.try = (function try$(tryblock, catchblock) {\n    /* try include/macros.sibilant:612:0 */\n  \n    return [ \"(function() {\", indent([ \"try {\", indent({\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 19928,\n      line: 615,\n      col: 26,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 19929,\n        line: 615,\n        col: 27,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, tryblock ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"} catch (e) {\", indent({\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 20003,\n      line: 617,\n      col: 26,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 20004,\n        line: 617,\n        col: 27,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, catchblock ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.state = (function state$(pairs) {\n    /* state include/macros.sibilant:629:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return (function() {\n      if (1 === pairs.length) {\n        return sibilant.state[outputFormatter(transpile(pairs[0]))];\n      } else {\n        bulkMap(pairs, (function(k, v) {\n          /* include/macros.sibilant:632:31 */\n        \n          return sibilant.state[outputFormatter(transpile(k))] = eval(outputFormatter(transpile(v)));\n        }));\n        return null;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.symbol = (function symbol$() {\n    /* symbol include/macros.sibilant:638:0 */\n  \n    var symbolCount = (sibilant.state.symbolCount || 0),\n        newSymbolCount = (1 + symbolCount);\n    sibilant.macros.namespaces.core.state(\"symbolCount\", newSymbolCount);\n    return [ (\"$_symbol\" + newSymbolCount + \"_$\") ];\n  });\n  sibilant.macros.namespaces.core.while = (function while$(condition, body) {\n    /* while include/macros.sibilant:653:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    var symbol = sibilant.macros.namespaces.core.symbol();\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 21141,\n      line: 655,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"*scoped-without-source\",\n        type: \"literal\",\n        start: 21142,\n        line: 655,\n        col: 9,\n        length: 22,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 21174,\n        line: 656,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"var\",\n          type: \"literal\",\n          start: 21175,\n          line: 656,\n          col: 10,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, symbol ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 21164,\n          line: 655,\n          col: 31,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          start: 21165,\n          line: 656,\n          col: 0,\n          length: 9,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        type: \"output\",\n        contents: [ \"while (\", transpile(condition), \") {\", indent({\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 21311,\n          line: 659,\n          col: 35,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"assign\",\n            type: \"literal\",\n            start: 21312,\n            line: 659,\n            col: 36,\n            length: 6,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, symbol, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 21327,\n            line: 659,\n            col: 51,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"*scoped-without-source\",\n              type: \"literal\",\n              start: 21328,\n              line: 659,\n              col: 52,\n              length: 22,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ].concat(body),\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 21326,\n              line: 659,\n              col: 50,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          } ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }), \"}\" ]\n      }, symbol ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.until = (function until$(condition, body) {\n    /* until include/macros.sibilant:672:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 21720,\n      line: 673,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"while\",\n        type: \"literal\",\n        start: 21721,\n        line: 673,\n        col: 9,\n        length: 5,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 21727,\n        line: 673,\n        col: 15,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"not\",\n          type: \"literal\",\n          start: 21728,\n          line: 673,\n          col: 16,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, condition ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 21726,\n          line: 673,\n          col: 14,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"match__QUERY\"] = (function match__QUERY$(regexp, string) {\n    /* match? include/macros.sibilant:682:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 22001,\n      line: 683,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 22002,\n        line: 683,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"match\",\n          type: \"literal\",\n          start: 22003,\n          line: 683,\n          col: 10,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, regexp ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"matchRegex__QUERY\"] = (function matchRegex__QUERY$(string, pattern, flags) {\n    /* match-regex? include/macros.sibilant:688:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 22237,\n      line: 689,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"match?\",\n        type: \"literal\",\n        start: 22238,\n        line: 689,\n        col: 9,\n        length: 6,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 22245,\n        line: 689,\n        col: 16,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          start: 22246,\n          line: 689,\n          col: 17,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern, flags ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 22244,\n          line: 689,\n          col: 15,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, string ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.replace = (function replace$(string, pattern, replacement) {\n    /* replace include/macros.sibilant:695:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 22499,\n      line: 696,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 22500,\n        line: 696,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"replace\",\n          type: \"literal\",\n          start: 22501,\n          line: 696,\n          col: 10,\n          length: 7,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 22531,\n        line: 697,\n        col: 14,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          start: 22532,\n          line: 697,\n          col: 15,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 22516,\n          line: 696,\n          col: 25,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"              \",\n          type: \"whitespace\",\n          start: 22517,\n          line: 697,\n          col: 0,\n          length: 14,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, replacement ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.replaceAll = (function replaceAll$(string, pattern, replacement) {\n    /* replace-all include/macros.sibilant:703:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 22796,\n      line: 704,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 22797,\n        line: 704,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"replace\",\n          type: \"literal\",\n          start: 22798,\n          line: 704,\n          col: 10,\n          length: 7,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 22814,\n        line: 704,\n        col: 26,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          start: 22815,\n          line: 704,\n          col: 27,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern, {\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":22830,\"line\":704,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\"g\",\"type\":\"literal\",\"start\":22831,\"line\":704,\"col\":43,\"length\":1,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"include\",\"file\":\"include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":22829,\"line\":704,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 22813,\n          line: 704,\n          col: 25,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, replacement ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.thunk = (function thunk$(body) {\n    /* thunk include/macros.sibilant:717:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    var node = this,\n        lambdaOptions = {\n      node: node,\n      args: []\n    };\n    (function() {\n      if (!(node__QUERY(body[0]))) {\n        mergeInto(lambdaOptions, body[0]);\n        return body = body.slice(1);\n      }\n    }).call(this);\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 23419,\n      line: 725,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"lambda\",\n        type: \"literal\",\n        start: 23420,\n        line: 725,\n        col: 9,\n        length: 6,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, lambdaOptions ].concat(mapNode(body, (function(node) {\n        /* include/macros.sibilant:727:17 */\n      \n        return (function() {\n          if (node__QUERY(node, \"argPlaceholder\")) {\n            return {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 23572,\n              line: 729,\n              col: 24,\n              length: 1,\n              contents: [ {\n                dir: \"include\",\n                file: \"include/macros.sibilant\",\n                token: \"argument\",\n                type: \"literal\",\n                start: 23573,\n                line: 729,\n                col: 25,\n                length: 8,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, node.token.replace((new RegExp(\"^#\", undefined)), \"\") ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            };\n          } else {\n            return node;\n          }\n        }).call(this);\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"#>\"] = sibilant.macros.namespaces.core.thunk;\n  sibilant.macros.namespaces.core.pipeThunk = (function pipeThunk$(calls) {\n    /* pipe-thunk include/macros.sibilant:740:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 23953,\n      line: 740,\n      col: 30,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"thunk\",\n        type: \"literal\",\n        start: 23954,\n        line: 740,\n        col: 31,\n        length: 5,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, { node: this }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 23975,\n        line: 740,\n        col: 52,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"pipe\",\n          type: \"literal\",\n          start: 23976,\n          line: 740,\n          col: 53,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"#0\",\n          type: \"argPlaceholder\",\n          start: 23981,\n          line: 740,\n          col: 58,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 23980,\n            line: 740,\n            col: 57,\n            length: 1,\n            contents: []\n          } ]\n        } ].concat(calls),\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 23974,\n          line: 740,\n          col: 51,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"#->\"] = sibilant.macros.namespaces.core.pipeThunk;\n  sibilant.macros.namespaces.core.keys = (function keys$(obj) {\n    /* keys include/macros.sibilant:752:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 24287,\n      line: 753,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"Object.keys\",\n        type: \"literal\",\n        start: 24288,\n        line: 753,\n        col: 9,\n        length: 11,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, obj ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.delete = (function delete$(objects) {\n    /* delete include/macros.sibilant:765:0 */\n  \n    var objects = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", map(objects, (function(obj) {\n      /* include/macros.sibilant:766:37 */\n    \n      return asStatement([ \"delete \", transpile(obj) ]);\n    })));\n  });\n  sibilant.macros.namespaces.core.deleteMacro = (function deleteMacro$(macroNames) {\n    /* delete-macro include/macros.sibilant:777:0 */\n  \n    var macroNames = Array.prototype.slice.call(arguments, 0);\n  \n    macroNames.forEach((function(macroName) {\n      /* include/macros.sibilant:778:7 */\n    \n      return delete sibilant.macros.namespace[outputFormatter(transpile(macroName))];\n    }));\n    return null;\n  });\n  sibilant.macros.namespaces.core.delmacro = sibilant.macros.namespaces.core.deleteMacro;\n  sibilant.macros.namespaces.core.renameMacro = (function renameMacro$(currentMacroName, newMacroName) {\n    /* rename-macro include/macros.sibilant:790:0 */\n  \n    sibilant.macros.namespaces.core.aliasMacro(currentMacroName, newMacroName);\n    sibilant.macros.namespaces.core.deleteMacro(currentMacroName);\n    return null;\n  });\n  sibilant.macros.namespaces.core.arguments = (function arguments$() {\n    /* arguments include/macros.sibilant:805:0 */\n  \n    return [ \"(Array.prototype.slice.apply(arguments))\" ];\n  });\n  sibilant.macros.namespaces.core.argument = (function argument$(index) {\n    /* argument include/macros.sibilant:817:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 25873,\n      line: 818,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 25874,\n        line: 818,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"arguments\",\n        type: \"literal\",\n        start: 25878,\n        line: 818,\n        col: 13,\n        length: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 25877,\n          line: 818,\n          col: 12,\n          length: 1,\n          contents: []\n        } ]\n      }, index ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.eachKey = (function eachKey$(as, obj, body) {\n    /* each-key include/macros.sibilant:826:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 26081,\n      line: 827,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        start: 26082,\n        line: 827,\n        col: 9,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, obj, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 26092,\n        line: 827,\n        col: 19,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"keys\",\n          type: \"literal\",\n          start: 26093,\n          line: 827,\n          col: 20,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 26091,\n          line: 827,\n          col: 18,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 26113,\n        line: 828,\n        col: 14,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 26114,\n          line: 828,\n          col: 15,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"for-each\",\n            type: \"literal\",\n            start: 26115,\n            line: 828,\n            col: 16,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 26124,\n          line: 828,\n          col: 25,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"lambda\",\n            type: \"literal\",\n            start: 26125,\n            line: 828,\n            col: 26,\n            length: 6,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            args: (function() {\n              if (node__QUERY(as, \"expression\")) {\n                return as;\n              } else {\n                return [ as ];\n              }\n            }).call(this),\n            node: this\n          } ].concat(body),\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 26123,\n            line: 828,\n            col: 24,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 26098,\n          line: 827,\n          col: 25,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"              \",\n          type: \"whitespace\",\n          start: 26099,\n          line: 828,\n          col: 0,\n          length: 14,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.switch = (function switch$(obj, cases) {\n    /* switch include/macros.sibilant:849:0 */\n  \n    var cases = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(function() {\", indent([ \"switch(\", transpile(obj), \") {\", map(cases, (function(caseDef) {\n      /* include/macros.sibilant:852:30 */\n    \n      var caseNameNode = caseDef.contents[0],\n          caseLabels = (function() {\n        if (node__QUERY(caseNameNode, \"expression\", \"bracket\")) {\n          return caseNameNode.contents;\n        } else {\n          return [ caseNameNode ];\n        }\n      }).call(this),\n          caseString = interleave(\"\\n\", map(caseLabels, (function(c) {\n        /* include/macros.sibilant:858:78 */\n      \n        return (function() {\n          if (\"default\" === c.token) {\n            return \"default:\";\n          } else {\n            return [ \"case \", transpile(c), \":\" ];\n          }\n        }).call(this);\n      })));\n      return [ \"\\n\", caseString, indent({\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 27770,\n        line: 862,\n        col: 59,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"do\",\n          type: \"literal\",\n          start: 27771,\n          line: 862,\n          col: 60,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(caseDef.contents.slice(1)),\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }) ];\n    })), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.if = (function if$(alternatingConditionsAndBranches) {\n    /* if include/macros.sibilant:894:0 */\n  \n    var alternatingConditionsAndBranches = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(function() {\", indent(interleave(\" else \", bulkMap(alternatingConditionsAndBranches, (function(cond, val) {\n      /* include/macros.sibilant:899:25 */\n    \n      return (function() {\n        if (typeof val !== \"undefined\") {\n          return [ \"if (\", transpile(cond), \") {\", indent({\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 29046,\n            line: 902,\n            col: 44,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"do\",\n              type: \"literal\",\n              start: 29047,\n              line: 902,\n              col: 45,\n              length: 2,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, val ],\n            precedingIgnored: [],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }), \"}\" ];\n        } else {\n          return [ \"{\", indent({\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 29144,\n            line: 904,\n            col: 47,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"do\",\n              type: \"literal\",\n              start: 29145,\n              line: 904,\n              col: 48,\n              length: 2,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, cond ],\n            precedingIgnored: [],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }), \"}\" ];\n        }\n      }).call(this);\n    })))), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.chain = (function chain$(object, calls) {\n    /* chain include/macros.sibilant:923:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 1);\n  \n    console.log(\"DEPRECATION WARNING: DO NOT USE CHAIN\");\n    console.log((\"  \" + this.file + \":\" + this.line + \":\" + this.col));\n    return (function() {\n      if (0 === calls.length) {\n        return transpile(object);\n      } else if (1 === calls.length) {\n        return {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 29687,\n          line: 927,\n          col: 31,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"send\",\n            type: \"literal\",\n            start: 29688,\n            line: 927,\n            col: 32,\n            length: 4,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, object ].concat(calls[0].contents),\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      } else {\n        var lines = map(calls, (function(call, index) {\n          /* include/macros.sibilant:929:34 */\n        \n          return [ \".\", transpile(call.contents[0]), \"(\", interleave(\", \", map(call.contents.slice(1), transpile)), \")\" ];\n        }));\n        return [ transpile(object), lines[0], \"\\n  \", recurseIndent(interleave(\"\\n\", lines.slice(1))) ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core[\"instanceOf__QUERY\"] = (function instanceOf__QUERY$(item, type) {\n    /* instance-of? include/macros.sibilant:948:0 */\n  \n    return [ \"(\", transpile(item), \" instanceof \", transpile(type), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"includes__QUERY\"] = (function includes__QUERY$(haystack, needle) {\n    /* includes? include/macros.sibilant:959:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 30666,\n      line: 960,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        start: 30667,\n        line: 960,\n        col: 9,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, haystack, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 30682,\n        line: 960,\n        col: 24,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 30683,\n          line: 960,\n          col: 25,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"index-of\",\n            type: \"literal\",\n            start: 30684,\n            line: 960,\n            col: 26,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, needle ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 30681,\n          line: 960,\n          col: 23,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 30702,\n        line: 960,\n        col: 44,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 30703,\n          line: 960,\n          col: 45,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          start: 30706,\n          line: 960,\n          col: 48,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 30705,\n            line: 960,\n            col: 47,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 30701,\n          line: 960,\n          col: 43,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"excludes__QUERY\"] = (function excludes__QUERY$(haystack, needle) {\n    /* excludes? include/macros.sibilant:972:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 30979,\n      line: 973,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        start: 30980,\n        line: 973,\n        col: 9,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, haystack, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 30995,\n        line: 973,\n        col: 24,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 30996,\n          line: 973,\n          col: 25,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"index-of\",\n            type: \"literal\",\n            start: 30997,\n            line: 973,\n            col: 26,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, needle ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 30994,\n          line: 973,\n          col: 23,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 31015,\n        line: 973,\n        col: 44,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          start: 31016,\n          line: 973,\n          col: 45,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          start: 31018,\n          line: 973,\n          col: 47,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 31017,\n            line: 973,\n            col: 46,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 31014,\n          line: 973,\n          col: 43,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"exists__QUERY\"] = (function exists__QUERY$(thing) {\n    /* exists? include/macros.sibilant:983:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 31233,\n      line: 984,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 31234,\n        line: 984,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 31238,\n        line: 984,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"defined?\",\n          type: \"literal\",\n          start: 31239,\n          line: 984,\n          col: 14,\n          length: 8,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 31237,\n          line: 984,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 31256,\n        line: 984,\n        col: 31,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 31257,\n          line: 984,\n          col: 32,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"null\",\n          type: \"literal\",\n          start: 31267,\n          line: 984,\n          col: 42,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 31266,\n            line: 984,\n            col: 41,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 31255,\n          line: 984,\n          col: 30,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.withState = (function withState$(k, v, body) {\n    /* with-state include/macros.sibilant:990:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var before = sibilant.macros.namespaces.core.state(k);\n    sibilant.macros.namespaces.core.state(k, v);\n    var returnValue = interleave(\"\\n\", map(body, transpile));\n    sibilant.macros.namespaces.core.state(k, before);\n    return returnValue;\n  });\n  sibilant.macros.namespaces.core.join = (function join$(arr, glue) {\n    /* join include/macros.sibilant:1012:0 */\n  \n    (function() {\n      if ((typeof glue !== \"undefined\" && typeof arr === \"undefined\")) {\n        arr = glue;\n        return glue = undefined;\n      }\n    }).call(this);\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 31967,\n      line: 1015,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 31968,\n        line: 1015,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"join\",\n          type: \"literal\",\n          start: 31969,\n          line: 1015,\n          col: 10,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arr, (glue || \"\\\"\\\"\") ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.parens = (function parens$(node) {\n    /* parens include/macros.sibilant:1017:0 */\n  \n    return [ \"(\", node, \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"_destructure\"] = (function _destructure$(pairs) {\n    /* *destructure include/macros.sibilant:1021:0 */\n  \n    var destructured = [];\n    bulkMap(pairs, (function(lhs, rhs) {\n      /* include/macros.sibilant:1023:21 */\n    \n      var transpiledRhs = transpile(rhs);\n      return (function() {\n        switch(lhs.type) {\n        case \"bracket\":\n          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n              source = (function() {\n            if (literalRhs__QUERY) {\n              return transpiledRhs;\n            } else {\n              var symbol = sibilant.macros.namespaces.core.symbol();\n              destructured.push([ symbol, transpiledRhs ]);\n              return symbol;\n            }\n          }).call(this);\n          lhs.contents.forEach((function(item, index) {\n            /* include/macros.sibilant:1033:32 */\n          \n            return destructured.push([ transpile(item), {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 32968,\n              line: 1034,\n              col: 76,\n              length: 1,\n              contents: [ {\n                dir: \"include\",\n                file: \"include/macros.sibilant\",\n                token: \"get\",\n                type: \"literal\",\n                start: 32969,\n                line: 1034,\n                col: 77,\n                length: 3,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, source, index ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ]);\n          }));\n          return (function() {\n            if (!(literalRhs__QUERY)) {\n              return destructured.push([ source, \"undefined\" ]);\n            }\n          }).call(this);\n        \n        case \"brace\":\n          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n              source = (function() {\n            if (literalRhs__QUERY) {\n              return transpiledRhs;\n            } else if (1 === lhs.contents.length) {\n              return [ \"(\", rhs, \")\" ];\n            } else {\n              var symbol = sibilant.macros.namespaces.core.symbol();\n              destructured.push([ symbol, transpiledRhs ]);\n              return symbol;\n            }\n          }).call(this);\n          lhs.contents.forEach((function(item, index) {\n            /* include/macros.sibilant:1046:32 */\n          \n            var trItem = transpile(item);\n            return destructured.push([ trItem, {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 34059,\n              line: 1048,\n              col: 67,\n              length: 1,\n              contents: [ {\n                dir: \"include\",\n                file: \"include/macros.sibilant\",\n                token: \"get\",\n                type: \"literal\",\n                start: 34060,\n                line: 1048,\n                col: 68,\n                length: 3,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, source, [ \"\\\"\", trItem, \"\\\"\" ] ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ]);\n          }));\n          return (function() {\n            if (!((literalRhs__QUERY || 1 === lhs.contents.length))) {\n              return destructured.push([ source, \"undefined\" ]);\n            }\n          }).call(this);\n        \n        default:\n          return destructured.push([ transpile(lhs), (function() {\n            if (rhs) {\n              return transpiledRhs;\n            } else {\n              return \"undefined\";\n            }\n          }).call(this) ]);\n        }\n      }).call(this);\n    }));\n    return destructured;\n  });\n  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n    /* var include/macros.sibilant:1070:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return asStatement([ \"var \", interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n      /* include/macros.sibilant:1074:25 */\n    \n      return [ pair[0], \" = \", pair[1] ];\n    })), \",\\n    \") ]);\n  });\n  sibilant.macros.namespaces.core.assign = (function assign$(pairs) {\n    /* assign include/macros.sibilant:1093:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n      /* include/macros.sibilant:1096:17 */\n    \n      return asStatement([ pair[0], \" = \", pair[1] ]);\n    })), \"\\n\");\n  });\n  sibilant.macros.namespaces.core.default = (function default$(pairs) {\n    /* default include/macros.sibilant:1104:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", bulkMap(pairs, (function(name, value) {\n      /* include/macros.sibilant:1105:40 */\n    \n      return {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 36165,\n        line: 1106,\n        col: 35,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"assign\",\n          type: \"literal\",\n          start: 36166,\n          line: 1106,\n          col: 36,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, name, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 36179,\n          line: 1106,\n          col: 49,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"ternary\",\n            type: \"literal\",\n            start: 36180,\n            line: 1106,\n            col: 50,\n            length: 7,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 36188,\n            line: 1106,\n            col: 58,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"defined?\",\n              type: \"literal\",\n              start: 36189,\n              line: 1106,\n              col: 59,\n              length: 8,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, name ],\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 36187,\n              line: 1106,\n              col: 57,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, name, value ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 36178,\n            line: 1106,\n            col: 48,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      };\n    })));\n  });\n  sibilant.macros.namespaces.core.importNamespace = (function importNamespace$(namespace) {\n    /* import-namespace include/macros.sibilant:1109:0 */\n  \n    var namespaceAsString = outputFormatter(transpile(namespace));\n    (function() {\n      if (!(sibilant.macros.namespaces.hasOwnProperty(namespaceAsString))) {\n        return sibilant.macros.namespaces[namespaceAsString] = {  };\n      }\n    }).call(this);\n    sibilant.macros.searchPath.unshift(namespaceAsString);\n    return undefined;\n  });\n  sibilant.macros.namespaces.core.namespace = (function namespace$(namespace) {\n    /* namespace include/macros.sibilant:1117:0 */\n  \n    sibilant.macros.namespaces.core.importNamespace(namespace);\n    sibilant.macros.namespace = sibilant.macros.namespaces[outputFormatter(transpile(namespace))];\n    return undefined;\n  });\n  sibilant.macros.namespaces.core[\"hasKey__QUERY\"] = (function hasKey__QUERY$(object, key) {\n    /* has-key? include/macros.sibilant:1132:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 36973,\n      line: 1133,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 36974,\n        line: 1133,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"has-own-property\",\n          type: \"literal\",\n          start: 36975,\n          line: 1133,\n          col: 10,\n          length: 16,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, object, key ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n    /* get include/macros.sibilant:1154:0 */\n  \n    var keys = Array.prototype.slice.call(arguments, 1);\n  \n    return [ transpile(obj), map(keys, (function(key) {\n      /* include/macros.sibilant:1156:19 */\n    \n      var transpiled = transpile(key),\n          output = outputFormatter(transpiled);\n      return (function() {\n        if (output.match((new RegExp(\"^\\\"[a-zA-Z0-9]+\\\"$\", undefined)))) {\n          return [ \".\", output.replace((new RegExp(\"\\\"\", \"g\")), \"\") ];\n        } else {\n          return [ \"[\", transpiled, \"]\" ];\n        }\n      }).call(this);\n    })) ];\n  });\n  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n    /* set include/macros.sibilant:1183:0 */\n  \n    var kvPairs = Array.prototype.slice.call(arguments, 1);\n  \n    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n      /* include/macros.sibilant:1184:43 */\n    \n      return {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 38641,\n        line: 1184,\n        col: 52,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"assign\",\n          type: \"literal\",\n          start: 38642,\n          line: 1184,\n          col: 53,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 38649,\n          line: 1184,\n          col: 60,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            start: 38650,\n            line: 1184,\n            col: 61,\n            length: 3,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, arr, k ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 38648,\n            line: 1184,\n            col: 59,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, v ],\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      };\n    })));\n  });\n  sibilant.macros.namespaces.core[\"lowerCase__QUERY\"] = (function lowerCase__QUERY$(str) {\n    /* lower-case? include/macros.sibilant:1189:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 38838,\n      line: 1190,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 38839,\n        line: 1190,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 38841,\n        line: 1190,\n        col: 11,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 38842,\n          line: 1190,\n          col: 12,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"to-lower-case\",\n            type: \"literal\",\n            start: 38843,\n            line: 1190,\n            col: 13,\n            length: 13,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 38840,\n          line: 1190,\n          col: 10,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, str ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"upperCase__QUERY\"] = (function upperCase__QUERY$(str) {\n    /* upper-case? include/macros.sibilant:1197:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 39039,\n      line: 1198,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 39040,\n        line: 1198,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 39042,\n        line: 1198,\n        col: 11,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 39043,\n          line: 1198,\n          col: 12,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"to-upper-case\",\n            type: \"literal\",\n            start: 39044,\n            line: 1198,\n            col: 13,\n            length: 13,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 39041,\n          line: 1198,\n          col: 10,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, str ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.sourceMappingUrl = (function sourceMappingUrl$(url) {\n    /* source-mapping-url include/macros.sibilant:1205:0 */\n  \n    return [ \"//# sourceMappingURL=\", eval(outputFormatter(transpile(url))), \"\\n\" ];\n  });\n  sibilant.macros.namespaces.core.sortBy = (function sortBy$(arrayOfObjects, attribute) {\n    /* sort-by include/macros.sibilant:1214:0 */\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 39678,\n      line: 1215,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 39679,\n        line: 1215,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"sort\",\n          type: \"literal\",\n          start: 39680,\n          line: 1215,\n          col: 10,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arrayOfObjects, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 39718,\n        line: 1216,\n        col: 15,\n        length: 1,\n        contents: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"#->\",\n          type: \"otherChar\",\n          start: 39719,\n          line: 1216,\n          col: 16,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 39723,\n          line: 1216,\n          col: 20,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            start: 39724,\n            line: 1216,\n            col: 21,\n            length: 3,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, attribute ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 39722,\n            line: 1216,\n            col: 19,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 39760,\n          line: 1217,\n          col: 20,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"to-string\",\n            type: \"literal\",\n            start: 39761,\n            line: 1217,\n            col: 21,\n            length: 9,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"\\n\",\n            type: \"newline\",\n            start: 39739,\n            line: 1216,\n            col: 36,\n            length: 1,\n            contents: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"                    \",\n            type: \"whitespace\",\n            start: 39740,\n            line: 1217,\n            col: 0,\n            length: 20,\n            contents: []\n          } ]\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 39791,\n          line: 1218,\n          col: 20,\n          length: 1,\n          contents: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \".\",\n            type: \"dots\",\n            start: 39792,\n            line: 1218,\n            col: 21,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"locale-compare\",\n              type: \"literal\",\n              start: 39793,\n              line: 1218,\n              col: 22,\n              length: 14,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ],\n            precedingIgnored: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 39808,\n            line: 1218,\n            col: 37,\n            length: 1,\n            contents: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"get\",\n              type: \"literal\",\n              start: 39809,\n              line: 1218,\n              col: 38,\n              length: 3,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"#1\",\n              type: \"argPlaceholder\",\n              start: 39813,\n              line: 1218,\n              col: 42,\n              length: 2,\n              contents: [],\n              specials: 0,\n              precedingIgnored: [ {\n                dir: \"include\",\n                file: \"include/macros.sibilant\",\n                token: \" \",\n                type: \"whitespace\",\n                start: 39812,\n                line: 1218,\n                col: 41,\n                length: 1,\n                contents: []\n              } ]\n            }, attribute ],\n            precedingIgnored: [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 39807,\n              line: 1218,\n              col: 36,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          } ],\n          precedingIgnored: [ {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"\\n\",\n            type: \"newline\",\n            start: 39770,\n            line: 1217,\n            col: 30,\n            length: 1,\n            contents: []\n          }, {\n            dir: \"include\",\n            file: \"include/macros.sibilant\",\n            token: \"                    \",\n            type: \"whitespace\",\n            start: 39771,\n            line: 1218,\n            col: 0,\n            length: 20,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 39702,\n          line: 1215,\n          col: 32,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \"               \",\n          type: \"whitespace\",\n          start: 39703,\n          line: 1216,\n          col: 0,\n          length: 15,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"require__BANG\"] = (function require__BANG$(requires) {\n    /* require! include/macros.sibilant:1221:0 */\n  \n    var requires = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 39872,\n      line: 1222,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"var\",\n        type: \"literal\",\n        start: 39873,\n        line: 1222,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(inject([], requires, (function(pairs, node) {\n        /* include/macros.sibilant:1223:25 */\n      \n        return pairs.concat((function() {\n          if ((0 === (pairs.length % 2) && node__QUERY(node, \"tick\", \"string\"))) {\n            return [ mergeInto(clone(node), {\n              token: outputFormatter(transpile(node)).slice(1, -1),\n              contents: [],\n              type: \"literal\"\n            }), {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 40481,\n              line: 1233,\n              col: 33,\n              length: 1,\n              contents: [ {\n                dir: \"include\",\n                file: \"include/macros.sibilant\",\n                token: \"require\",\n                type: \"literal\",\n                start: 40482,\n                line: 1233,\n                col: 34,\n                length: 7,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, node ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ];\n          } else if (1 === (pairs.length % 2)) {\n            return [ {\n              dir: \"include\",\n              file: \"include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 40589,\n              line: 1236,\n              col: 36,\n              length: 1,\n              contents: [ {\n                dir: \"include\",\n                file: \"include/macros.sibilant\",\n                token: \"require\",\n                type: \"literal\",\n                start: 40590,\n                line: 1236,\n                col: 37,\n                length: 7,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, node ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ];\n          } else {\n            return [ node ];\n          }\n        }).call(this));\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.export = (function export$(localVars) {\n    /* export include/macros.sibilant:1241:0 */\n  \n    var localVars = Array.prototype.slice.call(arguments, 0);\n  \n    var pairs = localVars.reduce((function(acc, value) {\n      /* include/macros.sibilant:1243:19 */\n    \n      return acc.concat([ sibilant.macros.namespaces.core.quote(value), value ]);\n    }), []);\n    return {\n      dir: \"include\",\n      file: \"include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 40832,\n      line: 1245,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"set\",\n        type: \"literal\",\n        start: 40833,\n        line: 1245,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"include\",\n        file: \"include/macros.sibilant\",\n        token: \"exports\",\n        type: \"literal\",\n        start: 40837,\n        line: 1245,\n        col: 13,\n        length: 7,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"include\",\n          file: \"include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 40836,\n          line: 1245,\n          col: 12,\n          length: 1,\n          contents: []\n        } ]\n      } ].concat(pairs),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.return = (function return$(token) {\n    /* return include/macros.sibilant:1248:0 */\n  \n    (function() {\n      if (sibilant.debug) {\n        return console.log(\"returning \", prettify(token));\n      }\n    }).call(this);\n    var defaultReturn = asStatement([ \"return \", transpile(token) ]);\n    return (function() {\n      if ((token && token.contents && token.contents.length)) {\n        return (function() {\n          switch(token.contents[0].token) {\n          case \"return\":\n          case \"throw\":\n          case \"do\":\n            return transpile(token);\n          \n          case \"delete\":\n            var deleteMacro = macros.delete;\n            return (function() {\n              if (token.contents.length < 3) {\n                return defaultReturn;\n              } else {\n                return [ asStatement(deleteMacro.apply(this, token.contents.slice(1, -1))), \"\\nreturn \", asStatement(deleteMacro(token.contents.slice(-1)[0])) ];\n              }\n            }).call(this);\n          \n          case \"def\":\n            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return(token.contents[1]) ];\n          \n          case \"assign\":\n            return (function() {\n              if (token.contents.length < 4) {\n                return defaultReturn;\n              } else {\n                var result = clone(transpile(token));\n                result.contents = result.contents.slice(0, -4).concat([ \"return \" ], result.contents.slice(-4));\n                return result;\n              }\n            }).call(this);\n          \n          case \"var\":\n            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return((function() {\n              if (0 === (token.contents.length % 2)) {\n                return token.contents.slice(-1)[0];\n              } else {\n                return token.contents.slice(-2)[0];\n              }\n            }).call(this)) ];\n          \n          case \"set\":\n            return (function() {\n              if (token.contents.length < 5) {\n                return defaultReturn;\n              } else {\n                var obj = token.contents[1],\n                    nonReturnPart = token.contents.slice(2, (token.contents.length - 2)),\n                    returnPart = token.contents.slice(-2);\n                nonReturnPart.unshift(obj);\n                returnPart.unshift(obj);\n                return [ sibilant.macros.namespaces.core.set.apply(this, nonReturnPart), \"\\nreturn \", sibilant.macros.namespaces.core.set.apply(this, returnPart) ];\n              }\n            }).call(this);\n          \n          default:\n            return defaultReturn;\n          }\n        }).call(this);\n      } else {\n        return defaultReturn;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.do = (function do$(body) {\n    /* do include/macros.sibilant:1295:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return (function() {\n      if (1 === body.length) {\n        return sibilant.macros.namespaces.core.return(body[0]);\n      } else if (body.length) {\n        return [ interleave(map(body.slice(0, -1), (function() {\n          /* include/macros.sibilant:1303:19 */\n        \n          return asStatement(arguments[0]);\n        })), \"\\n\"), \"\\n\", sibilant.macros.namespaces.core.return(body.slice(-1)[0]) ];\n      } else {\n        return \"\";\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.emptyList = (function emptyList$() {\n    /* empty-list include/macros.sibilant:1310:0 */\n  \n    return \"null\";\n  });\n  sibilant.macros.namespaces.core.def = (function def$(name, args, body) {\n    /* def include/macros.sibilant:1321:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    (function() {\n      if (typeof name === \"undefined\") {\n        return error(\"invalid function definition. missing name.\");\n      } else if (typeof args === \"undefined\") {\n        return error(\"invalid function definition. missing arguments or return value.\");\n      }\n    }).call(this);\n    var nameTr = transpile(name),\n        thisNode = this;\n    sibilant.docs.record(\"function\", sibilant.macros.searchPath[0], name, this);\n    return asStatement([ (function() {\n      if (outputFormatter(nameTr).match((new RegExp(\"\\\\.\", undefined)))) {\n        return \"\";\n      } else {\n        return \"var \";\n      }\n    }).call(this), nameTr, \" = \", sibilant.macros.namespaces.core.lambda({\n      name: name,\n      args: args,\n      node: thisNode,\n      body: body\n    }) ]);\n  });\n  sibilant.macros.namespaces.core.macro = (function macro$(name, args, body) {\n    /* macro include/macros.sibilant:1345:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var nameTr = outputFormatter(transpile(name)),\n        options = {\n      name: name,\n      args: args,\n      node: this\n    },\n        js = outputFormatter(sibilant.macros.namespaces.core.lambda.apply(this, [ options ].concat(body)));\n    (function() {\n      if (sibilant.debug) {\n        return console.log(js);\n      }\n    }).call(this);\n    sibilant.docs.record(\"macro\", sibilant.macros.searchPath[0], name, this);\n    var evaledJs = (function() {\n      try {\n        return eval(js);\n      } catch (e) {\n        console.log(e.message);\n        console.log(red(e.stack.split(\"\\n\")[1]));\n        return console.log((\"error in parsing macro \" + sibilant.prettyPrint(name) + \":\\n\" + js));\n      }\n    }).call(this);\n    sibilant.macros.namespace[nameTr] = evaledJs;\n    return undefined;\n  });\n  sibilant.macros.namespaces.core.meta = (function meta$(body) {\n    /* meta include/macros.sibilant:1372:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    var js = outputFormatter(transpile(sibilant.macros.namespaces.core.scoped.apply(this, body)));\n    (function() {\n      if (sibilant.debug) {\n        return console.log(js);\n      }\n    }).call(this);\n    return outputFormatter(eval(js));\n  });\n  sibilant.macros.namespaces.core.reverse = (function reverse$(arr) {\n    /* reverse include/macros.sibilant:1377:0 */\n  \n    var reversed = [];\n    arr.forEach((function(item) {\n      /* include/macros.sibilant:1379:5 */\n    \n      return reversed.unshift(item);\n    }));\n    return reversed;\n  });\n  sibilant.macros.namespaces.core.lambda = (function lambda$(argsOrOptions, body) {\n    /* lambda include/macros.sibilant:1398:8 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    (function() {\n      if (sibilant.debug) {\n        return console.log(argsOrOptions);\n      }\n    }).call(this);\n    var args = (argsOrOptions.args || argsOrOptions),\n        body = (argsOrOptions.body || body),\n        args = (function() {\n      if (node__QUERY(args, \"expression\")) {\n        return args.contents;\n      } else if ((node__QUERY(args) && 0 === body.length)) {\n        body = [ args ];\n        return [];\n      } else {\n        return args;\n      }\n    }).call(this),\n        name = (function() {\n      if (argsOrOptions.name) {\n        return outputFormatter(transpile(argsOrOptions.name)).replace((new RegExp(\"\\\\W+\", \"g\")), \"$\").concat(\"$\");\n      }\n    }).call(this),\n        rest = detect(args, (function() {\n      /* include/macros.sibilant:1413:23 */\n    \n      return node__QUERY(arguments[0], \"dots\");\n    }));\n    var thisNode = this,\n        node = detect([ argsOrOptions.node, thisNode, argsOrOptions.name, args, body[0] ], (function(n) {\n      /* include/macros.sibilant:1418:16 */\n    \n      return (node__QUERY(n) && n.file);\n    }));\n    return [ \"(function\", (function() {\n      if (name) {\n        return (\" \" + name);\n      } else {\n        return \"\";\n      }\n    }).call(this), \"(\", interleave(\", \", map(args, transpile)), \") {\", (function() {\n      if ((argsOrOptions.name || node)) {\n        return indent([ \"/*\", (function() {\n          if (argsOrOptions.name) {\n            return (\" \" + sibilant.prettyPrint(argsOrOptions.name, false));\n          } else {\n            return \"\";\n          }\n        }).call(this), (function() {\n          if (node) {\n            return (\" \" + node.file + \":\" + node.line + \":\" + node.col);\n          } else {\n            return \"\";\n          }\n        }).call(this), \" */\" ]);\n      } else {\n        return \"\";\n      }\n    }).call(this), (function() {\n      if ((typeof rest !== \"undefined\" && rest !== null)) {\n        return indent(asStatement([ \"var \", transpile(rest), \" = Array.prototype.slice.call(arguments, \", (args.length - 1), \")\" ]));\n      }\n    }).call(this), indent(sibilant.macros.namespaces.core.do.apply(this, body)), \"})\" ];\n  });\n  sibilant.macros.namespaces.core[\"#\"] = sibilant.macros.namespaces.core.lambda;\n  sibilant.macros.namespaces.core.quotedHash = (function quotedHash$(pairs) {\n    /* quoted-hash include/macros.sibilant:1436:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    var cachedQuoteValue = sibilant.quoteHashKeys;\n    sibilant.quoteHashKeys = true;\n    var value = sibilant.macros.namespaces.core.hash.apply(this, pairs);\n    sibilant.quoteHashKeys = cachedQuoteValue;\n    return value;\n  });\n  sibilant.macros.namespaces.core.hash = (function hash$(pairs) {\n    /* hash include/macros.sibilant:1447:8 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    (function() {\n      if (1 === (pairs.length % 2)) {\n        return error((\"odd number of key-value pairs in hash: \" + inspect(pairs)));\n      }\n    }).call(this);\n    var quoteKeys = sibilant.quoteHashKeys,\n        pairStrings = bulkMap(pairs, (function(key, value) {\n      /* include/macros.sibilant:1453:39 */\n    \n      return [ (function() {\n        if ((quoteKeys && !(node__QUERY(key, \"string\")))) {\n          return [ \"\\\"\", transpile(key), \"\\\"\" ];\n        } else {\n          return transpile(key);\n        }\n      }).call(this), \": \", transpile(value) ];\n    }));\n    return (function() {\n      if (1 >= pairStrings.length) {\n        return [ \"{ \", interleave(\", \", pairStrings), \" }\" ];\n      } else {\n        return [ \"{\", indent(interleave(\",\\n\", pairStrings)), \"}\" ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.quote = (function quote$(content) {\n    /* quote include/macros.sibilant:1464:0 */\n  \n    var unquotes = findUnquotes(content);\n    return (function() {\n      if (typeof content === \"string\") {\n        return (\"\\\"\" + qescape(content) + \"\\\"\");\n      } else if (typeof content === \"number\") {\n        return sibilant.macros.namespaces.core.quote(content.toString());\n      } else if (node__QUERY(content, \"literal\", \"otherChar\")) {\n        return [ \"\\\"\", transpile(content), \"\\\"\" ];\n      } else if (Object.keys(unquotes).length) {\n        return replace__BANG(content, unquotes);\n      } else if (node__QUERY(content, \"expression\")) {\n        return [ \"\\\"\", mapNode(transpile(content), qescape), \"\\\"\" ];\n      } else if (node__QUERY(content, \"bracket\")) {\n        return sibilant.macros.namespaces.core.list.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n      } else if (node__QUERY(content, \"brace\")) {\n        return sibilant.macros.namespaces.core.hash.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n      } else {\n        console.log((\"unknown content\" + inspect(content)));\n        return content;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.debug = (function debug$(val) {\n    /* debug include/macros.sibilant:1487:0 */\n  \n    sibilant.debug = eval(outputFormatter(transpile(val)));\n    return null;\n  });\n  sibilant.macros.namespaces.core.list = (function list$(args) {\n    /* list include/macros.sibilant:1498:7 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var argSegments = [];\n    return (function() {\n      if (0 === args.length) {\n        return \"[]\";\n      } else {\n        var simpleList = (function simpleList$(args) {\n          /* simple-list include/macros.sibilant:1502:12 */\n        \n          return [ \"[ \", interleave(\", \", map(args, (function(arg) {\n            /* include/macros.sibilant:1503:50 */\n          \n            return arg.transpiled;\n          }))), \" ]\" ];\n        });\n        args.forEach((function(arg) {\n          /* include/macros.sibilant:1505:27 */\n        \n          return (function() {\n            if (node__QUERY(arg, \"dots\")) {\n              return argSegments.push({ transpiled: transpile(arg) });\n            } else if (((argSegments.slice(-1)[0]) && typeof (argSegments.slice(-1)[0]) === \"object\" && (argSegments.slice(-1)[0]).constructor.name === \"Array\")) {\n              return argSegments.slice(-1)[0].push({ transpiled: transpile(arg) });\n            } else {\n              return argSegments.push([ { transpiled: transpile(arg) } ]);\n            }\n          }).call(this);\n        }));\n        argSegments = map(argSegments, (function(segment) {\n          /* include/macros.sibilant:1511:38 */\n        \n          return (function() {\n            if (((segment) && typeof (segment) === \"object\" && (segment).constructor.name === \"Array\")) {\n              return simpleList(segment);\n            } else {\n              return segment.transpiled;\n            }\n          }).call(this);\n        }));\n        return (function() {\n          if (1 === argSegments.length) {\n            return argSegments[0];\n          } else {\n            return [ argSegments[0], \".concat(\", interleave(\", \", argSegments.slice(1)), \")\" ];\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.call = (function call$(fnName, args) {\n    /* call include/macros.sibilant:1528:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 1);\n  \n    return (function() {\n      if (any__QUERY(args, (function() {\n        /* include/macros.sibilant:1529:20 */\n      \n        return node__QUERY(arguments[0], \"dots\");\n      }))) {\n        return macros.apply(fnName, macros.list.apply(this, args));\n      } else {\n        return [ transpile(fnName), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.dots = (function dots$(contents) {\n    /* dots include/macros.sibilant:1534:0 */\n  \n    var contents = Array.prototype.slice.call(arguments, 0);\n  \n    return transpile(contents);\n  });\n  sibilant.macros.namespaces.core.include = (function include$(files) {\n    /* include include/macros.sibilant:1549:0 */\n  \n    var files = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(files.map((function(file) {\n      /* include/macros.sibilant:1551:17 */\n    \n      return sibilant.withDefaultSearchPath((function() {\n        /* include/macros.sibilant:1553:20 */\n      \n        return sibilant.include(eval(outputFormatter(transpile(file))));\n      }));\n    })), \"\\n\");\n  });\n  sibilant.macros.namespaces.core.docs = (function docs$(options) {\n    /* docs include/macros.sibilant:1560:0 */\n  \n    var options = Array.prototype.slice.call(arguments, 0);\n  \n    var optionsString = undefined,\n        optionsHash = {  };\n    (function() {\n      if (1 === (options.length % 2)) {\n        return (function() {\n          if ((node__QUERY(options[0], \"string\") || typeof options[0] === \"string\")) {\n            return optionsString = options.shift();\n          } else if ((node__QUERY(options.slice(-1)[0], \"string\") || typeof options.slice(-1)[0] === \"string\")) {\n            return optionsString = options.pop();\n          }\n        }).call(this);\n      }\n    }).call(this);\n    bulkMap(options, (function(key, value) {\n      /* include/macros.sibilant:1571:23 */\n    \n      return optionsHash[outputFormatter(transpile(key))] = value;\n    }));\n    [ \"examples\", \"references\" ].forEach((function(listAttribute) {\n      /* include/macros.sibilant:1574:5 */\n    \n      return (function() {\n        if ((optionsHash.hasOwnProperty(listAttribute) && node__QUERY(optionsHash[listAttribute], \"bracket\"))) {\n          return optionsHash[listAttribute] = optionsHash[listAttribute].contents;\n        }\n      }).call(this);\n    }));\n    (function() {\n      if (optionsHash.hasOwnProperty(\"example\")) {\n        (function() {\n          if (optionsHash.hasOwnProperty(\"examples\")) {\n            return error(\"please provide example OR examples, not both\");\n          }\n        }).call(this);\n        optionsHash.examples = [ optionsHash.example ];\n        return delete optionsHash.example;\n      }\n    }).call(this);\n    (function() {\n      if (optionsHash.hasOwnProperty(\"tags\")) {\n        return optionsHash.tags = eval(outputFormatter(transpile(sibilant.macros.namespaces.core.quote(optionsHash.tags))));\n      }\n    }).call(this);\n    (function() {\n      if (node__QUERY(optionsString, \"string\")) {\n        return optionsHash.docString = eval(outputFormatter(transpile(optionsString)));\n      } else if (typeof optionsString === \"string\") {\n        return optionsHash.docString = optionsString;\n      }\n    }).call(this);\n    sibilant.docs.lastDoc = optionsHash;\n    return null;\n  });\n  var docs = sibilant.docs = {\n    definitions: [],\n    undocumented: {  }\n  };\n  docs.record = (function docs$record$(type, namespace, name, node) {\n    /* docs.record src/docs.sibilant:4:0 */\n  \n    var doc = docs.lastDoc;\n    (function() {\n      if (typeof doc !== \"undefined\") {\n        delete sibilant.docs.undocumented[name];\n        return sibilant.docs.definitions.push(mergeInto(doc, {\n          name: name,\n          type: type,\n          namespace: namespace,\n          definition: node\n        }));\n      } else {\n        return sibilant.docs.undocumented[name] = true;\n      }\n    }).call(this);\n    return delete sibilant.docs.lastDoc;\n  });\n  docs.tags = (function docs$tags$() {\n    /* docs.tags src/docs.sibilant:16:0 */\n  \n    var tags = flatten(pluck(docs.definitions, \"tags\")),\n        counts = {  };\n    tags.forEach((function(tag) {\n      /* src/docs.sibilant:19:5 */\n    \n      return counts[tag] = ((counts[tag] || 0) + 1);\n    }));\n    return counts;\n  });\n  docs.text = (function docs$text$() {\n    /* docs.text src/docs.sibilant:27:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* src/docs.sibilant:29:15 */\n    \n      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n        if (definition.references) {\n          return (\"references:\\n  \" + (definition.references.map((function() {\n            /* src/docs.sibilant:35:51 */\n          \n            return eval(outputFormatter(transpile(arguments[0])));\n          })).join(\"\\n  \") + \"\\n\"));\n        } else {\n          return \"\";\n        }\n      }).call(this) + (function() {\n        if (definition.tags) {\n          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n        } else {\n          return \"\";\n        }\n      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n        /* src/docs.sibilant:46:43 */\n      \n        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n      })).join(\"\\n\\n\") + \"\\n\\n\");\n    })).join(\"\");\n  });\n  docs.textNoColor = (function docs$textNoColor$() {\n    /* docs.text-no-color src/docs.sibilant:53:0 */\n  \n    var stripAnsi = require(\"strip-ansi\");\n    return stripAnsi(docs.text());\n  });\n  docs.json = (function docs$json$() {\n    /* docs.json src/docs.sibilant:58:0 */\n  \n    return JSON.stringify(docs.data());\n  });\n  docs.data = (function docs$data$() {\n    /* docs.data src/docs.sibilant:61:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* src/docs.sibilant:63:6 */\n    \n      return {\n        name: prettify(definition.name, false),\n        namespace: definition.namespace,\n        type: definition.type,\n        description: definition.docString,\n        references: (function() {\n          if (definition.references) {\n            return definition.references.map((function() {\n              /* src/docs.sibilant:69:52 */\n            \n              return arguments[0].token.slice(1, -1);\n            }));\n          } else {\n            return [];\n          }\n        }).call(this),\n        arguments: definition.definition.contents[2].contents.map((function() {\n          /* src/docs.sibilant:74:30 */\n        \n          return prettify(arguments[0], false);\n        })),\n        definition: prettify(definition.definition, false),\n        examples: (definition.examples || []).map((function() {\n          /* src/docs.sibilant:77:29 */\n        \n          return {\n            javascript: outputFormatter(transpile(arguments[0])),\n            sibilant: prettify(arguments[0], false)\n          };\n        })),\n        tags: definition.tags\n      };\n    }));\n  });\n  var tap = (function tap$(item, fn) {\n    /* tap src/helpers.sibilant:3:0 */\n  \n    fn(item);\n    return item;\n  });\n  var recurseIndent = (function recurseIndent$(args) {\n    /* recurse-indent src/helpers.sibilant:7:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return map(args, (function(arg) {\n      /* src/helpers.sibilant:9:10 */\n    \n      return (function() {\n        if (node__QUERY(arg)) {\n          return mergeInto(arg, { contents: recurseIndent.apply(this, compact(flatten(arg.contents))) });\n        } else if (((arg) && typeof (arg) === \"object\" && (arg).constructor.name === \"Array\")) {\n          return recurseIndent.apply(this, arg);\n        } else if (typeof arg === \"number\") {\n          return arg.toString();\n        } else if (typeof arg === \"string\") {\n          return arg.replace((new RegExp(\"\\\\n\", \"g\")), \"\\n  \").replace((new RegExp(\"\\\\n\\\\s+\\\\n\", \"g\")), \"\\n\\n\");\n        } else {\n          return arg;\n        }\n      }).call(this);\n    }));\n  });\n  var indent = (function indent$(args) {\n    /* indent src/helpers.sibilant:24:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"\\n  \", recurseIndent(map(args, transpile)), \"\\n\" ];\n  });\n  var escapeRegex = (function escapeRegex$(string) {\n    /* escape-regex src/helpers.sibilant:27:0 */\n  \n    return string.replace((new RegExp(\"[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\^\\\\$\\\\|]\", \"g\")), \"\\\\$&\");\n  });\n  var qescape = (function qescape$(content) {\n    /* qescape src/helpers.sibilant:30:0 */\n  \n    return (function() {\n      if (!((typeof content !== \"undefined\" && content !== null))) {\n        return \"\";\n      } else if (typeof content === \"string\") {\n        return content.split(\"\\\\\\\\ \"[0]).join(\"\\\\\\\\ \".slice(0, -1)).replace((new RegExp(\"\\\"\", \"g\")), \"\\\\\\\"\").replace((new RegExp(\"\\\\n\", \"g\")), \"\\\\n\\\" +\\n\\\"\");\n      } else {\n        return content;\n      }\n    }).call(this);\n  });\n  var mapNode = (function mapNode$(node, fn) {\n    /* map-node src/helpers.sibilant:39:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        var mappedNode = fn(node);\n        (function() {\n          if (node__QUERY(mappedNode)) {\n            return mappedNode.contents = mapNode(mappedNode.contents, fn);\n          }\n        }).call(this);\n        return mappedNode;\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, (function() {\n          /* src/helpers.sibilant:48:32 */\n        \n          return mapNode(arguments[0], fn);\n        }));\n      } else {\n        return fn(node);\n      }\n    }).call(this);\n  });\n  var eachNode = (function eachNode$(node, fn) {\n    /* each-node src/helpers.sibilant:51:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        return (function() {\n          if (fn(node)) {\n            return eachNode(node.contents, fn);\n          }\n        }).call(this);\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return node.forEach((function(c) {\n          /* src/helpers.sibilant:53:22 */\n        \n          return eachNode(c, fn);\n        }));\n      } else {\n        return fn(node);\n      }\n    }).call(this);\n  });\n  var statement__QUERY = (function statement__QUERY$(transpiled) {\n    /* statement? src/helpers.sibilant:56:0 */\n  \n    return (function() {\n      if (node__QUERY(transpiled)) {\n        return statement__QUERY(transpiled.contents);\n      } else if (((transpiled) && typeof (transpiled) === \"object\" && (transpiled).constructor.name === \"Array\")) {\n        return statement__QUERY(transpiled.slice(-1)[0]);\n      } else if (typeof transpiled === \"string\") {\n        return \";\" === transpiled.slice(-1)[0];\n      } else {\n        return false;\n      }\n    }).call(this);\n  });\n  var asStatement = (function asStatement$(node) {\n    /* as-statement src/helpers.sibilant:62:0 */\n  \n    var transpiled = transpile(node);\n    return (function() {\n      if (emptyNode__QUERY(transpiled)) {\n        return undefined;\n      } else if (statement__QUERY(transpiled)) {\n        return transpiled;\n      } else {\n        return [ transpiled, \";\" ];\n      }\n    }).call(this);\n  });\n  var unquote__QUERY = (function unquote__QUERY$(node) {\n    /* unquote? src/helpers.sibilant:69:0 */\n  \n    return node__QUERY(node, \"at\");\n  });\n  var findUnquotes = (function findUnquotes$(node) {\n    /* find-unquotes src/helpers.sibilant:71:0 */\n  \n    var unquotes = {  };\n    eachNode(node, (function(n) {\n      /* src/helpers.sibilant:73:21 */\n    \n      (function() {\n        if (unquote__QUERY(n)) {\n          return unquotes[n.nodeId] = transpile(n);\n        }\n      }).call(this);\n      return !(node__QUERY(n, \"tick\"));\n    }));\n    return unquotes;\n  });\n  var spliceDots = (function spliceDots$(node) {\n    /* splice-dots src/helpers.sibilant:79:0 */\n  \n    (function() {\n      if ((node && ((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\"))) {\n        var contents = [];\n        node.contents.forEach((function(content) {\n          /* src/helpers.sibilant:82:11 */\n        \n          return (function() {\n            if ((node__QUERY(content, \"dots\") && ((content.contents) && typeof (content.contents) === \"object\" && (content.contents).constructor.name === \"Array\") && content.contents.length === 1 && ((content.contents[0]) && typeof (content.contents[0]) === \"object\" && (content.contents[0]).constructor.name === \"Array\"))) {\n              return contents.push.apply(contents, content.contents[0]);\n            } else {\n              return contents.push(content);\n            }\n          }).call(this);\n        }));\n        return node.contents = contents;\n      }\n    }).call(this);\n    return node;\n  });\n  var alternatingKeysAndValues = (function alternatingKeysAndValues$(hash) {\n    /* alternating-keys-and-values src/helpers.sibilant:94:0 */\n  \n    return flatten(map(Object.keys(hash), (function(key) {\n      /* src/helpers.sibilant:96:19 */\n    \n      return [ key, hash[key] ];\n    })));\n  });\n  var mapNodeForQuoteExpansion = (function mapNodeForQuoteExpansion$(node, expansions) {\n    /* map-node-for-quote-expansion src/helpers.sibilant:99:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        var mappedNode = (function() {\n          if (expansions.hasOwnProperty(node.nodeId)) {\n            return expansions[node.nodeId];\n          } else {\n            return clone(node);\n          }\n        }).call(this);\n        (function() {\n          if (node__QUERY(mappedNode)) {\n            return mappedNode.contents = mapNodeForQuoteExpansion(mappedNode.contents, expansions);\n          }\n        }).call(this);\n        mappedNode = spliceDots(mappedNode);\n        return mappedNode;\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, (function() {\n          /* src/helpers.sibilant:110:19 */\n        \n          return mapNodeForQuoteExpansion(arguments[0], expansions);\n        }));\n      } else {\n        return node;\n      }\n    }).call(this);\n  });\n  var replace__BANG = (function replace__BANG$(content) {\n    /* replace! src/helpers.sibilant:114:0 */\n  \n    return (function() {\n      if ((node__QUERY(content, \"dots\") && 3 === content.token.length && node__QUERY(content.contents[0], \"at\"))) {\n        return mergeInto(clone(content), { contents: [ transpile(content.contents[0]) ] });\n      } else if (node__QUERY(content, \"at\")) {\n        return transpile(content.contents[0]);\n      } else if (node__QUERY(content, \"tick\")) {\n        return JSON.stringify(content);\n      } else if ((\"object\" === typeof content && content !== null && content.constructor.name !== \"Array\")) {\n        return sibilant.macros.namespaces.core.hash.apply(this, Object.keys(content).reduce((function() {\n          /* src/helpers.sibilant:131:21 */\n        \n          return arguments[0].concat([ arguments[1], replace__BANG(content[arguments[1]]) ]);\n        }), []));\n      } else if (((content) && typeof (content) === \"object\" && (content).constructor.name === \"Array\")) {\n        return sibilant.macros.namespaces.core.list.apply(this, map(content, replace__BANG));\n      } else if (typeof content === \"undefined\") {\n        return \"undefined\";\n      } else if (typeof content === \"number\") {\n        return content.toString();\n      } else {\n        return JSON.stringify(content);\n      }\n    }).call(this);\n  });\n  var node__QUERY = (function node__QUERY$(thing, types) {\n    /* node? src/transpiler.sibilant:1:0 */\n  \n    var types = Array.prototype.slice.call(arguments, 1);\n  \n    return ((typeof thing !== \"undefined\" && thing !== null) && \"object\" === typeof thing && typeof thing.type === \"string\" && (0 === types.length || types.indexOf(thing.type) !== -1) && thing.hasOwnProperty(\"contents\"));\n  });\n  var emptyNode__QUERY = (function emptyNode__QUERY$(item) {\n    /* empty-node? src/transpiler.sibilant:9:0 */\n  \n    return (function() {\n      if (node__QUERY(item)) {\n        return emptyNode__QUERY(item.contents);\n      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        return all__QUERY(item, emptyNode__QUERY);\n      } else if (typeof item === \"string\") {\n        return item.match((new RegExp(\"^\\\\s*$\", undefined)));\n      } else {\n        return (null === item || typeof item === \"undefined\" || false === item);\n      }\n    }).call(this);\n  });\n  var compactNode = (function compactNode$(item) {\n    /* compact-node src/transpiler.sibilant:17:0 */\n  \n    return (function() {\n      if (node__QUERY(item)) {\n        item.contents = compactNode(item.contents);\n        return (function() {\n          if ((item.contents && item.contents.length)) {\n            return item;\n          } else {\n            return null;\n          }\n        }).call(this);\n      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        var compacted = compact(map(item, compactNode));\n        return (function() {\n          if ((compacted && compacted.length)) {\n            return compacted;\n          } else {\n            return null;\n          }\n        }).call(this);\n      } else {\n        return (function() {\n          if ((item === \"\" || item === false)) {\n            return null;\n          } else {\n            return item;\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  var recurseTranspile = (function recurseTranspile$(node) {\n    /* recurse-transpile src/transpiler.sibilant:26:0 */\n  \n    return (function() {\n      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, recurseTranspile);\n      } else if (node__QUERY(node, \"output\")) {\n        return mergeInto(node, { contents: recurseTranspile(node.contents) });\n      } else if (node__QUERY(node)) {\n        return transpile(node);\n      } else {\n        return node;\n      }\n    }).call(this);\n  });\n  var transpile = (function transpile$(node, preprocessor) {\n    /* transpile src/transpiler.sibilant:38:0 */\n  \n    (function() {\n      if (typeof node === \"string\") {\n        return node = {\n          type: \"js\",\n          token: node,\n          contents: []\n        };\n      } else if (typeof node === \"number\") {\n        return node = {\n          type: \"number\",\n          token: node.toString(),\n          contents: []\n        };\n      }\n    }).call(this);\n    return (function() {\n      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return node;\n      } else if ((typeof node !== \"undefined\" && node !== null)) {\n        var transpiler = (transpile[node.type] || transpile.default),\n            result = transpiler(node),\n            resultNode = recurseTranspile((function() {\n          if (node__QUERY(result)) {\n            return result;\n          } else {\n            return {\n              contents: result,\n              type: \"output\"\n            };\n          }\n        }).call(this));\n        (function() {\n          if (typeof resultNode === \"undefined\") {\n            console.log((\"\" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\" + prettify(node) + \"\"));\n            console.log(prettify(result));\n            console.log(prettify(transpile(result)));\n            throw (new Error((\"Encountered an undefined return from recursive transpile.\\n\" + \"Please report this bug at \" + \"https://github.com/jbr/sibilant/issues/new\")))\n          }\n        }).call(this);\n        resultNode.contents = compact(flatten(resultNode.contents));\n        resultNode.source = node;\n        (function() {\n          if (5 > sibilant.debug) {\n            return console.log(prettify(node), red(\"->\"), prettify(resultNode));\n          }\n        }).call(this);\n        return (function() {\n          if (emptyNode__QUERY(resultNode)) {\n            return undefined;\n          } else {\n            return resultNode;\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.transpile = transpile;\n  var readerMacros = {  };\n  transpile.hat = (function transpile$hat$(node) {\n    /* transpile.hat src/transpiler.sibilant:85:0 */\n  \n    var token = node.contents[0].token,\n        $_symbol6_$ = (function() {\n      if (token.match((new RegExp(\"\\/\", undefined)))) {\n        return token.split(\"/\");\n      } else {\n        return [ sibilant.macros.searchPath[0], token ];\n      }\n    }).call(this),\n        namespace = $_symbol6_$[0],\n        macro = $_symbol6_$[1],\n        $_symbol6_$ = undefined;\n    return sibilant.macros.namespaces.core.get.call(node, \"sibilant.macros.namespaces\", sibilant.macros.namespaces.core.quote(transpile.literal({ token: namespace })), sibilant.macros.namespaces.core.quote(transpile.literal({ token: macro })));\n  });\n  transpile.tick = (function transpile$tick$(node) {\n    /* transpile.tick src/transpiler.sibilant:96:0 */\n  \n    return sibilant.macros.namespaces.core.quote.apply(node, node.contents);\n  });\n  transpile.at = (function transpile$at$(node) {\n    /* transpile.at src/transpiler.sibilant:99:0 */\n  \n    return transpile(node.contents[0]);\n  });\n  transpile.dots = (function transpile$dots$(node) {\n    /* transpile.dots src/transpiler.sibilant:102:0 */\n  \n    return sibilant.macros.namespaces.core.dots.apply(node, node.contents);\n  });\n  transpile.default = (function transpile$default$(node) {\n    /* transpile.default src/transpiler.sibilant:105:0 */\n  \n    return node.token;\n  });\n  transpile.output = (function transpile$output$(node) {\n    /* transpile.output src/transpiler.sibilant:108:0 */\n  \n    return node;\n  });\n  transpile.number = (function transpile$number$(node) {\n    /* transpile.number src/transpiler.sibilant:111:0 */\n  \n    return parseFloat(node.token.replace((new RegExp(\",\", \"g\")), \"\")).toString();\n  });\n  transpile.root = (function transpile$root$(node) {\n    /* transpile.root src/transpiler.sibilant:117:0 */\n  \n    return (function() {\n      if (1 === node.contents.length) {\n        return transpile(node.contents[0]);\n      } else {\n        return interleave(compact(map(node.contents, asStatement)), \"\\n\");\n      }\n    }).call(this);\n  });\n  transpile.expression = (function transpile$expression$(node, preprocessor) {\n    /* transpile.expression src/transpiler.sibilant:126:0 */\n  \n    return (function() {\n      if (node.contents.length) {\n        var head = node.contents[0],\n            args = node.contents,\n            macro = sibilant.resolveMacro(\"call\");\n        (function() {\n          if (node__QUERY(head, \"string\")) {\n            return macro = sibilant.resolveMacro(\"concat\");\n          } else if (node__QUERY(head, \"dots\")) {\n            macro = sibilant.resolveMacro(\"send\");\n            return args = [ node.contents[1], head.contents[0] ].concat(node.contents.slice(2));\n          } else if (node__QUERY(head, \"literal\", \"otherChar\")) {\n            var resolvedMacro = sibilant.resolveMacro(outputFormatter(transpile(head)));\n            return (function() {\n              if (resolvedMacro) {\n                head.hint = \"macro\";\n                macro = resolvedMacro;\n                return args = node.contents.slice(1);\n              }\n            }).call(this);\n          }\n        }).call(this);\n        return macro.apply(node, args);\n      } else {\n        return \"null\";\n      }\n    }).call(this);\n  });\n  transpile.bracket = (function transpile$bracket$(node) {\n    /* transpile.bracket src/transpiler.sibilant:152:0 */\n  \n    return sibilant.macros.namespaces.core.list.apply(this, node.contents);\n  });\n  transpile.brace = (function transpile$brace$(node) {\n    /* transpile.brace src/transpiler.sibilant:155:0 */\n  \n    return sibilant.macros.namespaces.core.hash.apply(this, node.contents);\n  });\n  transpile.literal = (function transpile$literal$(node) {\n    /* transpile.literal src/transpiler.sibilant:157:0 */\n  \n    var string = node.token;\n    return inject(string.replace((new RegExp(\"\\\\*\", \"g\")), \"_\").replace((new RegExp(\"\\\\?$\", undefined)), \"__QUERY\").replace((new RegExp(\"!$\", undefined)), \"__BANG\"), string.match((new RegExp(\"-(.)\", \"g\"))), (function(returnString, match) {\n      /* src/transpiler.sibilant:164:13 */\n    \n      return returnString.replace(match, match[1].toUpperCase());\n    }));\n  });\n  transpile.string = (function transpile$string$(node) {\n    /* transpile.string src/transpiler.sibilant:168:0 */\n  \n    return node.token.split(\"\\n\").join(\"\\\\n\\\" +\\n\\\"\");\n  });\n  transpile.comment = (function transpile$comment$(node) {\n    /* transpile.comment src/transpiler.sibilant:173:0 */\n  \n    return null;\n  });\n  var docs = sibilant.docs = {\n    definitions: [],\n    undocumented: {  }\n  };\n  docs.record = (function docs$record$(type, namespace, name, node) {\n    /* docs.record src/docs.sibilant:4:0 */\n  \n    var doc = docs.lastDoc;\n    (function() {\n      if (typeof doc !== \"undefined\") {\n        delete sibilant.docs.undocumented[name];\n        return sibilant.docs.definitions.push(mergeInto(doc, {\n          name: name,\n          type: type,\n          namespace: namespace,\n          definition: node\n        }));\n      } else {\n        return sibilant.docs.undocumented[name] = true;\n      }\n    }).call(this);\n    return delete sibilant.docs.lastDoc;\n  });\n  docs.tags = (function docs$tags$() {\n    /* docs.tags src/docs.sibilant:16:0 */\n  \n    var tags = flatten(pluck(docs.definitions, \"tags\")),\n        counts = {  };\n    tags.forEach((function(tag) {\n      /* src/docs.sibilant:19:5 */\n    \n      return counts[tag] = ((counts[tag] || 0) + 1);\n    }));\n    return counts;\n  });\n  docs.text = (function docs$text$() {\n    /* docs.text src/docs.sibilant:27:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* src/docs.sibilant:29:15 */\n    \n      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n        if (definition.references) {\n          return (\"references:\\n  \" + (definition.references.map((function() {\n            /* src/docs.sibilant:35:51 */\n          \n            return eval(outputFormatter(transpile(arguments[0])));\n          })).join(\"\\n  \") + \"\\n\"));\n        } else {\n          return \"\";\n        }\n      }).call(this) + (function() {\n        if (definition.tags) {\n          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n        } else {\n          return \"\";\n        }\n      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n        /* src/docs.sibilant:46:43 */\n      \n        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n      })).join(\"\\n\\n\") + \"\\n\\n\");\n    })).join(\"\");\n  });\n  docs.textNoColor = (function docs$textNoColor$() {\n    /* docs.text-no-color src/docs.sibilant:53:0 */\n  \n    var stripAnsi = require(\"strip-ansi\");\n    return stripAnsi(docs.text());\n  });\n  docs.json = (function docs$json$() {\n    /* docs.json src/docs.sibilant:58:0 */\n  \n    return JSON.stringify(docs.data());\n  });\n  docs.data = (function docs$data$() {\n    /* docs.data src/docs.sibilant:61:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* src/docs.sibilant:63:6 */\n    \n      return {\n        name: prettify(definition.name, false),\n        namespace: definition.namespace,\n        type: definition.type,\n        description: definition.docString,\n        references: (function() {\n          if (definition.references) {\n            return definition.references.map((function() {\n              /* src/docs.sibilant:69:52 */\n            \n              return arguments[0].token.slice(1, -1);\n            }));\n          } else {\n            return [];\n          }\n        }).call(this),\n        arguments: definition.definition.contents[2].contents.map((function() {\n          /* src/docs.sibilant:74:30 */\n        \n          return prettify(arguments[0], false);\n        })),\n        definition: prettify(definition.definition, false),\n        examples: (definition.examples || []).map((function() {\n          /* src/docs.sibilant:77:29 */\n        \n          return {\n            javascript: outputFormatter(transpile(arguments[0])),\n            sibilant: prettify(arguments[0], false)\n          };\n        })),\n        tags: definition.tags\n      };\n    }));\n  });\n  var sibilize = (function sibilize$(input) {\n    /* sibilize src/require-and-include.sibilant:1:0 */\n  \n    var result = outputFormatter(transpile(restructure(parse(input))));\n    return result;\n  });\n  var sourcemap = (function sourcemap$(input) {\n    /* sourcemap src/require-and-include.sibilant:9:0 */\n  \n    return sourcemapper(transpile(restructure(parse(input))));\n  });\n  sibilant.sibilize = sibilize;\n  sibilant.version = (function sibilant$version$() {\n    /* sibilant.version src/require-and-include.sibilant:14:0 */\n  \n    return sibilant.packageInfo().version;\n  });\n  sibilant.stripShebang = (function sibilant$stripShebang$(data) {\n    /* sibilant.strip-shebang src/require-and-include.sibilant:17:0 */\n  \n    return data.replace((new RegExp(\"^#!.*\\\\n\", undefined)), \"\\n\");\n  });\n  sibilant.file = \"eval.sibilant\";\n  var withDirAndFile = (function withDirAndFile$(dir, file, fn) {\n    /* with-dir-and-file src/require-and-include.sibilant:22:0 */\n  \n    var before = {\n      dir: sibilant.dir,\n      file: sibilant.file\n    };\n    sibilant.dir = dir;\n    sibilant.file = file;\n    var retval = fn();\n    sibilant.dir = before.dir;\n    sibilant.file = before.file;\n    return retval;\n  });\n  sibilant.sourceCache = {  };\n  sibilant.sibilizeFile = (function sibilant$sibilizeFile$(fileName) {\n    /* sibilant.sibilize-file src/require-and-include.sibilant:39:0 */\n  \n    return outputFormatter(sibilant.transpileFile(fileName));\n  });\n  sibilant.sibilizeJson = (function sibilant$sibilizeJson$(fileName) {\n    /* sibilant.sibilize-json src/require-and-include.sibilant:44:0 */\n  \n    var before = sibilant.quoteHashKeys;\n    sibilant.quoteHashKeys = true;\n    var content = sibilant.sibilizeFile(fileName);\n    sibilant.quoteHashKeys = before;\n    return content;\n  });\n  var package = {\n    name: \"sibilant\",\n    version: \"0.4.0\",\n    keywords: [ \"lisp\", \"javascript\", \"language\" ],\n    description: \"javascript with a lisp\",\n    contributors: [ \"Jacob Rothstein <hi@jbr.me> (http://jbr.me)\", \"Matthew Phillips (http://www.matthewphillips.info/)\", \"Yuest Wang (http://yue.st/)\", \"Lyndon Tremblay (http://www.hoovy.org)\", \"David Sargeant (https://github.com/dubiousdavid)\" ],\n    repository: {\n      type: \"git\",\n      url: \"http://github.com/jbr/sibilant.git\"\n    },\n    bugs: {\n      mail: \"sibilant@librelist.com\",\n      url: \"http://github.com/jbr/sibilant/issues\"\n    },\n    bin: { sibilant: \"./bin/sibilant\" },\n    main: \"./lib/sibilant.js\",\n    license: \"MIT\",\n    devDependencies: {\n      stool: \">=0.0.7\",\n      diff: \">=2.2.1\",\n      \"strip-ansi\": \">=3.0.0\",\n      colors: \">=1.1.2\",\n      cardinal: \">=0.6.0\"\n    },\n    dependencies: {\n      \"source-map\": \">=0.5.3\",\n      \"source-map-support\": \">=0.3.3\"\n    },\n    scripts: { test: \"bin/sibilant -x stool.sibilant -- test\" }\n  };\n  sibilant.packageInfo = (function sibilant$packageInfo$() {\n    /* sibilant.package-info src/browser.sibilant:24:6 */\n  \n    return package;\n  });\n  sibilant.versionString = (function sibilant$versionString$() {\n    /* sibilant.version-string src/browser.sibilant:26:6 */\n  \n    return (package.name + \" browser version \" + package.version);\n  });\n  sibilant.dir = \"browser\";\n  sibilant.initialize = (function sibilant$initialize$() {\n    /* sibilant.initialize src/browser.sibilant:31:6 */\n  \n    return false;\n  });\n  var evalCode = (function evalCode$(js) {\n    /* eval-code src/browser.sibilant:32:13 */\n  \n    return (new Function(js))();\n  });\n  sibilant.include = (function sibilant$include$(url) {\n    /* sibilant.include src/browser.sibilant:35:6 */\n  \n    return $.get(url).done((function() {\n      /* src/browser.sibilant:36:32 */\n    \n      return evalCode(sibilize(arguments[0]));\n    }));\n  });\n  (function() {\n    if (typeof $ === \"function\") {\n      return $((function() {\n        /* src/browser.sibilant:39:15 */\n      \n        return map($.makeArray($(\"script[type=\\\"application/sibilant\\\"][src]\").map((function() {\n          /* src/browser.sibilant:42:26 */\n        \n          return this.src;\n        }))), sibilant.include);\n      }));\n    }\n  }).call(this);\n  return sibilant;\n}).call(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sibilant/lib/browser.js\n ** module id = 759\n ** module chunks = 1\n **/","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/strip-ansi/index.js\n ** module id = 760\n ** module chunks = 1\n **/","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ansi-regex/index.js\n ** module id = 761\n ** module chunks = 1\n **/"],"sourceRoot":""}