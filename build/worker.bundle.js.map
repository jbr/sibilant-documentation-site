{"version":3,"sources":["webpack:///worker.bundle.js","webpack:///webpack/bootstrap d6b6b48bfc37eaffe032?9ad2","webpack:///worker.sibilant","webpack:///src/macros/misc.sibilant?1c22","webpack:///src/helpers.sibilant?d226","webpack:///src/macros/lambda.sibilant?8e9c","webpack:///src/macros/hash.sibilant?27e6","webpack:///./~/sibilant/lib/browser.js","webpack:///./~/strip-ansi/index.js","webpack:///./~/ansi-regex/index.js","webpack:///./~/serialize-javascript/index.js","webpack:///./~/util/util.js","webpack:///./~/process/browser.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///./~/inherits/inherits_browser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p",0,"commands","sibilant","serialize","sibilize","commands$sibilize$","sibilantCode","evaluate","commands$evaluate$","Function","onMessage","onMessage$","e","identifier","data","command","commandFn","returnValue","result","apply","this","error","message","postMessage","onmessage",792,"error$","str","inspect","inspect$","item","toSource","toString","bulkMap","bulkMap$","arr","fn","index","groupSize","length","retArr","while$5","undefined","push","slice","inject","inject$","start","items","constructor","name","reduce","map","map$","select","select$","filter","detect","detect$","find","all__QUERY","all__QUERY$","every","none__QUERY","none__QUERY$","some","any__QUERY","any__QUERY$","reject","reject$","arguments","compact","compact$","unique","unique$","coll","indexOf","concat","interleave","interleave$","glue","temp","collector","flatten","flatten$","predicate","flatCompact","flatCompact$","recurseMap","recurseMap$","subitem","pluck","pluck$","attribute","mergeInto","mergeInto$","into","from","Object","assign","clone","clone$","object","values","values$","keys","mapValues","mapValues$","key","mergeWith","mergeWith$","log__BANG","log__BANG$","args","Array","prototype","inspect__BANG","forEach","console","log","inspect__BANG$","util","colors","depth","color","color$","code","join","black","black$","red","red$","green","green$","brown","brown$","blue","blue$","purple","purple$","cyan","cyan$","gray","gray$","boldGray","boldGray$","boldRed","boldRed$","boldGreen","boldGreen$","yellow","yellow$","boldBlue","boldBlue$","boldPurple","boldPurple$","boldCyan","boldCyan$","white","white$","prettyPrint","sibilant$prettyPrint$","node","entry","realNewlines","node__QUERY","prettyPrinter","type","prettify","sibilant$prettyPrint$default$","mapPretty","mapPretty$","attr","colorize","token","closed","acceptablePairs","root","sibilant$prettyPrint$root$","contents","output","sibilant$prettyPrint$output$","realNewlines$","split","sibilant$prettyPrint$colorize$","string","hint","outputFormatter","outputFormatter$","file","line","col","transpile","while$6","parser","tokens","comment","number","literal","special","at","tick","hat","dots","argPlaceholder","otherChar","openExpression","closeExpression","newline","whitespace","ignored","head","tokenPrecedence","orderedRegexes","x","RegExp","parse","parser$parse$","context","position","stack","lastNewline","match","regexName","remainingInput","while$7","r","exec","matchString","stringNewlineCount","lastIndexOf","(","[","{","bracketTypes","restructure","restructure$","input","parseStack","ignoredNodes","specials","restructurers","unclosedNode","Error","restructurers$","restructurer","restructurers$head$","expression","restructurers$openExpression$","first","acceptIgnoredNodes","acceptSpecials","unshift","restructurers$closeExpression$","end","closingIgnored","shift","closeSpecials","openSpecial","openSpecial$","acceptSpecials$","acceptIgnoredNodes$","precedingIgnored","closeSpecials$","accumulateIgnoredNode","accumulateIgnoredNode$","restructurers$default$","coreNamespace","macroNamespaces","core","state","symbolCount","functionComments","macros","namespaces","defaultSearchPath","searchPath","namespace","currentNamespace","sibilant$macros$currentNamespace$","resolveMacro","sibilant$resolveMacro$","macroName","pathComponents","macro","hasOwnProperty","withDefaultSearchPath","sibilant$withDefaultSearchPath$","searchPathBefore","case$","subject","cases","body","$$","jsComparator","ternary","ternary$","cond","ifTrue","ifFalse","when","when$","condition","_scopedWithoutReturn","indent","unless","unless$","if$","alternatingConditionsAndBranches","val","quotedHash","quotedHash$","pairs","cachedQuoteValue","quoteHashKeys","value","hash","hash$","i","double","pairs_reduce$2","o","dynamicKeys","staticKeys","quoteKeys","pairStrings","symbol","generateSymbol","get","get$","obj","transpiled","replace","set","set$","kvPairs","k","v","keys$","delete$","objects","asStatement","eachKey","eachKey$","as","lambda","lambda$","argsOrOptions","debug__BANG","rest","destructuredArgs","arg","argName","makeSymbolClue","destructuredPair","destructuredStatements","n","thunk","thunk$","lambdaOptions","mapNode","return$","debug","defaultReturn","deleteMacro","nonReturnPart","returnPart","do$","def","def$","docs","record","call$","fnName","list","send","send$","method","apply$","arglist","scoped","scoped$","_scopedWithoutReturn$","_scopedWithoutSource","_scopedWithoutSource$","arguments$","argument","argument$","list$","argSegments","simpleList","simpleList$","segment","length$","first$","second","second$","third","third$","rest$","last","last$","cons","cons$","append","append$","additional","each","each$","array","includes__QUERY","includes__QUERY$","haystack","needle","excludes__QUERY","excludes__QUERY$","while$","until","until$","macro$","nameTr","options","js","evaledJs","eval","meta","meta$","aliasMacro","aliasMacro$","currentMacroName","newMacroName","deleteMacro$","macroNames","delmacro","renameMacro","renameMacro$","importNamespace","importNamespace$","namespaceAsString","namespace$","quote","quote$","content","unquotes","findUnquotes","qescape","replace__BANG","docs$","optionsString","optionsHash","pop","listAttribute","examples","example","tags","docString","lastDoc","_","_$","mod","mod$","incrBy","incrBy$","increment","incr","incr$","decr","decr$","or","or$","and","and$","not","not$","exp","asBoolean","asBoolean$","expr","asNumber","asNumber$","statement__BANG","statement__BANG$","emptyNode__QUERY","new$","typeof$","thing","comment$","logPretty","logPretty$","label","prettyLog","throw$","try$","tryblock","catchblock","withState","withState$","$2","before","join$","parens","parens$","sourceMappingUrl","sourceMappingUrl$","url","require__BANG","require__BANG$","requires","export$","localVars","acc","emptyList","emptyList$","debug$","dots$","include","include$","files","pipe","pipe$","calls","cloned","placeholder","placeholderIndex","placeholderBoundaries","pipeThunk","pipeThunk$","tap","tap$","distribute","distribute$","alternatives","alt","zero__QUERY","zero__QUERY$","empty__QUERY","empty__QUERY$","odd__QUERY","odd__QUERY$","even__QUERY","even__QUERY$","string__QUERY","string__QUERY$","things","function__QUERY","function__QUERY$","undefined__QUERY","undefined__QUERY$","defined__QUERY","defined__QUERY$","number__QUERY","number__QUERY$","array__QUERY","array__QUERY$","list__QUERY","hash__QUERY","hash__QUERY$","object__QUERY","instanceOf__QUERY","instanceOf__QUERY$","exists__QUERY","exists__QUERY$","hasKey__QUERY","hasKey__QUERY$","lowerCase__QUERY","lowerCase__QUERY$","upperCase__QUERY","upperCase__QUERY$","match__QUERY","match__QUERY$","regexp","matchRegex__QUERY","matchRegex__QUERY$","pattern","flags","replace$","replacement","replaceAll","replaceAll$","regex","regex$","switch$","caseDef","caseNameNode","caseLabels","caseString","var$","destructure","pair","assign$","default$","definitions","undocumented","docs$record$","doc","definition","docs$tags$","counts","tag","text","docs$text$","sort","a","b","localeCompare","references","textNoColor","docs$textNoColor$","stripAnsi","json","docs$json$","JSON","stringify","docs$data$","description","javascript","debug__BANG$","level","recurseIndent","recurseIndent$","indent$","escapeRegex","escapeRegex$","qescape$","mapNode$","mappedNode","eachNode","eachNode$","statement__QUERY","statement__QUERY$","asStatement$","unquote__QUERY","unquote__QUERY$","findUnquotes$","nodeId","spliceDots","spliceDots$","alternatingKeysAndValues","alternatingKeysAndValues$","mapNodeForQuoteExpansion","mapNodeForQuoteExpansion$","expansions","dotsAndAt","dotsAndAt$","replace__BANG$","node__QUERY$","type2","type3","type4","testArg","emptyNode__QUERY$","compactNode","compactNode$","compacted","generateSymbol$","clue","symbolCounts","count","makeSymbolClue$","targetNode","destructure$","destructured","lhs","rhs","transpiledRhs","literalRhs__QUERY","source","trItem","recurseTranspile","recurseTranspile$","transpile$","preprocessor","transpiler","resultNode","readerMacros","transpile$hat$","if$2","transpile$tick$","transpile$at$","transpile$dots$","transpile$default$","transpile$output$","transpile$number$","parseFloat","transpile$root$","transpile$expression$","resolvedMacro","bracket","transpile$bracket$","brace","transpile$brace$","transpile$literal$","lastChar","returnString","letter","toUpperCase","toLowerCase","transpile$string$","transpile$comment$","sibilize$","sourcemap","sourcemap$","sourcemapper","version","sibilant$version$","packageInfo","stripShebang","sibilant$stripShebang$","withDirAndFile","withDirAndFile$","dir","retval","sourceCache","sibilizeFile","sibilant$sibilizeFile$","fileName","transpileFile","sibilizeJson","sibilant$sibilizeJson$","package","keywords","contributors","repository","bugs","mail","bin","main","license","devDependencies","stool","diff","strip-ansi","dependencies","source-map","source-map-support","cardinal","scripts","test","sibilant$packageInfo$","versionString","sibilant$versionString$","initialize","sibilant$initialize$","evalCode","evalCode$","sibilant$include$","$","done","makeArray","src",793,"ansiRegex",794,795,"isRegExp","UID","Math","floor","random","PLACE_HOLDER_REGEXP","IS_NATIVE_CODE_REGEXP","UNSAFE_CHARS_REGEXP","UNICODE_CHARS","<",">","/"," "," ","space","functions","regexps","String","unsafeChar","valueIndex","serializedFn","TypeError",796,"global","process","opts","ctx","seen","stylize","stylizeNoColor","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","idx","recurseTimes","isFunction","ret","isString","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","isDate","Date","base","braces","isArray","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","isNumber","isNull","l","desc","getOwnPropertyDescriptor","substr","numLinesEst","prev","cur","ar","isNullOrUndefined","isSymbol","re","isObject","objectToString","d","isPrimitive","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","format","f","len","Number","deprecate","msg","deprecated","warned","throwDeprecation","traceDeprecation","trace","noDeprecation","debugEnviron","debugs","debuglog","env","NODE_DEBUG","pid","bold","italic","underline","inverse","grey","magenta","boolean","null","date","isBuffer","inherits","origin","add",797,"cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","setTimeout","run","clearTimeout","Item","fun","noop","nextTick","title","browser","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",798,"copy","fill","readUInt8",799,"create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor"],"mappings":"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","file":"worker.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar commands = {  };\n\tvar sibilant = (__webpack_require__(792)).sibilant,\n\t    serialize = __webpack_require__(795);\n\tvar tap = (function tap$(v, fn) {\n\t  /* tap worker.sibilant:7:0 */\n\t\n\t  fn(v);\n\t  return v;\n\t});\n\tcommands.sibilize = (function commands$sibilize$(sibilantCode) {\n\t  /* commands.sibilize worker.sibilant:9:0 */\n\t\n\t  return sibilant.sibilize(sibilantCode);\n\t});\n\tcommands.evaluate = (function commands$evaluate$(sibilantCode) {\n\t  /* commands.evaluate worker.sibilant:12:0 */\n\t\n\t  return serialize((new Function(sibilant.sibilize((\"(do \" + sibilantCode + \")\"))))());\n\t});\n\tvar onMessage = (function onMessage$(e) {\n\t  /* on-message worker.sibilant:20:0 */\n\t\n\t  var identifier = e.data[0],\n\t      command = e.data[1],\n\t      data = e.data[2],\n\t      commandFn = commands[command],\n\t      returnValue = {  };\n\t  (function() {\n\t    try {\n\t      return returnValue.result = commandFn.apply(this, data);\n\t    } catch (e) {\n\t      return returnValue.error = e.message;\n\t    }\n\t  }).call(this);\n\t  return postMessage([ identifier, returnValue ]);\n\t});\n\tonmessage = onMessage;\n\n/***/ },\n\n/***/ 792:\n/***/ function(module, exports, __webpack_require__) {\n\n\t//# sourceMappingURL=../maps/browser.map\n\t;\n\tthis.sibilant = (function() {\n\t  /* src/browser.sibilant:4:5 */\n\t\n\t  var sibilant = {  },\n\t      exports = sibilant;\n\t  var error = (function error$(str) {\n\t    /* error src/browser.sibilant:6:6 */\n\t  \n\t    throw str\n\t  });\n\t  var inspect = (function inspect$(item) {\n\t    /* inspect src/browser.sibilant:7:6 */\n\t  \n\t    return (function() {\n\t      if (item.toSource) {\n\t        return item.toSource();\n\t      } else {\n\t        return item.toString();\n\t      }\n\t    }).call(this);\n\t  });\n\t  var bulkMap = (function bulkMap$(arr, fn) {\n\t    /* bulk-map include/functional.sibilant:1:0 */\n\t  \n\t    var index = 0,\n\t        groupSize = fn.length,\n\t        retArr = [];\n\t    (function() {\n\t      var while$5 = undefined;\n\t      while (index < arr.length) {\n\t        while$5 = (function() {\n\t          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n\t          return index += groupSize;\n\t        }).call(this);\n\t      };\n\t      return while$5;\n\t    }).call(this);\n\t    return retArr;\n\t  });\n\t  var inject = (function inject$(start, items, fn) {\n\t    /* inject include/functional.sibilant:13:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.reduce(fn, start);\n\t      } else {\n\t        return start;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var map = (function map$(items, fn) {\n\t    /* map include/functional.sibilant:18:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.map(fn);\n\t      } else {\n\t        return [];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var select = (function select$(items, fn) {\n\t    /* select include/functional.sibilant:23:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.filter(fn);\n\t      } else {\n\t        return [];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var detect = (function detect$(items, fn) {\n\t    /* detect include/functional.sibilant:28:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.find(fn);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var all__QUERY = (function all__QUERY$(items, fn) {\n\t    /* all? include/functional.sibilant:32:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.every(fn);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var none__QUERY = (function none__QUERY$(items, fn) {\n\t    /* none? include/functional.sibilant:36:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return !(items.some(fn));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var any__QUERY = (function any__QUERY$(items, fn) {\n\t    /* any? include/functional.sibilant:40:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.some(fn);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var reject = (function reject$(items, fn) {\n\t    /* reject include/functional.sibilant:44:0 */\n\t  \n\t    return select(items, (function() {\n\t      /* include/functional.sibilant:45:16 */\n\t    \n\t      return !(fn.apply(this, arguments));\n\t    }));\n\t  });\n\t  var compact = (function compact$(arr) {\n\t    /* compact include/functional.sibilant:48:0 */\n\t  \n\t    return select(arr, (function(item) {\n\t      /* include/functional.sibilant:49:17 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var unique = (function unique$(arr) {\n\t    /* unique include/functional.sibilant:55:0 */\n\t  \n\t    return inject([], arr, (function(coll, item) {\n\t      /* include/functional.sibilant:57:13 */\n\t    \n\t      return (function() {\n\t        if (coll.indexOf(item) !== -1) {\n\t          return coll;\n\t        } else {\n\t          return coll.concat([ item ]);\n\t        }\n\t      }).call(this);\n\t    }));\n\t  });\n\t  var interleave = (function interleave$(glue, arr) {\n\t    /* interleave include/functional.sibilant:63:0 */\n\t  \n\t    (function() {\n\t      if ((typeof arr === \"string\" && (glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name))) {\n\t        var temp = glue;\n\t        glue = arr;\n\t        return arr = temp;\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if ((glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name)) {\n\t        return inject([], arr, (function(collector, item, index) {\n\t          /* include/functional.sibilant:69:13 */\n\t        \n\t          return collector.concat([ item, glue[index] ]);\n\t        }));\n\t      } else {\n\t        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n\t          /* include/functional.sibilant:73:13 */\n\t        \n\t          return collector.concat([ glue, item ]);\n\t        }));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatten = (function flatten$(items, predicate) {\n\t    /* flatten include/functional.sibilant:76:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return inject([], items, (function(collector, item) {\n\t          /* include/functional.sibilant:79:17 */\n\t        \n\t          return (function() {\n\t            if ((!(predicate) || predicate(item))) {\n\t              return collector.concat((function() {\n\t                if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n\t                  return flatten(item, predicate);\n\t                } else {\n\t                  return item;\n\t                }\n\t              }).call(this));\n\t            } else {\n\t              return collector;\n\t            }\n\t          }).call(this);\n\t        }));\n\t      } else if ((!(predicate) || predicate(items))) {\n\t        return [ items ];\n\t      } else {\n\t        return [];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatCompact = (function flatCompact$(items) {\n\t    /* flat-compact include/functional.sibilant:89:0 */\n\t  \n\t    return flatten(items, (function(item) {\n\t      /* include/functional.sibilant:90:20 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var recurseMap = (function recurseMap$(item, fn) {\n\t    /* recurse-map include/functional.sibilant:96:0 */\n\t  \n\t    return (function() {\n\t      if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n\t        return map(item, (function(subitem) {\n\t          /* include/functional.sibilant:97:32 */\n\t        \n\t          return recurseMap(subitem, fn);\n\t        }));\n\t      } else {\n\t        return fn(item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var pluck = (function pluck$(items, attribute) {\n\t    /* pluck include/functional.sibilant:100:0 */\n\t  \n\t    return map(items, (function(item) {\n\t      /* include/functional.sibilant:101:16 */\n\t    \n\t      return item[attribute];\n\t    }));\n\t  });\n\t  var mergeInto = (function mergeInto$(into, from) {\n\t    /* merge-into include/functional.sibilant:103:0 */\n\t  \n\t    return Object.assign(into, from);\n\t  });\n\t  var clone = (function clone$(object) {\n\t    /* clone include/functional.sibilant:106:0 */\n\t  \n\t    return Object.assign({  }, object);\n\t  });\n\t  var values = (function values$(object) {\n\t    /* values include/functional.sibilant:109:0 */\n\t  \n\t    return map(Object.keys(object), (function() {\n\t      /* include/functional.sibilant:110:26 */\n\t    \n\t      return object[arguments[0]];\n\t    }));\n\t  });\n\t  var mapValues = (function mapValues$(object, fn) {\n\t    /* map-values include/functional.sibilant:112:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key, index) {\n\t      /* include/functional.sibilant:114:13 */\n\t    \n\t      collector[key] = fn(object[key], key);\n\t      return collector;\n\t    }));\n\t  });\n\t  var mergeWith = (function mergeWith$(into, from) {\n\t    /* merge-with include/functional.sibilant:118:0 */\n\t  \n\t    return Object.assign({  }, into, from);\n\t  });\n\t  var log__BANG = (function log__BANG$(args) {\n\t    /* log! src/colors.sibilant:1:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inspect__BANG.apply(this, args).forEach((function() {\n\t      /* src/colors.sibilant:2:35 */\n\t    \n\t      return console.log(arguments[0]);\n\t    }));\n\t  });\n\t  var inspect__BANG = (function inspect__BANG$(args) {\n\t    /* inspect! src/colors.sibilant:4:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return args.map((function() {\n\t      /* src/colors.sibilant:5:15 */\n\t    \n\t      return util.inspect(arguments[0], {\n\t        colors: false,\n\t        depth: 3\n\t      });\n\t    }));\n\t  });\n\t  var color = (function color$(code, items, depth) {\n\t    /* color src/colors.sibilant:7:0 */\n\t  \n\t    return (code + items.join(\"\") + \"\\033[0m\");\n\t  });\n\t  var black = (function black$(args) {\n\t    /* black src/colors.sibilant:10:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;30m\", args);\n\t  });\n\t  var red = (function red$(args) {\n\t    /* red src/colors.sibilant:11:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;31m\", args);\n\t  });\n\t  var green = (function green$(args) {\n\t    /* green src/colors.sibilant:12:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;32m\", args);\n\t  });\n\t  var brown = (function brown$(args) {\n\t    /* brown src/colors.sibilant:13:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;33m\", args);\n\t  });\n\t  var blue = (function blue$(args) {\n\t    /* blue src/colors.sibilant:14:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;34m\", args);\n\t  });\n\t  var purple = (function purple$(args) {\n\t    /* purple src/colors.sibilant:15:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;35m\", args);\n\t  });\n\t  var cyan = (function cyan$(args) {\n\t    /* cyan src/colors.sibilant:16:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;36m\", args);\n\t  });\n\t  var gray = (function gray$(args) {\n\t    /* gray src/colors.sibilant:17:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;37m\", args);\n\t  });\n\t  var boldGray = (function boldGray$(args) {\n\t    /* bold-gray src/colors.sibilant:18:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;30m\", args);\n\t  });\n\t  var boldRed = (function boldRed$(args) {\n\t    /* bold-red src/colors.sibilant:19:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;31m\", args);\n\t  });\n\t  var boldGreen = (function boldGreen$(args) {\n\t    /* bold-green src/colors.sibilant:20:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;32m\", args);\n\t  });\n\t  var yellow = (function yellow$(args) {\n\t    /* yellow src/colors.sibilant:21:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;33m\", args);\n\t  });\n\t  var boldBlue = (function boldBlue$(args) {\n\t    /* bold-blue src/colors.sibilant:22:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;34m\", args);\n\t  });\n\t  var boldPurple = (function boldPurple$(args) {\n\t    /* bold-purple src/colors.sibilant:23:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;35m\", args);\n\t  });\n\t  var boldCyan = (function boldCyan$(args) {\n\t    /* bold-cyan src/colors.sibilant:24:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;36m\", args);\n\t  });\n\t  var white = (function white$(args) {\n\t    /* white src/colors.sibilant:25:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;37m\", args);\n\t  });\n\t  sibilant.prettyPrint = (function sibilant$prettyPrint$(node, color, entry) {\n\t    /* sibilant.pretty-print src/pretty-printer.sibilant:3:0 */\n\t  \n\t    entry = (typeof entry !== \"undefined\") ? entry : true;\n\t    color = (typeof color !== \"undefined\") ? color : true;\n\t    return realNewlines((function() {\n\t      if (node__QUERY(node)) {\n\t        var prettyPrinter = (sibilant.prettyPrint[node.type] || sibilant.prettyPrint.default);\n\t        return prettyPrinter(node, color, entry);\n\t      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n\t        return ((function() {\n\t          if (color) {\n\t            return black(\"[\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this) + map(node, (function() {\n\t          /* src/pretty-printer.sibilant:14:28 */\n\t        \n\t          return prettify(arguments[0], color, false);\n\t        })).join((function() {\n\t          if (color) {\n\t            return black(\",\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this)) + (function() {\n\t          if (color) {\n\t            return black(\"]\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this));\n\t      } else if (color) {\n\t        return red(inspect(node));\n\t      } else {\n\t        return realNewlines(inspect(node));\n\t      }\n\t    }).call(this));\n\t  });\n\t  var prettify = sibilant.prettyPrint;\n\t  sibilant.prettyPrint.default = (function sibilant$prettyPrint$default$(node, color, entry) {\n\t    /* sibilant.pretty-print.default src/pretty-printer.sibilant:23:0 */\n\t  \n\t    var mapPretty = (function mapPretty$(attr) {\n\t      /* map-pretty src/pretty-printer.sibilant:24:5 */\n\t    \n\t      var arr = node[attr];\n\t      return (function() {\n\t        if ((arr && arr.length)) {\n\t          return map(arr, (function() {\n\t            /* src/pretty-printer.sibilant:27:27 */\n\t          \n\t            return prettify(arguments[0], color, false);\n\t          })).join(\"\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this);\n\t    });\n\t    return realNewlines(sibilant.prettyPrint.colorize(node, color, ((function() {\n\t      if (entry) {\n\t        return \"\";\n\t      } else {\n\t        return mapPretty(\"precedingIgnored\");\n\t      }\n\t    }).call(this) + mapPretty(\"modifiers\") + node.token + mapPretty(\"contents\") + mapPretty(\"closingIgnored\") + ((node.closed && acceptablePairs[node.token]) || \"\"))));\n\t  });\n\t  sibilant.prettyPrint.root = (function sibilant$prettyPrint$root$(node, color, entry) {\n\t    /* sibilant.pretty-print.root src/pretty-printer.sibilant:39:0 */\n\t  \n\t    return map(node.contents, (function() {\n\t      /* src/pretty-printer.sibilant:41:16 */\n\t    \n\t      return prettify(arguments[0], color, false);\n\t    })).join(\"\\n\");\n\t  });\n\t  sibilant.prettyPrint.output = (function sibilant$prettyPrint$output$(node, color) {\n\t    /* sibilant.pretty-print.output src/pretty-printer.sibilant:44:0 */\n\t  \n\t    return ((function() {\n\t      if (color) {\n\t        return black(\"{\");\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this) + (function() {\n\t      if ((node.contents && \"object\" === typeof node.contents && \"Array\" === node.contents.constructor.name)) {\n\t        return map(node.contents, (function() {\n\t          /* src/pretty-printer.sibilant:48:28 */\n\t        \n\t          return sibilant.prettyPrint.colorize(node, color, prettify(arguments[0], color, false));\n\t        })).join((function() {\n\t          if (color) {\n\t            return black(\",\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this));\n\t      } else {\n\t        return sibilant.prettyPrint.colorize(node, color, node.contents);\n\t      }\n\t    }).call(this) + (function() {\n\t      if (color) {\n\t        return black(\"}\");\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this));\n\t  });\n\t  var realNewlines = (function realNewlines$(node) {\n\t    /* real-newlines src/pretty-printer.sibilant:54:0 */\n\t  \n\t    return node.split(\"\\\\n\").join(\"\\n\");\n\t  });\n\t  sibilant.prettyPrint.colorize = (function sibilant$prettyPrint$colorize$(node, color, string) {\n\t    /* sibilant.pretty-print.colorize src/pretty-printer.sibilant:59:0 */\n\t  \n\t    return (function() {\n\t      if (!(color)) {\n\t        return string;\n\t      } else if (node.hint === \"macro\") {\n\t        return yellow(string);\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return purple(string);\n\t      } else {\n\t        return green(string);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var outputFormatter = (function outputFormatter$(node) {\n\t    /* output-formatter src/output-formatter.sibilant:1:0 */\n\t  \n\t    return (function() {\n\t      if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n\t        return map(node, outputFormatter).join(\"\");\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return outputFormatter(node.contents);\n\t      } else if ((typeof node === \"string\" || typeof node === \"number\")) {\n\t        return node;\n\t      } else if (!((typeof node !== \"undefined\" && node !== null))) {\n\t        return \"\";\n\t      } else if (node__QUERY(node)) {\n\t        console.log((\"warning: We ran into an unexpected node that never got transpiled at \" + node.file + \":\" + node.line + \":\" + node.col + \".\"));\n\t        return outputFormatter(transpile(node));\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.outputFormatter = outputFormatter;\n\t  var bulkMap = (function bulkMap$(arr, fn) {\n\t    /* bulk-map include/functional.sibilant:1:0 */\n\t  \n\t    var index = 0,\n\t        groupSize = fn.length,\n\t        retArr = [];\n\t    (function() {\n\t      var while$6 = undefined;\n\t      while (index < arr.length) {\n\t        while$6 = (function() {\n\t          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n\t          return index += groupSize;\n\t        }).call(this);\n\t      };\n\t      return while$6;\n\t    }).call(this);\n\t    return retArr;\n\t  });\n\t  var inject = (function inject$(start, items, fn) {\n\t    /* inject include/functional.sibilant:13:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.reduce(fn, start);\n\t      } else {\n\t        return start;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var map = (function map$(items, fn) {\n\t    /* map include/functional.sibilant:18:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.map(fn);\n\t      } else {\n\t        return [];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var select = (function select$(items, fn) {\n\t    /* select include/functional.sibilant:23:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.filter(fn);\n\t      } else {\n\t        return [];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var detect = (function detect$(items, fn) {\n\t    /* detect include/functional.sibilant:28:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.find(fn);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var all__QUERY = (function all__QUERY$(items, fn) {\n\t    /* all? include/functional.sibilant:32:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.every(fn);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var none__QUERY = (function none__QUERY$(items, fn) {\n\t    /* none? include/functional.sibilant:36:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return !(items.some(fn));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var any__QUERY = (function any__QUERY$(items, fn) {\n\t    /* any? include/functional.sibilant:40:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return items.some(fn);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var reject = (function reject$(items, fn) {\n\t    /* reject include/functional.sibilant:44:0 */\n\t  \n\t    return select(items, (function() {\n\t      /* include/functional.sibilant:45:16 */\n\t    \n\t      return !(fn.apply(this, arguments));\n\t    }));\n\t  });\n\t  var compact = (function compact$(arr) {\n\t    /* compact include/functional.sibilant:48:0 */\n\t  \n\t    return select(arr, (function(item) {\n\t      /* include/functional.sibilant:49:17 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var unique = (function unique$(arr) {\n\t    /* unique include/functional.sibilant:55:0 */\n\t  \n\t    return inject([], arr, (function(coll, item) {\n\t      /* include/functional.sibilant:57:13 */\n\t    \n\t      return (function() {\n\t        if (coll.indexOf(item) !== -1) {\n\t          return coll;\n\t        } else {\n\t          return coll.concat([ item ]);\n\t        }\n\t      }).call(this);\n\t    }));\n\t  });\n\t  var interleave = (function interleave$(glue, arr) {\n\t    /* interleave include/functional.sibilant:63:0 */\n\t  \n\t    (function() {\n\t      if ((typeof arr === \"string\" && (glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name))) {\n\t        var temp = glue;\n\t        glue = arr;\n\t        return arr = temp;\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if ((glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name)) {\n\t        return inject([], arr, (function(collector, item, index) {\n\t          /* include/functional.sibilant:69:13 */\n\t        \n\t          return collector.concat([ item, glue[index] ]);\n\t        }));\n\t      } else {\n\t        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n\t          /* include/functional.sibilant:73:13 */\n\t        \n\t          return collector.concat([ glue, item ]);\n\t        }));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatten = (function flatten$(items, predicate) {\n\t    /* flatten include/functional.sibilant:76:0 */\n\t  \n\t    return (function() {\n\t      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n\t        return inject([], items, (function(collector, item) {\n\t          /* include/functional.sibilant:79:17 */\n\t        \n\t          return (function() {\n\t            if ((!(predicate) || predicate(item))) {\n\t              return collector.concat((function() {\n\t                if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n\t                  return flatten(item, predicate);\n\t                } else {\n\t                  return item;\n\t                }\n\t              }).call(this));\n\t            } else {\n\t              return collector;\n\t            }\n\t          }).call(this);\n\t        }));\n\t      } else if ((!(predicate) || predicate(items))) {\n\t        return [ items ];\n\t      } else {\n\t        return [];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatCompact = (function flatCompact$(items) {\n\t    /* flat-compact include/functional.sibilant:89:0 */\n\t  \n\t    return flatten(items, (function(item) {\n\t      /* include/functional.sibilant:90:20 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var recurseMap = (function recurseMap$(item, fn) {\n\t    /* recurse-map include/functional.sibilant:96:0 */\n\t  \n\t    return (function() {\n\t      if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n\t        return map(item, (function(subitem) {\n\t          /* include/functional.sibilant:97:32 */\n\t        \n\t          return recurseMap(subitem, fn);\n\t        }));\n\t      } else {\n\t        return fn(item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var pluck = (function pluck$(items, attribute) {\n\t    /* pluck include/functional.sibilant:100:0 */\n\t  \n\t    return map(items, (function(item) {\n\t      /* include/functional.sibilant:101:16 */\n\t    \n\t      return item[attribute];\n\t    }));\n\t  });\n\t  var mergeInto = (function mergeInto$(into, from) {\n\t    /* merge-into include/functional.sibilant:103:0 */\n\t  \n\t    return Object.assign(into, from);\n\t  });\n\t  var clone = (function clone$(object) {\n\t    /* clone include/functional.sibilant:106:0 */\n\t  \n\t    return Object.assign({  }, object);\n\t  });\n\t  var values = (function values$(object) {\n\t    /* values include/functional.sibilant:109:0 */\n\t  \n\t    return map(Object.keys(object), (function() {\n\t      /* include/functional.sibilant:110:26 */\n\t    \n\t      return object[arguments[0]];\n\t    }));\n\t  });\n\t  var mapValues = (function mapValues$(object, fn) {\n\t    /* map-values include/functional.sibilant:112:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key, index) {\n\t      /* include/functional.sibilant:114:13 */\n\t    \n\t      collector[key] = fn(object[key], key);\n\t      return collector;\n\t    }));\n\t  });\n\t  var mergeWith = (function mergeWith$(into, from) {\n\t    /* merge-with include/functional.sibilant:118:0 */\n\t  \n\t    return Object.assign({  }, into, from);\n\t  });\n\t  var parser = {  };\n\t  sibilant.parser = parser;\n\t  parser.tokens = {\n\t    \"comment\": \"(;.*)\",\n\t    \"string\": \"(\\\"(([^\\\"]|(\\\\\\\\\\\"))*[^\\\\\\\\])?\\\")\",\n\t    \"number\": \"(-?[0-9][0-9.,]*)\",\n\t    \"literal\": \"(-?[*.$a-zA-Z_][/*.a-zA-Z0-9-_]*(\\\\?|!)?)\",\n\t    \"special\": \"([&'])\",\n\t    \"at\": \"@\",\n\t    \"tick\": \"[`']\",\n\t    \"hat\": \"(\\\\^)\",\n\t    \"dots\": \"(\\\\.+)\",\n\t    \"argPlaceholder\": \"(#[0-9]+)\",\n\t    \"otherChar\": \"([\\\\|#><=!\\\\+\\\\/\\\\*-]+)\",\n\t    \"openExpression\": \"(\\\\(|\\\\{|\\\\[)\",\n\t    \"closeExpression\": \"(\\\\)|\\\\}|\\\\])\",\n\t    \"newline\": \"\\\\n\",\n\t    \"whitespace\": \"\\\\s+\",\n\t    \"ignored\": \".\"\n\t  };\n\t  parser.tokens.head = (\"(\\\\.*[*$a-zA-Z_\\\\|><=\\\\+\\\\/\\\\*-]+\" + \"[/*.a-zA-Z0-9-_\\\\|><=\\\\+\\\\/\\\\*-]*\" + \"(\\\\?|!)?\\\\()\");\n\t  parser.tokenPrecedence = [ \"comment\", \"string\", \"number\", \"tick\", \"hat\", \"at\", \"special\", \"head\", \"dots\", \"literal\", \"argPlaceholder\", \"otherChar\", \"openExpression\", \"closeExpression\", \"newline\", \"whitespace\", \"ignored\" ];\n\t  parser.orderedRegexes = parser.tokenPrecedence.map((function(x) {\n\t    /* src/parser.sibilant:43:23 */\n\t  \n\t    return mergeInto((new RegExp((\"^\" + parser.tokens[x]), undefined)), { name: x });\n\t  }));\n\t  var orderedRegexes = parser.orderedRegexes;\n\t  parser.parse = (function parser$parse$(string, context) {\n\t    /* parser.parse src/parser.sibilant:48:0 */\n\t  \n\t    context = (typeof context !== \"undefined\") ? context : {\n\t      position: 0,\n\t      stack: [],\n\t      line: 1,\n\t      lastNewline: 0,\n\t      col: 0\n\t    };\n\t    var match = true,\n\t        regexName = null,\n\t        remainingInput = string;\n\t    (function() {\n\t      var while$7 = undefined;\n\t      while (match) {\n\t        while$7 = (function() {\n\t          detect(orderedRegexes, (function(r) {\n\t            /* src/parser.sibilant:59:20 */\n\t          \n\t            regexName = r.name;\n\t            return match = r.exec(remainingInput);\n\t          }));\n\t          return (function() {\n\t            if ((typeof match !== \"undefined\" && match !== null)) {\n\t              var matchString = match[0],\n\t                  length = matchString.length;\n\t              context.stack.push({\n\t                file: sibilant.file,\n\t                token: matchString,\n\t                type: regexName,\n\t                line: context.line,\n\t                col: context.col,\n\t                contents: []\n\t              });\n\t              (function() {\n\t                if (\"newline\" === regexName) {\n\t                  ((context.line)++);\n\t                  context.col = 0;\n\t                  return context.lastNewline = context.position;\n\t                } else if ((\"string\" === regexName && matchString.indexOf(\"\\n\") !== -1)) {\n\t                  var stringNewlineCount = (matchString.split(\"\\n\").length - 1);\n\t                  context.line += stringNewlineCount;\n\t                  return context.col = (length - matchString.lastIndexOf(\"\\n\"));\n\t                } else {\n\t                  return context.col += length;\n\t                }\n\t              }).call(this);\n\t              context.position += length;\n\t              return remainingInput = (function() {\n\t                if ((remainingInput && remainingInput.length)) {\n\t                  return remainingInput.slice(length);\n\t                } else {\n\t                  return \"\";\n\t                }\n\t              }).call(this);\n\t            }\n\t          }).call(this);\n\t        }).call(this);\n\t      };\n\t      return while$7;\n\t    }).call(this);\n\t    return context.stack;\n\t  });\n\t  var parse = parser.parse;\n\t  var acceptablePairs = {\n\t    \"(\": \")\",\n\t    \"[\": \"]\",\n\t    \"{\": \"}\"\n\t  },\n\t      bracketTypes = {\n\t    \"(\": \"expression\",\n\t    \"[\": \"bracket\",\n\t    \"{\": \"brace\"\n\t  };\n\t  var restructure = (function restructure$(input) {\n\t    /* restructure src/restructurer.sibilant:6:0 */\n\t  \n\t    var output = {\n\t      type: \"root\",\n\t      contents: [],\n\t      file: sibilant.file,\n\t      col: 0,\n\t      line: 1\n\t    },\n\t        context = {\n\t      parseStack: [ output ],\n\t      output: output,\n\t      input: input,\n\t      ignoredNodes: [],\n\t      specials: 0\n\t    };\n\t    inject(context, input, restructurers);\n\t    (function() {\n\t      if (!(1 === context.parseStack.length)) {\n\t        var unclosedNode = context.parseStack[0];\n\t        throw (new Error((\"unclosed node at \" + unclosedNode.file + \":\" + unclosedNode.line + \":\" + unclosedNode.col + \"\\n  \" + prettify(unclosedNode, false).slice(0, 100))))\n\t      }\n\t    }).call(this);\n\t    return output;\n\t  });\n\t  var restructurers = (function restructurers$(context, node) {\n\t    /* restructurers src/restructurer.sibilant:29:0 */\n\t  \n\t    var restructurer = (restructurers[node.type] || restructurers.default);\n\t    return restructurer(node, context);\n\t  });\n\t  sibilant.restructure = restructure;\n\t  restructurers.head = (function restructurers$head$(node, context) {\n\t    /* restructurers.head src/restructurer.sibilant:35:0 */\n\t  \n\t    var head = mergeWith(node, {\n\t      token: node.token.slice(0, -1),\n\t      type: \"literal\"\n\t    }),\n\t        expression = mergeWith(node, {\n\t      token: \"(\",\n\t      type: \"openExpression\"\n\t    });\n\t    return restructurers(restructurers(context, expression), head);\n\t  });\n\t  restructurers.openExpression = (function restructurers$openExpression$(node, context) {\n\t    /* restructurers.open-expression src/restructurer.sibilant:44:42 */\n\t  \n\t    var first = context.parseStack[0];\n\t    node.contents = [];\n\t    node.type = bracketTypes[node.token];\n\t    acceptIgnoredNodes(node, context);\n\t    acceptSpecials(node, context);\n\t    first.contents.push(node);\n\t    context.parseStack.unshift(node);\n\t    return context;\n\t  });\n\t  restructurers.closeExpression = (function restructurers$closeExpression$(node, context) {\n\t    /* restructurers.close-expression src/restructurer.sibilant:56:0 */\n\t  \n\t    var first = context.parseStack[0];\n\t    (function() {\n\t      if (node__QUERY(first, \"root\")) {\n\t        throw (new Error((\"unexpected \" + node.token + \" on \" + node.file + \":\" + node.line + \":\" + node.col)))\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (acceptablePairs[first.token] !== node.token) {\n\t        throw (new Error((\"trying to close \" + yellow(sibilant.prettyPrint(first)) + \"\\n   on \" + first.file + \":\" + first.line + \":\" + first.col + \"\\n   with \" + sibilant.prettyPrint(node) + \"\\n   on \" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\")))\n\t      }\n\t    }).call(this);\n\t    first.end = node.end;\n\t    first.closed = true;\n\t    first.closingIgnored = context.ignoredNodes;\n\t    context.ignoredNodes = [];\n\t    context.parseStack.shift();\n\t    closeSpecials(first, context);\n\t    (function() {\n\t      if (context.parseStack.length === 0) {\n\t        throw (new Error((\"unbalanced parens:\\n\" + inspect(parseStack))))\n\t      }\n\t    }).call(this);\n\t    return context;\n\t  });\n\t  var openSpecial = (function openSpecial$(node, context) {\n\t    /* open-special src/restructurer.sibilant:81:0 */\n\t  \n\t    ((context.specials)++);\n\t    acceptIgnoredNodes(node, context);\n\t    var first = context.parseStack[0];\n\t    node.contents = [];\n\t    first.contents.push(node);\n\t    context.parseStack.unshift(node);\n\t    return context;\n\t  });\n\t  var acceptSpecials = (function acceptSpecials$(node, context) {\n\t    /* accept-specials src/restructurer.sibilant:94:0 */\n\t  \n\t    node.specials = context.specials;\n\t    context.specials = 0;\n\t    return context;\n\t  });\n\t  var acceptIgnoredNodes = (function acceptIgnoredNodes$(node, context) {\n\t    /* accept-ignored-nodes src/restructurer.sibilant:99:0 */\n\t  \n\t    node.precedingIgnored = context.ignoredNodes;\n\t    context.ignoredNodes = [];\n\t    return context;\n\t  });\n\t  var closeSpecials = (function closeSpecials$(node, context) {\n\t    /* close-specials src/restructurer.sibilant:104:0 */\n\t  \n\t    (function() {\n\t      if (node.specials > 0) {\n\t        ((node.specials)--);\n\t        context.parseStack.shift();\n\t        return closeSpecials(node, context);\n\t      }\n\t    }).call(this);\n\t    return context;\n\t  });\n\t  var accumulateIgnoredNode = (function accumulateIgnoredNode$(node, context) {\n\t    /* accumulate-ignored-node src/restructurer.sibilant:112:0 */\n\t  \n\t    context.ignoredNodes.push(node);\n\t    return context;\n\t  });\n\t  [ \"hat\", \"dots\", \"tick\", \"at\" ].forEach((function(special) {\n\t    /* src/restructurer.sibilant:116:0 */\n\t  \n\t    return restructurers[special] = openSpecial;\n\t  }));\n\t  [ \"whitespace\", \"newline\", \"ignored\", \"comment\" ].forEach((function(ignored) {\n\t    /* src/restructurer.sibilant:119:0 */\n\t  \n\t    return restructurers[ignored] = accumulateIgnoredNode;\n\t  }));\n\t  restructurers.default = (function restructurers$default$(node, context) {\n\t    /* restructurers.default src/restructurer.sibilant:122:0 */\n\t  \n\t    acceptSpecials(node, context);\n\t    acceptIgnoredNodes(node, context);\n\t    context.parseStack[0].contents.push(node);\n\t    return closeSpecials(node, context);\n\t  });\n\t  var coreNamespace = {  },\n\t      macroNamespaces = { core: coreNamespace };\n\t  sibilant.state = {\n\t    symbolCount: 0,\n\t    functionComments: true\n\t  };\n\t  sibilant.macros = {\n\t    \"namespaces\": macroNamespaces,\n\t    \"defaultSearchPath\": [ \"core\" ],\n\t    \"searchPath\": [ \"core\" ],\n\t    \"namespace\": coreNamespace\n\t  };\n\t  var namespace = sibilant.macros.namespace,\n\t      macros = sibilant.macros.namespace;\n\t  sibilant.macros.currentNamespace = (function sibilant$macros$currentNamespace$() {\n\t    /* sibilant.macros.current-namespace src/precompiled-macros.sibilant:15:0 */\n\t  \n\t    return sibilant.macros.namespaces[sibilant.macros.searchPath[0]];\n\t  });\n\t  sibilant.resolveMacro = (function sibilant$resolveMacro$(macroName) {\n\t    /* sibilant.resolve-macro src/precompiled-macros.sibilant:18:0 */\n\t  \n\t    return (function() {\n\t      if ((macroName.indexOf(\"/\") !== -1 && 1 < macroName.length && !(macroName.indexOf(\"\\n\") !== -1))) {\n\t        var pathComponents = macroName.split(\"/\"),\n\t            macro = (sibilant.macros.namespaces.hasOwnProperty(pathComponents[0]) && sibilant.macros.namespaces[pathComponents[0]][pathComponents.slice(1).join(\"/\")]);\n\t        return (function() {\n\t          if (macro) {\n\t            return macro;\n\t          } else {\n\t            return error((\"called namespaced macro \" + macroName + \" but could not find namespace \" + pathComponents[0] + \". you might need to include the file that defines it first.\"));\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        var namespace = detect(sibilant.macros.searchPath, (function(namespace) {\n\t          /* src/precompiled-macros.sibilant:30:33 */\n\t        \n\t          return sibilant.macros.namespaces[namespace].hasOwnProperty(macroName);\n\t        }));\n\t        return (function() {\n\t          if (namespace) {\n\t            return sibilant.macros.namespaces[namespace][macroName];\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.withDefaultSearchPath = (function sibilant$withDefaultSearchPath$(fn) {\n\t    /* sibilant.with-default-search-path src/precompiled-macros.sibilant:35:0 */\n\t  \n\t    var searchPathBefore = sibilant.macros.searchPath;\n\t    sibilant.macros.searchPath = sibilant.macros.defaultSearchPath;\n\t    var returnValue = fn();\n\t    sibilant.macros.searchPath = searchPathBefore;\n\t    return returnValue;\n\t  });\n\t  sibilant.macros.namespaces.core.case = (function case$(subject, cases) {\n\t    /* case src/macros/case.sibilant:1:0 */\n\t  \n\t    var cases = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      file: \"src/macros/case.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 2,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/case.sibilant\",\n\t        token: \"if\",\n\t        type: \"literal\",\n\t        line: 2,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(flatten(bulkMap(cases, (function(predicate, body) {\n\t        /* src/macros/case.sibilant:3:30 */\n\t      \n\t        return (function() {\n\t          if (body) {\n\t            return [ {\n\t              file: \"src/macros/case.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 5,\n\t              col: 38,\n\t              contents: [ {\n\t                file: \"src/macros/case.sibilant\",\n\t                token: \"|>\",\n\t                type: \"otherChar\",\n\t                line: 5,\n\t                col: 39,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, subject, predicate ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            }, body ];\n\t          } else {\n\t            return predicate;\n\t          }\n\t        }).call(this);\n\t      })))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\">\"] = (function $$(args) {\n\t    /* > src/macros/comparison.sibilant:3:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \">\";\n\t    return {\n\t      file: \"src/macros/comparison.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 5,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/comparison.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 5,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* src/macros/comparison.sibilant:6:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"<\"] = (function $$(args) {\n\t    /* < src/macros/comparison.sibilant:10:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"<\";\n\t    return {\n\t      file: \"src/macros/comparison.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 12,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/comparison.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 12,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* src/macros/comparison.sibilant:13:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"<=\"] = (function $$(args) {\n\t    /* <= src/macros/comparison.sibilant:16:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"<=\";\n\t    return {\n\t      file: \"src/macros/comparison.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 18,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/comparison.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 18,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* src/macros/comparison.sibilant:19:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\">=\"] = (function $$(args) {\n\t    /* >= src/macros/comparison.sibilant:22:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \">=\";\n\t    return {\n\t      file: \"src/macros/comparison.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 24,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/comparison.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 24,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* src/macros/comparison.sibilant:25:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"!=\"] = (function $$(args) {\n\t    /* != src/macros/comparison.sibilant:27:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"!==\";\n\t    return {\n\t      file: \"src/macros/comparison.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 29,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/comparison.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 29,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* src/macros/comparison.sibilant:30:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"=\"] = (function $$(args) {\n\t    /* = src/macros/comparison.sibilant:33:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"===\";\n\t    return {\n\t      file: \"src/macros/comparison.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 35,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/comparison.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 35,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* src/macros/comparison.sibilant:36:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.ternary = (function ternary$(cond, ifTrue, ifFalse) {\n\t    /* ternary src/macros/flow-control.sibilant:9:0 */\n\t  \n\t    return [ \"(\", transpile(cond), \") ? \", transpile(ifTrue), \" : \", transpile(ifFalse) ];\n\t  });\n\t  sibilant.macros.namespaces.core.when = (function when$(condition, body) {\n\t    /* when src/macros/flow-control.sibilant:21:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return sibilant.macros.namespaces.core._scopedWithoutReturn(\"if (\", condition, \") {\", indent({\n\t      file: \"src/macros/flow-control.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 24,\n\t      col: 18,\n\t      contents: [ {\n\t        file: \"src/macros/flow-control.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        line: 24,\n\t        col: 19,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\");\n\t  });\n\t  sibilant.macros.namespaces.core.unless = (function unless$(condition, body) {\n\t    /* unless src/macros/flow-control.sibilant:33:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(function() {\", indent([ \"if (\", {\n\t      file: \"src/macros/flow-control.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 35,\n\t      col: 25,\n\t      contents: [ {\n\t        file: \"src/macros/flow-control.sibilant\",\n\t        token: \"not\",\n\t        type: \"literal\",\n\t        line: 35,\n\t        col: 26,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, condition ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }, \") {\", indent({\n\t      file: \"src/macros/flow-control.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 36,\n\t      col: 33,\n\t      contents: [ {\n\t        file: \"src/macros/flow-control.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        line: 36,\n\t        col: 34,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.if = (function if$(alternatingConditionsAndBranches) {\n\t    /* if src/macros/flow-control.sibilant:58:0 */\n\t  \n\t    var alternatingConditionsAndBranches = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(function() {\", indent(interleave(\" else \", bulkMap(alternatingConditionsAndBranches, (function(cond, val) {\n\t      /* src/macros/flow-control.sibilant:63:25 */\n\t    \n\t      return (function() {\n\t        if (typeof val !== \"undefined\") {\n\t          return [ \"if (\", transpile(cond), \") {\", indent({\n\t            file: \"src/macros/flow-control.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 66,\n\t            col: 44,\n\t            contents: [ {\n\t              file: \"src/macros/flow-control.sibilant\",\n\t              token: \"do\",\n\t              type: \"literal\",\n\t              line: 66,\n\t              col: 45,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, val ],\n\t            precedingIgnored: [],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }), \"}\" ];\n\t        } else {\n\t          return [ \"{\", indent({\n\t            file: \"src/macros/flow-control.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 68,\n\t            col: 47,\n\t            contents: [ {\n\t              file: \"src/macros/flow-control.sibilant\",\n\t              token: \"do\",\n\t              type: \"literal\",\n\t              line: 68,\n\t              col: 48,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, cond ],\n\t            precedingIgnored: [],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }), \"}\" ];\n\t        }\n\t      }).call(this);\n\t    })))), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.quotedHash = (function quotedHash$(pairs) {\n\t    /* quoted-hash src/macros/hash.sibilant:3:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var cachedQuoteValue = sibilant.quoteHashKeys;\n\t    sibilant.quoteHashKeys = true;\n\t    var value = sibilant.macros.namespaces.core.hash.apply(this, pairs);\n\t    sibilant.quoteHashKeys = cachedQuoteValue;\n\t    return value;\n\t  });\n\t  sibilant.macros.namespaces.core.hash = (function hash$(pairs) {\n\t    /* hash src/macros/hash.sibilant:18:7 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    pairs = pairs.map((function(p, i) {\n\t      /* src/macros/hash.sibilant:19:32 */\n\t    \n\t      return (function() {\n\t        if ((p.token === \"&\" && node__QUERY(p, \"special\"))) {\n\t          var double = pairs[(function() {\n\t            if (0 === (i % 2)) {\n\t              return (1 + i);\n\t            } else {\n\t              return (i - 1);\n\t            }\n\t          }).call(this)];\n\t          return (function() {\n\t            if ((node__QUERY(double, \"tick\") && double.token === \"`\")) {\n\t              return double.contents[0];\n\t            } else {\n\t              return double;\n\t            }\n\t          }).call(this);\n\t        } else {\n\t          return p;\n\t        }\n\t      }).call(this);\n\t    }));\n\t    (function() {\n\t      if (1 === (pairs.length % 2)) {\n\t        return error((\"odd number of key-value pairs in hash: \" + inspect(pairs)));\n\t      }\n\t    }).call(this);\n\t    var pairs_reduce$2 = pairs.reduce((function(o, item, i) {\n\t      /* src/macros/hash.sibilant:32:26 */\n\t    \n\t      return (function() {\n\t        if ((0 === (i % 2) && node__QUERY(item, \"tick\") && item.token === \"`\")) {\n\t          return Object.assign({  }, o, { dynamicKeys: o.dynamicKeys.concat([ item.contents[0] ]) });\n\t        } else if ((1 === (o.dynamicKeys.length % 2) && 1 === (i % 2))) {\n\t          return Object.assign({  }, o, { dynamicKeys: o.dynamicKeys.concat([ item ]) });\n\t        } else {\n\t          return Object.assign({  }, o, { staticKeys: o.staticKeys.concat([ item ]) });\n\t        }\n\t      }).call(this);\n\t    }), {\n\t      dynamicKeys: [],\n\t      staticKeys: []\n\t    }),\n\t        dynamicKeys = pairs_reduce$2.dynamicKeys,\n\t        staticKeys = pairs_reduce$2.staticKeys,\n\t        pairs_reduce$2 = undefined;\n\t    var quoteKeys = sibilant.quoteHashKeys,\n\t        pairStrings = bulkMap(staticKeys, (function(key, value) {\n\t      /* src/macros/hash.sibilant:43:47 */\n\t    \n\t      return [ (function() {\n\t        if ((quoteKeys && !(node__QUERY(key, \"string\")))) {\n\t          return [ \"\\\"\", transpile(key), \"\\\"\" ];\n\t        } else {\n\t          return transpile(key);\n\t        }\n\t      }).call(this), \": \", transpile(value) ];\n\t    }));\n\t    return (function() {\n\t      if (dynamicKeys.length) {\n\t        var symbol = generateSymbol(\"hash\");\n\t        return {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 53,\n\t          col: 13,\n\t          contents: [ {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \"*scoped-without-source\",\n\t            type: \"literal\",\n\t            line: 53,\n\t            col: 14,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 54,\n\t            col: 14,\n\t            contents: [ {\n\t              file: \"src/macros/hash.sibilant\",\n\t              token: \"var\",\n\t              type: \"literal\",\n\t              line: 54,\n\t              col: 15,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, symbol, {\n\t              file: \"src/macros/hash.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 54,\n\t              col: 27,\n\t              contents: [ {\n\t                file: \"src/macros/hash.sibilant\",\n\t                token: \"hash\",\n\t                type: \"literal\",\n\t                line: 54,\n\t                col: 28,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              } ].concat(staticKeys),\n\t              precedingIgnored: [ {\n\t                file: \"src/macros/hash.sibilant\",\n\t                token: \" \",\n\t                type: \"whitespace\",\n\t                line: 54,\n\t                col: 26,\n\t                contents: []\n\t              } ],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/hash.sibilant\",\n\t              token: \"\\n\",\n\t              type: \"newline\",\n\t              line: 53,\n\t              col: 36,\n\t              contents: []\n\t            }, {\n\t              file: \"src/macros/hash.sibilant\",\n\t              token: \"              \",\n\t              type: \"whitespace\",\n\t              line: 54,\n\t              col: 0,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 55,\n\t            col: 14,\n\t            contents: [ {\n\t              file: \"src/macros/hash.sibilant\",\n\t              token: \"set\",\n\t              type: \"literal\",\n\t              line: 55,\n\t              col: 15,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, symbol ].concat(dynamicKeys),\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/hash.sibilant\",\n\t              token: \"\\n\",\n\t              type: \"newline\",\n\t              line: 54,\n\t              col: 50,\n\t              contents: []\n\t            }, {\n\t              file: \"src/macros/hash.sibilant\",\n\t              token: \"              \",\n\t              type: \"whitespace\",\n\t              line: 55,\n\t              col: 0,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, symbol ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      } else if (1 >= pairStrings.length) {\n\t        return [ \"{ \", interleave(\", \", pairStrings), \" }\" ];\n\t      } else {\n\t        return [ \"{\", indent(interleave(\",\\n\", pairStrings)), \"}\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n\t    /* get src/macros/hash.sibilant:76:0 */\n\t  \n\t    var keys = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ transpile(obj), map(keys, (function(key) {\n\t      /* src/macros/hash.sibilant:78:19 */\n\t    \n\t      var transpiled = transpile(key),\n\t          output = outputFormatter(transpiled);\n\t      return (function() {\n\t        if (output.match((new RegExp(\"^\\\"[a-zA-Z0-9_]+\\\"$\", undefined)))) {\n\t          return [ \".\", output.replace((new RegExp(\"\\\"\", \"g\")), \"\") ];\n\t        } else {\n\t          return [ \"[\", transpiled, \"]\" ];\n\t        }\n\t      }).call(this);\n\t    })) ];\n\t  });\n\t  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n\t    /* set src/macros/hash.sibilant:96:0 */\n\t  \n\t    var kvPairs = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n\t      /* src/macros/hash.sibilant:97:43 */\n\t    \n\t      return {\n\t        file: \"src/macros/hash.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 97,\n\t        col: 52,\n\t        contents: [ {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \"assign\",\n\t          type: \"literal\",\n\t          line: 97,\n\t          col: 53,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 97,\n\t          col: 60,\n\t          contents: [ {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            line: 97,\n\t            col: 61,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, arr, k ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 97,\n\t            col: 59,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, v ],\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      };\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.keys = (function keys$(obj) {\n\t    /* keys src/macros/hash.sibilant:105:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/hash.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 106,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/hash.sibilant\",\n\t        token: \"Object.keys\",\n\t        type: \"literal\",\n\t        line: 106,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, obj ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.delete = (function delete$(objects) {\n\t    /* delete src/macros/hash.sibilant:114:0 */\n\t  \n\t    var objects = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", map(objects, (function(obj) {\n\t      /* src/macros/hash.sibilant:115:37 */\n\t    \n\t      return asStatement([ \"delete \", transpile(obj) ]);\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.eachKey = (function eachKey$(as, obj, body) {\n\t    /* each-key src/macros/hash.sibilant:122:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return {\n\t      file: \"src/macros/hash.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 123,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/hash.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        line: 123,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, obj, {\n\t        file: \"src/macros/hash.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 123,\n\t        col: 19,\n\t        contents: [ {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \"keys\",\n\t          type: \"literal\",\n\t          line: 123,\n\t          col: 20,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 123,\n\t          col: 18,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/hash.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 124,\n\t        col: 14,\n\t        contents: [ {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          line: 124,\n\t          col: 15,\n\t          contents: [ {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \"for-each\",\n\t            type: \"literal\",\n\t            line: 124,\n\t            col: 16,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 124,\n\t          col: 25,\n\t          contents: [ {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \"lambda\",\n\t            type: \"literal\",\n\t            line: 124,\n\t            col: 26,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            args: (function() {\n\t              if (node__QUERY(as, \"expression\")) {\n\t                return as;\n\t              } else {\n\t                return [ as ];\n\t              }\n\t            }).call(this),\n\t            node: this\n\t          } ].concat(body),\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/hash.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 124,\n\t            col: 24,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 123,\n\t          col: 25,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/hash.sibilant\",\n\t          token: \"              \",\n\t          type: \"whitespace\",\n\t          line: 124,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.lambda = (function lambda$(argsOrOptions, body) {\n\t    /* lambda src/macros/lambda.sibilant:21:8 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    debug__BANG(3, argsOrOptions);\n\t    var args = (argsOrOptions.args || argsOrOptions),\n\t        body = (argsOrOptions.body || body),\n\t        node = (argsOrOptions.node || this),\n\t        args = (function() {\n\t      if (node__QUERY(args, \"expression\", \"bracket\")) {\n\t        return args.contents;\n\t      } else if ((node__QUERY(args) && 0 === body.length)) {\n\t        body = [ args ];\n\t        return [];\n\t      } else if (node__QUERY(args, \"brace\")) {\n\t        return [ args ];\n\t      } else {\n\t        return args;\n\t      }\n\t    }).call(this),\n\t        name = (function() {\n\t      if (argsOrOptions.name) {\n\t        return outputFormatter(transpile(argsOrOptions.name)).replace((new RegExp(\"\\\\W+\", \"g\")), \"$\").concat(\"$\");\n\t      }\n\t    }).call(this),\n\t        rest = detect(args, (function() {\n\t      /* src/macros/lambda.sibilant:36:30 */\n\t    \n\t      return node__QUERY(arguments[0], \"dots\");\n\t    })),\n\t        destructuredArgs = map(args, (function(arg) {\n\t      /* src/macros/lambda.sibilant:38:40 */\n\t    \n\t      return (function() {\n\t        if (node__QUERY(arg, \"bracket\", \"brace\")) {\n\t          var argName = generateSymbol(makeSymbolClue(arg));\n\t          return {\n\t            argName: argName,\n\t            destructuredPair: [ arg, argName ]\n\t          };\n\t        } else {\n\t          return { argName: arg };\n\t        }\n\t      }).call(this);\n\t    })),\n\t        destructuredStatements = flatCompact([ (function() {\n\t      if ((typeof rest !== \"undefined\" && rest !== null)) {\n\t        return [ rest, {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 45,\n\t          col: 71,\n\t          contents: [ {\n\t            file: \"src/macros/lambda.sibilant\",\n\t            token: \"Array.prototype.slice.call\",\n\t            type: \"literal\",\n\t            line: 45,\n\t            col: 72,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/lambda.sibilant\",\n\t            token: \"arguments\",\n\t            type: \"literal\",\n\t            line: 45,\n\t            col: 99,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/lambda.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 45,\n\t              col: 98,\n\t              contents: []\n\t            } ]\n\t          }, (args.length - 1) ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ];\n\t      }\n\t    }).call(this) ].concat(map(destructuredArgs, (function() {\n\t      /* src/macros/lambda.sibilant:46:68 */\n\t    \n\t      return arguments[0].destructuredPair;\n\t    }))));\n\t    node = detect([ node, argsOrOptions.name, args, body[0] ], (function(n) {\n\t      /* src/macros/lambda.sibilant:51:21 */\n\t    \n\t      return (node__QUERY(n) && n.file);\n\t    }));\n\t    return [ \"(function\", (function() {\n\t      if (name) {\n\t        return (\" \" + name);\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this), \"(\", interleave(\", \", map(destructuredArgs, (function() {\n\t      /* src/macros/lambda.sibilant:55:49 */\n\t    \n\t      return arguments[0].argName;\n\t    }))), \") {\", (function() {\n\t      if ((sibilant.state.functionComments && (name || node))) {\n\t        return indent([ \"/*\", (function() {\n\t          if (name) {\n\t            return (\" \" + sibilant.prettyPrint(argsOrOptions.name, false));\n\t          }\n\t        }).call(this), (function() {\n\t          if (node) {\n\t            return (\" \" + node.file + \":\" + node.line + \":\" + node.col);\n\t          }\n\t        }).call(this), \" */\" ]);\n\t      }\n\t    }).call(this), (function() {\n\t      if (destructuredStatements.length) {\n\t        return indent({\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 61,\n\t          col: 55,\n\t          contents: [ {\n\t            file: \"src/macros/lambda.sibilant\",\n\t            token: \"var\",\n\t            type: \"literal\",\n\t            line: 61,\n\t            col: 56,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ].concat(destructuredStatements),\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        });\n\t      }\n\t    }).call(this), indent(sibilant.macros.namespaces.core.do.apply(this, body)), \"})\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"#\"] = sibilant.macros.namespaces.core.lambda;\n\t  sibilant.macros.namespaces.core.thunk = (function thunk$(body) {\n\t    /* thunk src/macros/lambda.sibilant:72:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var node = this,\n\t        lambdaOptions = {\n\t      node: node,\n\t      args: []\n\t    };\n\t    (function() {\n\t      if (!(node__QUERY(body[0]))) {\n\t        mergeInto(lambdaOptions, body[0]);\n\t        return body = body.slice(1);\n\t      }\n\t    }).call(this);\n\t    return {\n\t      file: \"src/macros/lambda.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 80,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"lambda\",\n\t        type: \"literal\",\n\t        line: 80,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, lambdaOptions ].concat(mapNode(body, (function(node) {\n\t        /* src/macros/lambda.sibilant:82:17 */\n\t      \n\t        return (function() {\n\t          if (node__QUERY(node, \"argPlaceholder\")) {\n\t            return {\n\t              file: \"src/macros/lambda.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 84,\n\t              col: 24,\n\t              contents: [ {\n\t                file: \"src/macros/lambda.sibilant\",\n\t                token: \"argument\",\n\t                type: \"literal\",\n\t                line: 84,\n\t                col: 25,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, node.token.replace((new RegExp(\"^#\", undefined)), \"\") ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            };\n\t          } else {\n\t            return node;\n\t          }\n\t        }).call(this);\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"#>\"] = sibilant.macros.namespaces.core.thunk;\n\t  sibilant.macros.namespaces.core.return = (function return$(token) {\n\t    /* return src/macros/lambda.sibilant:88:0 */\n\t  \n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(\"returning \", prettify(token));\n\t      }\n\t    }).call(this);\n\t    var defaultReturn = asStatement([ \"return \", transpile(token) ]);\n\t    return (function() {\n\t      if ((token && token.contents && token.contents.length)) {\n\t        return (function() {\n\t          switch(token.contents[0].token) {\n\t          case \"return\":\n\t          case \"throw\":\n\t          case \"do\":\n\t            return transpile(token);\n\t          \n\t          case \"delete\":\n\t            var deleteMacro = macros.delete;\n\t            return (function() {\n\t              if (token.contents.length < 3) {\n\t                return defaultReturn;\n\t              } else {\n\t                return [ asStatement(deleteMacro.apply(this, token.contents.slice(1, -1))), \"\\nreturn \", asStatement(deleteMacro(token.contents.slice(-1)[0])) ];\n\t              }\n\t            }).call(this);\n\t          \n\t          case \"def\":\n\t            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return(token.contents[1]) ];\n\t          \n\t          case \"assign\":\n\t            return (function() {\n\t              if (token.contents.length < 4) {\n\t                return defaultReturn;\n\t              } else {\n\t                var result = clone(transpile(token));\n\t                result.contents = result.contents.slice(0, -4).concat([ \"return \" ], result.contents.slice(-4));\n\t                return result;\n\t              }\n\t            }).call(this);\n\t          \n\t          case \"var\":\n\t            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return((function() {\n\t              if (0 === (token.contents.length % 2)) {\n\t                return token.contents.slice(-1)[0];\n\t              } else {\n\t                return token.contents.slice(-2)[0];\n\t              }\n\t            }).call(this)) ];\n\t          \n\t          case \"set\":\n\t            return (function() {\n\t              if (token.contents.length < 5) {\n\t                return defaultReturn;\n\t              } else {\n\t                var obj = token.contents[1],\n\t                    nonReturnPart = token.contents.slice(2, (token.contents.length - 2)),\n\t                    returnPart = token.contents.slice(-2);\n\t                nonReturnPart.unshift(obj);\n\t                returnPart.unshift(obj);\n\t                return [ sibilant.macros.namespaces.core.set.apply(this, nonReturnPart), \"\\nreturn \", sibilant.macros.namespaces.core.set.apply(this, returnPart) ];\n\t              }\n\t            }).call(this);\n\t          \n\t          default:\n\t            return defaultReturn;\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        return defaultReturn;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.do = (function do$(body) {\n\t    /* do src/macros/lambda.sibilant:135:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (function() {\n\t      if (1 === body.length) {\n\t        return sibilant.macros.namespaces.core.return(body[0]);\n\t      } else if (body.length) {\n\t        return [ interleave(map(body.slice(0, -1), (function() {\n\t          /* src/macros/lambda.sibilant:143:19 */\n\t        \n\t          return asStatement(arguments[0]);\n\t        })), \"\\n\"), \"\\n\", sibilant.macros.namespaces.core.return(body.slice(-1)[0]) ];\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.def = (function def$(name, args, body) {\n\t    /* def src/macros/lambda.sibilant:160:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var node = this;\n\t    (function() {\n\t      if (node__QUERY(name, \"expression\")) {\n\t        body = [ args ].concat(body);\n\t        args = mergeWith(name, { contents: name.contents.slice(1) });\n\t        return name = name.contents[0];\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (typeof name === \"undefined\") {\n\t        return error(\"invalid function definition. missing name.\");\n\t      } else if (typeof args === \"undefined\") {\n\t        return error(\"invalid function definition. missing arguments or return value.\");\n\t      }\n\t    }).call(this);\n\t    sibilant.docs.record(\"function\", sibilant.macros.searchPath[0], name, node);\n\t    return (function() {\n\t      if (outputFormatter(transpile(name)).match((new RegExp(\"\\\\.\", undefined)))) {\n\t        return {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 173,\n\t          col: 10,\n\t          contents: [ {\n\t            file: \"src/macros/lambda.sibilant\",\n\t            token: \"assign\",\n\t            type: \"literal\",\n\t            line: 173,\n\t            col: 11,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, name, {\n\t            file: \"src/macros/lambda.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 173,\n\t            col: 24,\n\t            contents: [ {\n\t              file: \"src/macros/lambda.sibilant\",\n\t              token: \"lambda\",\n\t              type: \"literal\",\n\t              line: 173,\n\t              col: 25,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, {\n\t              name: name,\n\t              args: args,\n\t              node: node,\n\t              body: body\n\t            } ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/lambda.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 173,\n\t              col: 23,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          } ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      } else {\n\t        return {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 174,\n\t          col: 10,\n\t          contents: [ {\n\t            file: \"src/macros/lambda.sibilant\",\n\t            token: \"var\",\n\t            type: \"literal\",\n\t            line: 174,\n\t            col: 11,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, name, {\n\t            file: \"src/macros/lambda.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 174,\n\t            col: 21,\n\t            contents: [ {\n\t              file: \"src/macros/lambda.sibilant\",\n\t              token: \"lambda\",\n\t              type: \"literal\",\n\t              line: 174,\n\t              col: 22,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, {\n\t              name: name,\n\t              args: args,\n\t              node: node,\n\t              body: body\n\t            } ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/lambda.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 174,\n\t              col: 20,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          } ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.call = (function call$(fnName, args) {\n\t    /* call src/macros/lambda.sibilant:185:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return (function() {\n\t      if (any__QUERY(args, (function() {\n\t        /* src/macros/lambda.sibilant:186:20 */\n\t      \n\t        return node__QUERY(arguments[0], \"dots\");\n\t      }))) {\n\t        return macros.apply(fnName, macros.list.apply(this, args));\n\t      } else {\n\t        return [ transpile(fnName), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.send = (function send$(object, method, args) {\n\t    /* send src/macros/lambda.sibilant:194:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return [ transpile(object), \".\", transpile(method), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.apply = (function apply$(fn, arglist) {\n\t    /* apply src/macros/lambda.sibilant:206:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lambda.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 207,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 207,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"apply\",\n\t          type: \"literal\",\n\t          line: 207,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, fn, {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"this\",\n\t        type: \"literal\",\n\t        line: 207,\n\t        col: 20,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 207,\n\t          col: 19,\n\t          contents: []\n\t        } ]\n\t      }, arglist ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.scoped = (function scoped$(body) {\n\t    /* scoped src/macros/lambda.sibilant:213:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/lambda.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 214,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 214,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"call\",\n\t          type: \"literal\",\n\t          line: 214,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 214,\n\t        col: 15,\n\t        contents: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"lambda\",\n\t          type: \"literal\",\n\t          line: 214,\n\t          col: 16,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          node: this,\n\t          args: []\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 214,\n\t          col: 14,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"this\",\n\t        type: \"literal\",\n\t        line: 214,\n\t        col: 54,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 214,\n\t          col: 53,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core._scopedWithoutReturn = (function _scopedWithoutReturn$(body) {\n\t    /* *scoped-without-return src/macros/lambda.sibilant:217:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(function() {\", indent.apply(this, body), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core._scopedWithoutSource = (function _scopedWithoutSource$(body) {\n\t    /* *scoped-without-source src/macros/lambda.sibilant:221:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/lambda.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 222,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"*scoped-without-return\",\n\t        type: \"literal\",\n\t        line: 222,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 222,\n\t        col: 32,\n\t        contents: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \"do\",\n\t          type: \"literal\",\n\t          line: 222,\n\t          col: 33,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 222,\n\t          col: 31,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.arguments = (function arguments$(args) {\n\t    /* arguments src/macros/lambda.sibilant:227:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/lambda.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 228,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"Array.prototype.slice.call\",\n\t        type: \"literal\",\n\t        line: 228,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"arguments\",\n\t        type: \"literal\",\n\t        line: 228,\n\t        col: 36,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 228,\n\t          col: 35,\n\t          contents: []\n\t        } ]\n\t      } ].concat(args),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.argument = (function argument$(index) {\n\t    /* argument src/macros/lambda.sibilant:234:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lambda.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 235,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        line: 235,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lambda.sibilant\",\n\t        token: \"arguments\",\n\t        type: \"literal\",\n\t        line: 235,\n\t        col: 13,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lambda.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 235,\n\t          col: 12,\n\t          contents: []\n\t        } ]\n\t      }, index ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.list = (function list$(args) {\n\t    /* list src/macros/lists.sibilant:11:7 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var argSegments = [];\n\t    return (function() {\n\t      if (0 === args.length) {\n\t        return \"[]\";\n\t      } else {\n\t        var simpleList = (function simpleList$(args) {\n\t          /* simple-list src/macros/lists.sibilant:15:12 */\n\t        \n\t          return [ \"[ \", interleave(\", \", map(args, (function(arg) {\n\t            /* src/macros/lists.sibilant:16:50 */\n\t          \n\t            return arg.transpiled;\n\t          }))), \" ]\" ];\n\t        });\n\t        args.forEach((function(arg) {\n\t          /* src/macros/lists.sibilant:18:27 */\n\t        \n\t          return (function() {\n\t            if (node__QUERY(arg, \"dots\")) {\n\t              return argSegments.push({ transpiled: transpile(arg) });\n\t            } else if ((argSegments.slice(-1)[0] && \"object\" === typeof argSegments.slice(-1)[0] && \"Array\" === argSegments.slice(-1)[0].constructor.name)) {\n\t              return argSegments.slice(-1)[0].push({ transpiled: transpile(arg) });\n\t            } else {\n\t              return argSegments.push([ { transpiled: transpile(arg) } ]);\n\t            }\n\t          }).call(this);\n\t        }));\n\t        argSegments = map(argSegments, (function(segment) {\n\t          /* src/macros/lists.sibilant:24:38 */\n\t        \n\t          return (function() {\n\t            if ((segment && \"object\" === typeof segment && \"Array\" === segment.constructor.name)) {\n\t              return simpleList(segment);\n\t            } else {\n\t              return segment.transpiled;\n\t            }\n\t          }).call(this);\n\t        }));\n\t        return (function() {\n\t          if (1 === argSegments.length) {\n\t            return argSegments[0];\n\t          } else {\n\t            return [ argSegments[0], \".concat(\", interleave(\", \", argSegments.slice(1)), \")\" ];\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.length = (function length$(arr) {\n\t    /* length src/macros/lists.sibilant:36:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 37,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        line: 37,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\"file\":\"src/macros/lists.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":37,\"col\":18,\"contents\":[{\"file\":\"src/macros/lists.sibilant\",\"token\":\"length\",\"type\":\"literal\",\"line\":37,\"col\":19,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/lists.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":37,\"col\":17,\"contents\":[]}]} ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.first = (function first$(arr) {\n\t    /* first src/macros/lists.sibilant:43:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 43,\n\t      col: 20,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        line: 43,\n\t        col: 21,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        line: 43,\n\t        col: 30,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 43,\n\t          col: 29,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.second = (function second$(arr) {\n\t    /* second src/macros/lists.sibilant:48:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 48,\n\t      col: 21,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        line: 48,\n\t        col: 22,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        line: 48,\n\t        col: 31,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 48,\n\t          col: 30,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.third = (function third$(arr) {\n\t    /* third src/macros/lists.sibilant:53:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 53,\n\t      col: 20,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        line: 53,\n\t        col: 21,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"2\",\n\t        type: \"number\",\n\t        line: 53,\n\t        col: 30,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 53,\n\t          col: 29,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.rest = (function rest$(arr) {\n\t    /* rest src/macros/lists.sibilant:59:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 59,\n\t      col: 19,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 59,\n\t        col: 20,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"slice\",\n\t          type: \"literal\",\n\t          line: 59,\n\t          col: 21,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        line: 59,\n\t        col: 32,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 59,\n\t          col: 31,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.last = (function last$(arr) {\n\t    /* last src/macros/lists.sibilant:64:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 64,\n\t      col: 19,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"first\",\n\t        type: \"literal\",\n\t        line: 64,\n\t        col: 20,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 64,\n\t        col: 26,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          line: 64,\n\t          col: 27,\n\t          contents: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \"slice\",\n\t            type: \"literal\",\n\t            line: 64,\n\t            col: 28,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, arr, {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          line: 64,\n\t          col: 39,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 64,\n\t            col: 38,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 64,\n\t          col: 25,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.cons = (function cons$(first, rest) {\n\t    /* cons src/macros/lists.sibilant:74:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 75,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        line: 75,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 76,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"list\",\n\t          type: \"literal\",\n\t          line: 76,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, first ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 75,\n\t          col: 13,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 76,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 77,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          line: 77,\n\t          col: 10,\n\t          contents: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \"concat\",\n\t            type: \"literal\",\n\t            line: 77,\n\t            col: 11,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, rest ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 76,\n\t          col: 22,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 77,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.append = (function append$(list, additional) {\n\t    /* append src/macros/lists.sibilant:83:0 */\n\t  \n\t    var additional = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 84,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 84,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"concat\",\n\t          type: \"literal\",\n\t          line: 84,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, list, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 84,\n\t        col: 23,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"list\",\n\t          type: \"literal\",\n\t          line: 84,\n\t          col: 24,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(additional),\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 84,\n\t          col: 22,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.each = (function each$(item, array, body) {\n\t    /* each src/macros/lists.sibilant:97:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var node = this,\n\t        args = (function() {\n\t      if (node__QUERY(item, \"expression\")) {\n\t        return item;\n\t      } else {\n\t        return [ item ];\n\t      }\n\t    }).call(this);\n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 100,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"|>\",\n\t        type: \"otherChar\",\n\t        line: 100,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, array, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 101,\n\t        col: 12,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          line: 101,\n\t          col: 13,\n\t          contents: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \"for-each\",\n\t            type: \"literal\",\n\t            line: 101,\n\t            col: 14,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 101,\n\t          col: 23,\n\t          contents: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \"lambda\",\n\t            type: \"literal\",\n\t            line: 101,\n\t            col: 24,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            node: node,\n\t            args: args,\n\t            body: body\n\t          } ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 101,\n\t            col: 22,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 100,\n\t          col: 18,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"            \",\n\t          type: \"whitespace\",\n\t          line: 101,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.includes__QUERY = (function includes__QUERY$(haystack, needle) {\n\t    /* includes? src/macros/lists.sibilant:107:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 108,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        line: 108,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, haystack, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 108,\n\t        col: 24,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          line: 108,\n\t          col: 25,\n\t          contents: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \"index-of\",\n\t            type: \"literal\",\n\t            line: 108,\n\t            col: 26,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, needle ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 108,\n\t          col: 23,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 108,\n\t        col: 44,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          line: 108,\n\t          col: 45,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          line: 108,\n\t          col: 48,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 108,\n\t            col: 47,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 108,\n\t          col: 43,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.excludes__QUERY = (function excludes__QUERY$(haystack, needle) {\n\t    /* excludes? src/macros/lists.sibilant:114:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/lists.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 115,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        line: 115,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, haystack, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 115,\n\t        col: 24,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          line: 115,\n\t          col: 25,\n\t          contents: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \"index-of\",\n\t            type: \"literal\",\n\t            line: 115,\n\t            col: 26,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, needle ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 115,\n\t          col: 23,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/lists.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 115,\n\t        col: 44,\n\t        contents: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          line: 115,\n\t          col: 45,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          line: 115,\n\t          col: 47,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/lists.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 115,\n\t            col: 46,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/lists.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 115,\n\t          col: 43,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.while = (function while$(condition, body) {\n\t    /* while src/macros/loops.sibilant:8:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    var symbol = generateSymbol(\"while\");\n\t    return {\n\t      file: \"src/macros/loops.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 10,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/loops.sibilant\",\n\t        token: \"*scoped-without-source\",\n\t        type: \"literal\",\n\t        line: 10,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/loops.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 11,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/loops.sibilant\",\n\t          token: \"var\",\n\t          type: \"literal\",\n\t          line: 11,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, symbol ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/loops.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 10,\n\t          col: 31,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/loops.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 11,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        type: \"output\",\n\t        contents: [ \"while (\", transpile(condition), \") {\", indent({\n\t          file: \"src/macros/loops.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 14,\n\t          col: 35,\n\t          contents: [ {\n\t            file: \"src/macros/loops.sibilant\",\n\t            token: \"assign\",\n\t            type: \"literal\",\n\t            line: 14,\n\t            col: 36,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, symbol, {\n\t            file: \"src/macros/loops.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 14,\n\t            col: 51,\n\t            contents: [ {\n\t              file: \"src/macros/loops.sibilant\",\n\t              token: \"*scoped-without-source\",\n\t              type: \"literal\",\n\t              line: 14,\n\t              col: 52,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ].concat(body),\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/loops.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 14,\n\t              col: 50,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          } ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }), \"}\" ]\n\t      }, symbol ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.until = (function until$(condition, body) {\n\t    /* until src/macros/loops.sibilant:27:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      file: \"src/macros/loops.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 28,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/loops.sibilant\",\n\t        token: \"while\",\n\t        type: \"literal\",\n\t        line: 28,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/loops.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 28,\n\t        col: 15,\n\t        contents: [ {\n\t          file: \"src/macros/loops.sibilant\",\n\t          token: \"not\",\n\t          type: \"literal\",\n\t          line: 28,\n\t          col: 16,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, condition ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/loops.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 28,\n\t          col: 14,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.macro = (function macro$(name, args, body) {\n\t    /* macro src/macros/macros.sibilant:12:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var nameTr = outputFormatter(transpile(name)),\n\t        options = {\n\t      name: name,\n\t      args: args,\n\t      node: this\n\t    },\n\t        js = outputFormatter(transpile({\n\t      file: \"src/macros/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 15,\n\t      col: 18,\n\t      contents: [ {\n\t        file: \"src/macros/macros.sibilant\",\n\t        token: \"lambda\",\n\t        type: \"literal\",\n\t        line: 15,\n\t        col: 19,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, options ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }));\n\t    debug__BANG(2, js);\n\t    sibilant.docs.record(\"macro\", sibilant.macros.searchPath[0], name, this);\n\t    var evaledJs = (function() {\n\t      try {\n\t        return eval(js);\n\t      } catch (e) {\n\t        console.log(e.message);\n\t        console.log(red(e.stack.split(\"\\n\")[1]));\n\t        return console.log((\"error in parsing macro \" + sibilant.prettyPrint(name) + \":\\n\" + js));\n\t      }\n\t    }).call(this);\n\t    sibilant.macros.namespace[nameTr] = evaledJs;\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core.meta = (function meta$(body) {\n\t    /* meta src/macros/macros.sibilant:42:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var js = outputFormatter(transpile(sibilant.macros.namespaces.core.scoped.apply(this, body)));\n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(js);\n\t      }\n\t    }).call(this);\n\t    return outputFormatter(eval(js));\n\t  });\n\t  sibilant.macros.namespaces.core.aliasMacro = (function aliasMacro$(currentMacroName, newMacroName) {\n\t    /* alias-macro src/macros/macros.sibilant:50:0 */\n\t  \n\t    var currentMacroName = outputFormatter(transpile(currentMacroName)),\n\t        newMacroName = outputFormatter(transpile(newMacroName));\n\t    sibilant.macros.namespace[newMacroName] = sibilant.macros.namespace[currentMacroName];\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.deleteMacro = (function deleteMacro$(macroNames) {\n\t    /* delete-macro src/macros/macros.sibilant:61:0 */\n\t  \n\t    var macroNames = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    macroNames.forEach((function(macroName) {\n\t      /* src/macros/macros.sibilant:62:7 */\n\t    \n\t      return delete sibilant.macros.namespace[outputFormatter(transpile(macroName))];\n\t    }));\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.delmacro = sibilant.macros.namespaces.core.deleteMacro;\n\t  sibilant.macros.namespaces.core.renameMacro = (function renameMacro$(currentMacroName, newMacroName) {\n\t    /* rename-macro src/macros/macros.sibilant:74:0 */\n\t  \n\t    sibilant.macros.namespaces.core.aliasMacro(currentMacroName, newMacroName);\n\t    sibilant.macros.namespaces.core.deleteMacro(currentMacroName);\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.importNamespace = (function importNamespace$(namespace) {\n\t    /* import-namespace src/macros/macros.sibilant:80:0 */\n\t  \n\t    var namespaceAsString = outputFormatter(transpile(namespace));\n\t    (function() {\n\t      if (!(sibilant.macros.namespaces.hasOwnProperty(namespaceAsString))) {\n\t        return sibilant.macros.namespaces[namespaceAsString] = {  };\n\t      }\n\t    }).call(this);\n\t    sibilant.macros.searchPath.unshift(namespaceAsString);\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core.namespace = (function namespace$(namespace) {\n\t    /* namespace src/macros/macros.sibilant:88:0 */\n\t  \n\t    sibilant.macros.namespaces.core.importNamespace(namespace);\n\t    sibilant.macros.namespace = sibilant.macros.namespaces[outputFormatter(transpile(namespace))];\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core.quote = (function quote$(content) {\n\t    /* quote src/macros/macros.sibilant:95:0 */\n\t  \n\t    var unquotes = findUnquotes(content);\n\t    return (function() {\n\t      if (typeof content === \"string\") {\n\t        return (\"\\\"\" + qescape(content) + \"\\\"\");\n\t      } else if (typeof content === \"number\") {\n\t        return sibilant.macros.namespaces.core.quote(content.toString());\n\t      } else if (node__QUERY(content, \"literal\", \"otherChar\")) {\n\t        return [ \"\\\"\", transpile(content), \"\\\"\" ];\n\t      } else if (Object.keys(unquotes).length) {\n\t        return replace__BANG(content, unquotes);\n\t      } else if (node__QUERY(content, \"expression\")) {\n\t        return [ \"\\\"\", mapNode(transpile(content), qescape), \"\\\"\" ];\n\t      } else if (node__QUERY(content, \"bracket\")) {\n\t        return sibilant.macros.namespaces.core.list.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n\t      } else if (node__QUERY(content, \"brace\")) {\n\t        return sibilant.macros.namespaces.core.hash.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n\t      } else {\n\t        console.log((\"unknown content\" + inspect(content)));\n\t        return content;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.docs = (function docs$(options) {\n\t    /* docs src/macros/macros.sibilant:118:0 */\n\t  \n\t    var options = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var optionsString = undefined,\n\t        optionsHash = {  };\n\t    (function() {\n\t      if (1 === (options.length % 2)) {\n\t        return (function() {\n\t          if ((node__QUERY(options[0], \"string\") || typeof options[0] === \"string\")) {\n\t            return optionsString = options.shift();\n\t          } else if ((node__QUERY(options.slice(-1)[0], \"string\") || typeof options.slice(-1)[0] === \"string\")) {\n\t            return optionsString = options.pop();\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t    bulkMap(options, (function(key, value) {\n\t      /* src/macros/macros.sibilant:129:23 */\n\t    \n\t      return optionsHash[outputFormatter(transpile(key))] = value;\n\t    }));\n\t    [ \"examples\", \"references\" ].forEach((function(listAttribute) {\n\t      /* src/macros/macros.sibilant:132:5 */\n\t    \n\t      return (function() {\n\t        if ((optionsHash.hasOwnProperty(listAttribute) && node__QUERY(optionsHash[listAttribute], \"bracket\"))) {\n\t          return optionsHash[listAttribute] = optionsHash[listAttribute].contents;\n\t        }\n\t      }).call(this);\n\t    }));\n\t    (function() {\n\t      if (optionsHash.hasOwnProperty(\"example\")) {\n\t        (function() {\n\t          if (optionsHash.hasOwnProperty(\"examples\")) {\n\t            return error(\"please provide example OR examples, not both\");\n\t          }\n\t        }).call(this);\n\t        optionsHash.examples = [ optionsHash.example ];\n\t        return delete optionsHash.example;\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (optionsHash.hasOwnProperty(\"tags\")) {\n\t        return optionsHash.tags = eval(outputFormatter(transpile(sibilant.macros.namespaces.core.quote(optionsHash.tags))));\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (node__QUERY(optionsString, \"string\")) {\n\t        return optionsHash.docString = eval(outputFormatter(transpile(optionsString)));\n\t      } else if (typeof optionsString === \"string\") {\n\t        return optionsHash.docString = optionsString;\n\t      }\n\t    }).call(this);\n\t    sibilant.docs.lastDoc = optionsHash;\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core[\"+\"] = (function $$(args) {\n\t    /* + src/macros/math.sibilant:8:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.concat = sibilant.macros.namespaces.core[\"+\"];\n\t  sibilant.macros.namespaces.core[\"-\"] = (function $$(args) {\n\t    /* - src/macros/math.sibilant:16:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" - \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core._ = (function _$(args) {\n\t    /* * src/macros/math.sibilant:22:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" * \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"/\"] = (function $$(args) {\n\t    /* / src/macros/math.sibilant:29:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" / \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.mod = (function mod$(args) {\n\t    /* mod src/macros/math.sibilant:35:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" % \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.incrBy = (function incrBy$(item, increment) {\n\t    /* incr-by src/macros/math.sibilant:42:0 */\n\t  \n\t    return [ transpile(item), \" += \", transpile(increment) ];\n\t  });\n\t  sibilant.macros.namespaces.core.incr = (function incr$(item) {\n\t    /* incr src/macros/math.sibilant:48:0 */\n\t  \n\t    return [ \"((\", transpile(item), \")++)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.decr = (function decr$(item) {\n\t    /* decr src/macros/math.sibilant:55:0 */\n\t  \n\t    return [ \"((\", transpile(item), \")--)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.or = (function or$(args) {\n\t    /* or src/macros/math.sibilant:61:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" || \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.and = (function and$(args) {\n\t    /* and src/macros/math.sibilant:69:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (function() {\n\t      if (1 === args.length) {\n\t        return transpile(args[0]);\n\t      } else {\n\t        return {\n\t          file: \"src/macros/math.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 72,\n\t          col: 12,\n\t          contents: [ {\n\t            file: \"src/macros/math.sibilant\",\n\t            token: \"parens\",\n\t            type: \"literal\",\n\t            line: 72,\n\t            col: 13,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ].concat(interleave(\" && \", map(args, transpile))),\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.not = (function not$(exp) {\n\t    /* not src/macros/math.sibilant:79:0 */\n\t  \n\t    return [ \"!\", {\n\t      file: \"src/macros/math.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 80,\n\t      col: 13,\n\t      contents: [ {\n\t        file: \"src/macros/math.sibilant\",\n\t        token: \"parens\",\n\t        type: \"literal\",\n\t        line: 80,\n\t        col: 14,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, exp ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    } ];\n\t  });\n\t  sibilant.macros.namespaces.core.asBoolean = (function asBoolean$(expr) {\n\t    /* as-boolean src/macros/math.sibilant:88:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/math.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 89,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/math.sibilant\",\n\t        token: \"parens\",\n\t        type: \"literal\",\n\t        line: 89,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, \"!!\", {\n\t        file: \"src/macros/math.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 89,\n\t        col: 22,\n\t        contents: [ {\n\t          file: \"src/macros/math.sibilant\",\n\t          token: \"parens\",\n\t          type: \"literal\",\n\t          line: 89,\n\t          col: 23,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, expr ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/math.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 89,\n\t          col: 21,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.asNumber = (function asNumber$(expr) {\n\t    /* as-number src/macros/math.sibilant:96:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/math.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 96,\n\t      col: 25,\n\t      contents: [ {\n\t        file: \"src/macros/math.sibilant\",\n\t        token: \"Number\",\n\t        type: \"literal\",\n\t        line: 96,\n\t        col: 26,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, expr ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.statement__BANG = (function statement__BANG$(node) {\n\t    /* statement! src/macros/misc.sibilant:3:0 */\n\t  \n\t    return (function() {\n\t      if (emptyNode__QUERY(transpiled)) {\n\t        return undefined;\n\t      } else {\n\t        return [ node, \";\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.new = (function new$(constructor, args) {\n\t    /* new src/macros/misc.sibilant:13:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(new \", {\n\t      file: \"src/macros/misc.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 14,\n\t      col: 17,\n\t      contents: [ {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"call\",\n\t        type: \"literal\",\n\t        line: 14,\n\t        col: 18,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, constructor ].concat(args),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }, \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.typeof = (function typeof$(thing) {\n\t    /* typeof src/macros/misc.sibilant:20:0 */\n\t  \n\t    return [ \"typeof \", transpile(thing) ];\n\t  });\n\t  sibilant.macros.namespaces.core.comment = (function comment$(contents) {\n\t    /* comment src/macros/misc.sibilant:26:0 */\n\t  \n\t    var contents = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return map(contents, (function(content) {\n\t      /* src/macros/misc.sibilant:27:21 */\n\t    \n\t      return [ \"// \", recurseMap(transpile(content), (function(item) {\n\t        /* src/macros/misc.sibilant:29:36 */\n\t      \n\t        return (item) ? outputFormatter(transpile(item)).replace((new RegExp(\"\\n\", \"g\")), \"\\n// \") : null;\n\t      })) ];\n\t    }));\n\t  });\n\t  sibilant.macros.namespaces.core.logPretty = (function logPretty$(label, arg) {\n\t    /* log-pretty src/macros/misc.sibilant:42:0 */\n\t  \n\t    var node = this;\n\t    (function() {\n\t      if (typeof arg === \"undefined\") {\n\t        arg = label;\n\t        return label = [ \"\\\"\", prettify(label, false), \"\\\"\" ];\n\t      }\n\t    }).call(this);\n\t    return {\n\t      file: \"src/macros/misc.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 47,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"console.log\",\n\t        type: \"literal\",\n\t        line: 47,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 47,\n\t        col: 21,\n\t        contents: [ {\n\t          file: \"src/macros/misc.sibilant\",\n\t          token: \"concat\",\n\t          type: \"literal\",\n\t          line: 47,\n\t          col: 22,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, [ \"\\\"\", node.file, \":\", node.line, \"\\\"\" ], {\n\t          file: \"src/macros/misc.sibilant\",\n\t          token: \"\\\" \\\"\",\n\t          type: \"string\",\n\t          line: 47,\n\t          col: 66,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/misc.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 47,\n\t            col: 65,\n\t            contents: []\n\t          } ]\n\t        }, label, {\n\t          file: \"src/macros/misc.sibilant\",\n\t          token: \"\\\" = \\\"\",\n\t          type: \"string\",\n\t          line: 47,\n\t          col: 77,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/misc.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 47,\n\t            col: 76,\n\t            contents: []\n\t          } ]\n\t        }, {\n\t          file: \"src/macros/misc.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 47,\n\t          col: 83,\n\t          contents: [ {\n\t            file: \"src/macros/misc.sibilant\",\n\t            token: \"prettify\",\n\t            type: \"literal\",\n\t            line: 47,\n\t            col: 84,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, arg ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/misc.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 47,\n\t            col: 82,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/misc.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 47,\n\t          col: 20,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.prettyLog = sibilant.macros.namespaces.core.logPretty;\n\t  sibilant.macros.namespaces.core.throw = (function throw$(error) {\n\t    /* throw src/macros/misc.sibilant:55:0 */\n\t  \n\t    return [ \"throw \", transpile(error) ];\n\t  });\n\t  sibilant.macros.namespaces.core.try = (function try$(tryblock, catchblock) {\n\t    /* try src/macros/misc.sibilant:60:0 */\n\t  \n\t    return [ \"(function() {\", indent([ \"try {\", indent({\n\t      file: \"src/macros/misc.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 63,\n\t      col: 26,\n\t      contents: [ {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        line: 63,\n\t        col: 27,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, tryblock ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"} catch (e) {\", indent({\n\t      file: \"src/macros/misc.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 65,\n\t      col: 26,\n\t      contents: [ {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        line: 65,\n\t        col: 27,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, catchblock ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.withState = (function withState$(k, v, body) {\n\t    /* with-state src/macros/misc.sibilant:69:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var state = sibilant.state,\n\t        $2 = map([ k, v ], (function() {\n\t      /* src/macros/misc.sibilant:71:41 */\n\t    \n\t      return outputFormatter(transpile(arguments[0]));\n\t    })),\n\t        key = $2[0],\n\t        value = $2[1],\n\t        $2 = undefined,\n\t        before = state[key];\n\t    state[key] = value;\n\t    var returnValue = interleave(\"\\n\", map(body, transpile));\n\t    state[key] = before;\n\t    return returnValue;\n\t  });\n\t  sibilant.macros.namespaces.core.join = (function join$(arr, glue) {\n\t    /* join src/macros/misc.sibilant:87:0 */\n\t  \n\t    (function() {\n\t      if ((typeof glue !== \"undefined\" && typeof arr === \"undefined\")) {\n\t        arr = glue;\n\t        return glue = undefined;\n\t      }\n\t    }).call(this);\n\t    return {\n\t      file: \"src/macros/misc.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 90,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 90,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/misc.sibilant\",\n\t          token: \"join\",\n\t          type: \"literal\",\n\t          line: 90,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arr, (glue || \"\\\"\\\"\") ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.parens = (function parens$(contents) {\n\t    /* parens src/macros/misc.sibilant:92:0 */\n\t  \n\t    var contents = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\" ].concat(contents, [ \")\" ]);\n\t  });\n\t  sibilant.macros.namespaces.core.sourceMappingUrl = (function sourceMappingUrl$(url) {\n\t    /* source-mapping-url src/macros/misc.sibilant:99:0 */\n\t  \n\t    return [ \"//# sourceMappingURL=\", eval(outputFormatter(transpile(url))), \"\\n\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.require__BANG = (function require__BANG$(requires) {\n\t    /* require! src/macros/misc.sibilant:102:0 */\n\t  \n\t    var requires = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/misc.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 103,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"var\",\n\t        type: \"literal\",\n\t        line: 103,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(inject([], requires, (function(pairs, node) {\n\t        /* src/macros/misc.sibilant:104:25 */\n\t      \n\t        return pairs.concat((function() {\n\t          if ((0 === (pairs.length % 2) && node__QUERY(node, \"tick\", \"string\"))) {\n\t            return [ mergeInto(clone(node), {\n\t              token: outputFormatter(transpile(node)).slice(1, -1),\n\t              contents: [],\n\t              type: \"literal\"\n\t            }), {\n\t              file: \"src/macros/misc.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 114,\n\t              col: 33,\n\t              contents: [ {\n\t                file: \"src/macros/misc.sibilant\",\n\t                token: \"require\",\n\t                type: \"literal\",\n\t                line: 114,\n\t                col: 34,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, node ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ];\n\t          } else if (1 === (pairs.length % 2)) {\n\t            return [ {\n\t              file: \"src/macros/misc.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 117,\n\t              col: 36,\n\t              contents: [ {\n\t                file: \"src/macros/misc.sibilant\",\n\t                token: \"require\",\n\t                type: \"literal\",\n\t                line: 117,\n\t                col: 37,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, node ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ];\n\t          } else {\n\t            return [ node ];\n\t          }\n\t        }).call(this));\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.export = (function export$(localVars) {\n\t    /* export src/macros/misc.sibilant:122:0 */\n\t  \n\t    var localVars = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var pairs = localVars.reduce((function(acc, value) {\n\t      /* src/macros/misc.sibilant:124:19 */\n\t    \n\t      return acc.concat([ sibilant.macros.namespaces.core.quote(value), value ]);\n\t    }), []);\n\t    return {\n\t      file: \"src/macros/misc.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 126,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"set\",\n\t        type: \"literal\",\n\t        line: 126,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/misc.sibilant\",\n\t        token: \"exports\",\n\t        type: \"literal\",\n\t        line: 126,\n\t        col: 13,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/misc.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 126,\n\t          col: 12,\n\t          contents: []\n\t        } ]\n\t      } ].concat(pairs),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.emptyList = (function emptyList$() {\n\t    /* empty-list src/macros/misc.sibilant:128:0 */\n\t  \n\t    return \"null\";\n\t  });\n\t  sibilant.macros.namespaces.core.debug = (function debug$(val) {\n\t    /* debug src/macros/misc.sibilant:131:0 */\n\t  \n\t    sibilant.debug = eval(outputFormatter(transpile(val)));\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.dots = (function dots$(contents) {\n\t    /* dots src/macros/misc.sibilant:135:0 */\n\t  \n\t    var contents = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return transpile(contents);\n\t  });\n\t  sibilant.macros.namespaces.core.include = (function include$(files) {\n\t    /* include src/macros/misc.sibilant:150:0 */\n\t  \n\t    var files = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(files.map((function(file) {\n\t      /* src/macros/misc.sibilant:152:17 */\n\t    \n\t      return sibilant.withDefaultSearchPath((function() {\n\t        /* src/macros/misc.sibilant:154:20 */\n\t      \n\t        return sibilant.include(eval(outputFormatter(transpile(file))));\n\t      }));\n\t    })), \"\\n\");\n\t  });\n\t  sibilant.macros.namespaces.core.pipe = (function pipe$(calls) {\n\t    /* pipe src/macros/pipe.sibilant:25:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inject(undefined, calls, (function(value, item) {\n\t      /* src/macros/pipe.sibilant:27:15 */\n\t    \n\t      return (function() {\n\t        if (typeof value === \"undefined\") {\n\t          return item;\n\t        } else {\n\t          return (function() {\n\t            /* src/macros/pipe.sibilant:29:21 */\n\t          \n\t            var cloned = (function() {\n\t              if (node__QUERY(item, \"literal\", \"dots\")) {\n\t                return {\n\t                  file: \"src/macros/pipe.sibilant\",\n\t                  token: \"(\",\n\t                  type: \"expression\",\n\t                  line: 31,\n\t                  col: 39,\n\t                  contents: [ item ],\n\t                  precedingIgnored: [],\n\t                  specials: 0,\n\t                  end: undefined,\n\t                  closed: true,\n\t                  closingIgnored: []\n\t                };\n\t              } else {\n\t                return clone(item);\n\t              }\n\t            }).call(this);\n\t            var placeholder = detect(cloned.contents, (function(node) {\n\t              /* src/macros/pipe.sibilant:35:47 */\n\t            \n\t              return (node__QUERY(node, \"otherChar\") && \"#\" === node.token);\n\t            })),\n\t                placeholderIndex = cloned.contents.indexOf(placeholder),\n\t                placeholderBoundaries = (function() {\n\t              if (placeholder) {\n\t                return [ placeholderIndex, (1 + placeholderIndex) ];\n\t              } else {\n\t                return [ 1, 1 ];\n\t              }\n\t            }).call(this);\n\t            return mergeInto(cloned, { contents: cloned.contents.slice(0, placeholderBoundaries[0]).concat([ value ], cloned.contents.slice(placeholderBoundaries[1])) });\n\t          }).call(this);\n\t        }\n\t      }).call(this);\n\t    }));\n\t  });\n\t  sibilant.macros.namespaces.core[\"|>\"] = sibilant.macros.namespaces.core.pipe;\n\t  sibilant.macros.namespaces.core.pipeThunk = (function pipeThunk$(calls) {\n\t    /* pipe-thunk src/macros/pipe.sibilant:55:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/pipe.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 55,\n\t      col: 30,\n\t      contents: [ {\n\t        file: \"src/macros/pipe.sibilant\",\n\t        token: \"thunk\",\n\t        type: \"literal\",\n\t        line: 55,\n\t        col: 31,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, { node: this }, {\n\t        file: \"src/macros/pipe.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 55,\n\t        col: 52,\n\t        contents: [ {\n\t          file: \"src/macros/pipe.sibilant\",\n\t          token: \"pipe\",\n\t          type: \"literal\",\n\t          line: 55,\n\t          col: 53,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/pipe.sibilant\",\n\t          token: \"#0\",\n\t          type: \"argPlaceholder\",\n\t          line: 55,\n\t          col: 58,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/pipe.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 55,\n\t            col: 57,\n\t            contents: []\n\t          } ]\n\t        } ].concat(calls),\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/pipe.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 55,\n\t          col: 51,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"#->\"] = sibilant.macros.namespaces.core.pipeThunk;\n\t  sibilant.macros.namespaces.core.tap = (function tap$(thing, body) {\n\t    /* tap src/macros/pipe.sibilant:65:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      file: \"src/macros/pipe.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 66,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/pipe.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 66,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/pipe.sibilant\",\n\t          token: \"#>\",\n\t          type: \"otherChar\",\n\t          line: 66,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/pipe.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 66,\n\t          col: 13,\n\t          contents: [ {\n\t            file: \"src/macros/pipe.sibilant\",\n\t            token: \"|>\",\n\t            type: \"otherChar\",\n\t            line: 66,\n\t            col: 14,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/pipe.sibilant\",\n\t            token: \"#0\",\n\t            type: \"argPlaceholder\",\n\t            line: 66,\n\t            col: 17,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/pipe.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 66,\n\t              col: 16,\n\t              contents: []\n\t            } ]\n\t          } ].concat(body),\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/pipe.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 66,\n\t            col: 12,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, {\n\t          file: \"src/macros/pipe.sibilant\",\n\t          token: \"#0\",\n\t          type: \"argPlaceholder\",\n\t          line: 66,\n\t          col: 30,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/pipe.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 66,\n\t            col: 29,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, thing ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.distribute = (function distribute$(thing, macro, alternatives) {\n\t    /* distribute src/macros/pipe.sibilant:69:0 */\n\t  \n\t    var alternatives = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return {\n\t      file: \"src/macros/pipe.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 70,\n\t      col: 8,\n\t      contents: [ macro ].concat(map(alternatives, (function(alt) {\n\t        /* src/macros/pipe.sibilant:70:38 */\n\t      \n\t        return (function() {\n\t          if (node__QUERY(alt, \"expression\")) {\n\t            return {\n\t              file: \"src/macros/pipe.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 72,\n\t              col: 45,\n\t              contents: [ {\n\t                file: \"src/macros/pipe.sibilant\",\n\t                token: \"|>\",\n\t                type: \"otherChar\",\n\t                line: 72,\n\t                col: 46,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, thing, alt ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            };\n\t          } else {\n\t            return {\n\t              file: \"src/macros/pipe.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 73,\n\t              col: 45,\n\t              contents: [ {\n\t                file: \"src/macros/pipe.sibilant\",\n\t                token: \"|>\",\n\t                type: \"otherChar\",\n\t                line: 73,\n\t                col: 46,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, thing ].concat(alt),\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            };\n\t          }\n\t        }).call(this);\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.zero__QUERY = (function zero__QUERY$(item) {\n\t    /* zero? src/macros/predicates.sibilant:5:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 5,\n\t      col: 21,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        line: 5,\n\t        col: 22,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, item, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        line: 5,\n\t        col: 30,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 5,\n\t          col: 29,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.empty__QUERY = (function empty__QUERY$(arr) {\n\t    /* empty? src/macros/predicates.sibilant:11:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 12,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        line: 12,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        line: 12,\n\t        col: 11,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 12,\n\t          col: 10,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 12,\n\t        col: 13,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"length\",\n\t          type: \"literal\",\n\t          line: 12,\n\t          col: 14,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, arr ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 12,\n\t          col: 12,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.odd__QUERY = (function odd__QUERY$(number) {\n\t    /* odd? src/macros/predicates.sibilant:18:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 19,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        line: 19,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        line: 19,\n\t        col: 11,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 19,\n\t          col: 10,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 19,\n\t        col: 13,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"mod\",\n\t          type: \"literal\",\n\t          line: 19,\n\t          col: 14,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, number, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"2\",\n\t          type: \"number\",\n\t          line: 19,\n\t          col: 26,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 19,\n\t            col: 25,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 19,\n\t          col: 12,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.even__QUERY = (function even__QUERY$(number) {\n\t    /* even? src/macros/predicates.sibilant:25:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 26,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        line: 26,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        line: 26,\n\t        col: 11,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 26,\n\t          col: 10,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 26,\n\t        col: 13,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"mod\",\n\t          type: \"literal\",\n\t          line: 26,\n\t          col: 14,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, number, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"2\",\n\t          type: \"number\",\n\t          line: 26,\n\t          col: 26,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 26,\n\t            col: 25,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 26,\n\t          col: 12,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.string__QUERY = (function string__QUERY$(things) {\n\t    /* string? src/macros/predicates.sibilant:30:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 31,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 31,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* src/macros/predicates.sibilant:31:29 */\n\t      \n\t        return {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 31,\n\t          col: 40,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            line: 31,\n\t            col: 41,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 31,\n\t            col: 43,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              line: 31,\n\t              col: 44,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 31,\n\t              col: 42,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":31,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"string\",\"type\":\"literal\",\"line\":31,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":31,\"col\":58,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.function__QUERY = (function function__QUERY$(things) {\n\t    /* function? src/macros/predicates.sibilant:37:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 38,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 38,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* src/macros/predicates.sibilant:38:29 */\n\t      \n\t        return {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 38,\n\t          col: 40,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            line: 38,\n\t            col: 41,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 38,\n\t            col: 43,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              line: 38,\n\t              col: 44,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 38,\n\t              col: 42,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":38,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"function\",\"type\":\"literal\",\"line\":38,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":38,\"col\":58,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.undefined__QUERY = (function undefined__QUERY$(things) {\n\t    /* undefined? src/macros/predicates.sibilant:45:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 46,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 46,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* src/macros/predicates.sibilant:46:29 */\n\t      \n\t        return {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 46,\n\t          col: 40,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            line: 46,\n\t            col: 41,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 46,\n\t            col: 43,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              line: 46,\n\t              col: 44,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 46,\n\t              col: 42,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":46,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"line\":46,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":46,\"col\":58,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.defined__QUERY = (function defined__QUERY$(things) {\n\t    /* defined? src/macros/predicates.sibilant:53:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 54,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 54,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* src/macros/predicates.sibilant:54:29 */\n\t      \n\t        return {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 54,\n\t          col: 40,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"!=\",\n\t            type: \"otherChar\",\n\t            line: 54,\n\t            col: 41,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 54,\n\t            col: 44,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              line: 54,\n\t              col: 45,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 54,\n\t              col: 43,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":54,\"col\":60,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"line\":54,\"col\":61,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":54,\"col\":59,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.number__QUERY = (function number__QUERY$(things) {\n\t    /* number? src/macros/predicates.sibilant:61:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 62,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 62,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* src/macros/predicates.sibilant:62:29 */\n\t      \n\t        return {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 62,\n\t          col: 40,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            line: 62,\n\t            col: 41,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 62,\n\t            col: 43,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              line: 62,\n\t              col: 44,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 62,\n\t              col: 42,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":62,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"number\",\"type\":\"literal\",\"line\":62,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":62,\"col\":58,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.array__QUERY = (function array__QUERY$(thing) {\n\t    /* array? src/macros/predicates.sibilant:70:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 71,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 71,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, thing, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 73,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          line: 73,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":73,\"col\":12,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"line\":73,\"col\":13,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":73,\"col\":11,\"contents\":[]}]}, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 73,\n\t          col: 20,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"typeof\",\n\t            type: \"literal\",\n\t            line: 73,\n\t            col: 21,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 73,\n\t            col: 19,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 72,\n\t          col: 15,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 73,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 74,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          line: 74,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":74,\"col\":12,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"line\":74,\"col\":13,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":74,\"col\":11,\"contents\":[]}]}, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 74,\n\t          col: 19,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            line: 74,\n\t            col: 20,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":74,\"col\":31,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"line\":74,\"col\":32,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":74,\"col\":30,\"contents\":[]}]}, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":74,\"col\":44,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"line\":74,\"col\":45,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":74,\"col\":43,\"contents\":[]}]} ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 74,\n\t            col: 18,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 73,\n\t          col: 36,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 74,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.list__QUERY = sibilant.macros.namespaces.core.array__QUERY;\n\t  sibilant.macros.namespaces.core.hash__QUERY = (function hash__QUERY$(thing) {\n\t    /* hash? src/macros/predicates.sibilant:83:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 84,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 84,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 84,\n\t        col: 13,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          line: 84,\n\t          col: 14,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":84,\"col\":16,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"line\":84,\"col\":17,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":84,\"col\":15,\"contents\":[]}]}, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 84,\n\t          col: 24,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"typeof\",\n\t            type: \"literal\",\n\t            line: 84,\n\t            col: 25,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 84,\n\t            col: 23,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 84,\n\t          col: 12,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 85,\n\t        col: 13,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          line: 85,\n\t          col: 14,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"null\",\n\t          type: \"literal\",\n\t          line: 85,\n\t          col: 24,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 85,\n\t            col: 23,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 84,\n\t          col: 40,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"             \",\n\t          type: \"whitespace\",\n\t          line: 85,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 86,\n\t        col: 13,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          line: 86,\n\t          col: 14,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 86,\n\t          col: 17,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            line: 86,\n\t            col: 18,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":86,\"col\":29,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"line\":86,\"col\":30,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":86,\"col\":28,\"contents\":[]}]}, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":86,\"col\":42,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"line\":86,\"col\":43,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":86,\"col\":41,\"contents\":[]}]} ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 86,\n\t            col: 16,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":86,\"col\":49,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"line\":86,\"col\":50,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":86,\"col\":48,\"contents\":[]}]} ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 85,\n\t          col: 29,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"             \",\n\t          type: \"whitespace\",\n\t          line: 86,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.object__QUERY = sibilant.macros.namespaces.core.hash__QUERY;\n\t  sibilant.macros.namespaces.core.instanceOf__QUERY = (function instanceOf__QUERY$(item, type) {\n\t    /* instance-of? src/macros/predicates.sibilant:93:0 */\n\t  \n\t    return \"(transpile(item)\\\" instanceof \\\"transpile(type))\";\n\t  });\n\t  sibilant.macros.namespaces.core.exists__QUERY = (function exists__QUERY$(thing) {\n\t    /* exists? src/macros/predicates.sibilant:101:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 102,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 102,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 102,\n\t        col: 13,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"defined?\",\n\t          type: \"literal\",\n\t          line: 102,\n\t          col: 14,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 102,\n\t          col: 12,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 102,\n\t        col: 31,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          line: 102,\n\t          col: 32,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"null\",\n\t          type: \"literal\",\n\t          line: 102,\n\t          col: 42,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 102,\n\t            col: 41,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 102,\n\t          col: 30,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.hasKey__QUERY = (function hasKey__QUERY$(object, key) {\n\t    /* has-key? src/macros/predicates.sibilant:109:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 110,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 110,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"has-own-property\",\n\t          type: \"literal\",\n\t          line: 110,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, object, key ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.lowerCase__QUERY = (function lowerCase__QUERY$(str) {\n\t    /* lower-case? src/macros/predicates.sibilant:115:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 116,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 116,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 117,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          line: 117,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 117,\n\t          col: 13,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \".\",\n\t            type: \"dots\",\n\t            line: 117,\n\t            col: 14,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"to-upper-case\",\n\t              type: \"literal\",\n\t              line: 117,\n\t              col: 15,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ],\n\t            precedingIgnored: []\n\t          }, str ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 117,\n\t            col: 12,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 116,\n\t          col: 12,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 117,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 118,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          line: 118,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 118,\n\t          col: 12,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \".\",\n\t            type: \"dots\",\n\t            line: 118,\n\t            col: 13,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"to-lower-case\",\n\t              type: \"literal\",\n\t              line: 118,\n\t              col: 14,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ],\n\t            precedingIgnored: []\n\t          }, str ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 118,\n\t            col: 11,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 117,\n\t          col: 40,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 118,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.upperCase__QUERY = (function upperCase__QUERY$(str) {\n\t    /* upper-case? src/macros/predicates.sibilant:125:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/predicates.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 126,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        line: 126,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 127,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          line: 127,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 127,\n\t          col: 13,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \".\",\n\t            type: \"dots\",\n\t            line: 127,\n\t            col: 14,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"to-lower-case\",\n\t              type: \"literal\",\n\t              line: 127,\n\t              col: 15,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ],\n\t            precedingIgnored: []\n\t          }, str ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 127,\n\t            col: 12,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 126,\n\t          col: 12,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 127,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        file: \"src/macros/predicates.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 128,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          line: 128,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 128,\n\t          col: 12,\n\t          contents: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \".\",\n\t            type: \"dots\",\n\t            line: 128,\n\t            col: 13,\n\t            contents: [ {\n\t              file: \"src/macros/predicates.sibilant\",\n\t              token: \"to-upper-case\",\n\t              type: \"literal\",\n\t              line: 128,\n\t              col: 14,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ],\n\t            precedingIgnored: []\n\t          }, str ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/predicates.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 128,\n\t            col: 11,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 127,\n\t          col: 40,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/predicates.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          line: 128,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.match__QUERY = (function match__QUERY$(regexp, string) {\n\t    /* match? src/macros/regex.sibilant:6:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/regex.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 7,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 7,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"match\",\n\t          type: \"literal\",\n\t          line: 7,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, regexp ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.matchRegex__QUERY = (function matchRegex__QUERY$(string, pattern, flags) {\n\t    /* match-regex? src/macros/regex.sibilant:12:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/regex.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 13,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \"match?\",\n\t        type: \"literal\",\n\t        line: 13,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 13,\n\t        col: 16,\n\t        contents: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          line: 13,\n\t          col: 17,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern, flags ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 13,\n\t          col: 15,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, string ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.replace = (function replace$(string, pattern, replacement) {\n\t    /* replace src/macros/regex.sibilant:19:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/regex.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 20,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 20,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"replace\",\n\t          type: \"literal\",\n\t          line: 20,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 21,\n\t        col: 14,\n\t        contents: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          line: 21,\n\t          col: 15,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          line: 20,\n\t          col: 25,\n\t          contents: []\n\t        }, {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"              \",\n\t          type: \"whitespace\",\n\t          line: 21,\n\t          col: 0,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, replacement ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.replaceAll = (function replaceAll$(string, pattern, replacement) {\n\t    /* replace-all src/macros/regex.sibilant:27:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/regex.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 28,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        line: 28,\n\t        col: 9,\n\t        contents: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"replace\",\n\t          type: \"literal\",\n\t          line: 28,\n\t          col: 10,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 28,\n\t        col: 26,\n\t        contents: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          line: 28,\n\t          col: 27,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern, {\"file\":\"src/macros/regex.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":28,\"col\":42,\"contents\":[{\"file\":\"src/macros/regex.sibilant\",\"token\":\"g\",\"type\":\"literal\",\"line\":28,\"col\":43,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/regex.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":28,\"col\":41,\"contents\":[]}]} ],\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 28,\n\t          col: 25,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, replacement ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.regex = (function regex$(pattern, flags) {\n\t    /* regex src/macros/regex.sibilant:33:0 */\n\t  \n\t    return {\n\t      file: \"src/macros/regex.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      line: 34,\n\t      col: 8,\n\t      contents: [ {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \"new\",\n\t        type: \"literal\",\n\t        line: 34,\n\t        col: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        file: \"src/macros/regex.sibilant\",\n\t        token: \"RegExp\",\n\t        type: \"literal\",\n\t        line: 34,\n\t        col: 13,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          file: \"src/macros/regex.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          line: 34,\n\t          col: 12,\n\t          contents: []\n\t        } ]\n\t      }, pattern, (flags || \"undefined\") ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.switch = (function switch$(obj, cases) {\n\t    /* switch src/macros/switch.sibilant:13:0 */\n\t  \n\t    var cases = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(function() {\", indent([ \"switch(\", transpile(obj), \") {\", map(cases, (function(caseDef) {\n\t      /* src/macros/switch.sibilant:16:30 */\n\t    \n\t      var caseNameNode = caseDef.contents[0],\n\t          caseLabels = (function() {\n\t        if (node__QUERY(caseNameNode, \"expression\", \"bracket\")) {\n\t          return caseNameNode.contents;\n\t        } else {\n\t          return [ caseNameNode ];\n\t        }\n\t      }).call(this),\n\t          caseString = interleave(\"\\n\", map(caseLabels, (function(c) {\n\t        /* src/macros/switch.sibilant:22:78 */\n\t      \n\t        return (function() {\n\t          if (\"default\" === c.token) {\n\t            return \"default:\";\n\t          } else {\n\t            return [ \"case \", transpile(c), \":\" ];\n\t          }\n\t        }).call(this);\n\t      })));\n\t      return [ \"\\n\", caseString, indent({\n\t        file: \"src/macros/switch.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 26,\n\t        col: 59,\n\t        contents: [ {\n\t          file: \"src/macros/switch.sibilant\",\n\t          token: \"do\",\n\t          type: \"literal\",\n\t          line: 26,\n\t          col: 60,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(caseDef.contents.slice(1)),\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }) ];\n\t    })), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n\t    /* var src/macros/variables.sibilant:15:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return asStatement([ \"var \", interleave(map(destructure(pairs), (function(pair) {\n\t      /* src/macros/variables.sibilant:19:25 */\n\t    \n\t      return [ pair[0], \" = \", pair[1] ];\n\t    })), \",\\n    \") ]);\n\t  });\n\t  sibilant.macros.namespaces.core.assign = (function assign$(pairs) {\n\t    /* assign src/macros/variables.sibilant:38:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(map(destructure(pairs), (function(pair) {\n\t      /* src/macros/variables.sibilant:41:17 */\n\t    \n\t      return asStatement([ pair[0], \" = \", pair[1] ]);\n\t    })), \"\\n\");\n\t  });\n\t  sibilant.macros.namespaces.core.default = (function default$(pairs) {\n\t    /* default src/macros/variables.sibilant:49:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", bulkMap(pairs, (function(name, value) {\n\t      /* src/macros/variables.sibilant:50:40 */\n\t    \n\t      return {\n\t        file: \"src/macros/variables.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        line: 51,\n\t        col: 35,\n\t        contents: [ {\n\t          file: \"src/macros/variables.sibilant\",\n\t          token: \"assign\",\n\t          type: \"literal\",\n\t          line: 51,\n\t          col: 36,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, name, {\n\t          file: \"src/macros/variables.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          line: 51,\n\t          col: 49,\n\t          contents: [ {\n\t            file: \"src/macros/variables.sibilant\",\n\t            token: \"ternary\",\n\t            type: \"literal\",\n\t            line: 51,\n\t            col: 50,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            file: \"src/macros/variables.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            line: 51,\n\t            col: 58,\n\t            contents: [ {\n\t              file: \"src/macros/variables.sibilant\",\n\t              token: \"defined?\",\n\t              type: \"literal\",\n\t              line: 51,\n\t              col: 59,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, name ],\n\t            precedingIgnored: [ {\n\t              file: \"src/macros/variables.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              line: 51,\n\t              col: 57,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, name, value ],\n\t          precedingIgnored: [ {\n\t            file: \"src/macros/variables.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            line: 51,\n\t            col: 48,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      };\n\t    })));\n\t  });\n\t  var docs = sibilant.docs = {\n\t    definitions: [],\n\t    undocumented: {  }\n\t  };\n\t  docs.record = (function docs$record$(type, namespace, name, node) {\n\t    /* docs.record src/docs.sibilant:4:0 */\n\t  \n\t    var doc = docs.lastDoc;\n\t    (function() {\n\t      if (typeof doc !== \"undefined\") {\n\t        delete sibilant.docs.undocumented[name];\n\t        return sibilant.docs.definitions.push(mergeInto(doc, {\n\t          name: name,\n\t          type: type,\n\t          namespace: namespace,\n\t          definition: node\n\t        }));\n\t      } else {\n\t        return sibilant.docs.undocumented[name] = true;\n\t      }\n\t    }).call(this);\n\t    return delete sibilant.docs.lastDoc;\n\t  });\n\t  docs.tags = (function docs$tags$() {\n\t    /* docs.tags src/docs.sibilant:16:0 */\n\t  \n\t    var tags = flatten(pluck(docs.definitions, \"tags\")),\n\t        counts = {  };\n\t    tags.forEach((function(tag) {\n\t      /* src/docs.sibilant:19:5 */\n\t    \n\t      return counts[tag] = ((counts[tag] || 0) + 1);\n\t    }));\n\t    return counts;\n\t  });\n\t  docs.text = (function docs$text$() {\n\t    /* docs.text src/docs.sibilant:27:0 */\n\t  \n\t    return docs.definitions.sort((function(a, b) {\n\t      /* src/docs.sibilant:29:16 */\n\t    \n\t      return prettify(a.name, false).localeCompare(prettify(b.name, false));\n\t    })).map((function(definition) {\n\t      /* src/docs.sibilant:34:15 */\n\t    \n\t      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n\t        if (definition.references) {\n\t          return (\"references:\\n  \" + (definition.references.map((function() {\n\t            /* src/docs.sibilant:40:51 */\n\t          \n\t            return eval(outputFormatter(transpile(arguments[0])));\n\t          })).join(\"\\n  \") + \"\\n\"));\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + (function() {\n\t        if (definition.tags) {\n\t          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n\t        /* src/docs.sibilant:51:43 */\n\t      \n\t        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n\t      })).join(\"\\n\\n\") + \"\\n\\n\");\n\t    })).join(\"\");\n\t  });\n\t  docs.textNoColor = (function docs$textNoColor$() {\n\t    /* docs.text-no-color src/docs.sibilant:58:0 */\n\t  \n\t    var stripAnsi = __webpack_require__(793);\n\t    return stripAnsi(docs.text());\n\t  });\n\t  docs.json = (function docs$json$() {\n\t    /* docs.json src/docs.sibilant:63:0 */\n\t  \n\t    return JSON.stringify(docs.data());\n\t  });\n\t  docs.data = (function docs$data$() {\n\t    /* docs.data src/docs.sibilant:66:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* src/docs.sibilant:68:6 */\n\t    \n\t      return {\n\t        name: prettify(definition.name, false),\n\t        namespace: definition.namespace,\n\t        type: definition.type,\n\t        description: definition.docString,\n\t        references: (function() {\n\t          if (definition.references) {\n\t            return definition.references.map((function() {\n\t              /* src/docs.sibilant:74:52 */\n\t            \n\t              return arguments[0].token.slice(1, -1);\n\t            }));\n\t          } else {\n\t            return [];\n\t          }\n\t        }).call(this),\n\t        arguments: definition.definition.contents[2].contents.map((function() {\n\t          /* src/docs.sibilant:79:30 */\n\t        \n\t          return prettify(arguments[0], false);\n\t        })),\n\t        definition: prettify(definition.definition, false),\n\t        examples: (definition.examples || []).map((function() {\n\t          /* src/docs.sibilant:82:29 */\n\t        \n\t          return {\n\t            javascript: outputFormatter(transpile(arguments[0])),\n\t            sibilant: prettify(arguments[0], false)\n\t          };\n\t        })),\n\t        tags: definition.tags\n\t      };\n\t    }));\n\t  });\n\t  var debug__BANG = (function debug__BANG$(level, message) {\n\t    /* debug! src/helpers.sibilant:1:0 */\n\t  \n\t    var message = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    var debug = sibilant.debug;\n\t    return (function() {\n\t      if ((debug && level <= debug)) {\n\t        return message.forEach((function() {\n\t          /* src/helpers.sibilant:4:29 */\n\t        \n\t          return console.log(arguments[0]);\n\t        }));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var recurseIndent = (function recurseIndent$(arg) {\n\t    /* recurse-indent src/helpers.sibilant:6:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(arg)) {\n\t        return mergeInto(arg, { contents: recurseIndent(flatCompact(arg.contents)) });\n\t      } else if ((arg && \"object\" === typeof arg && \"Array\" === arg.constructor.name)) {\n\t        return map(arg, recurseIndent);\n\t      } else if (typeof arg === \"number\") {\n\t        return arg.toString();\n\t      } else if (typeof arg === \"string\") {\n\t        return arg.replace((new RegExp(\"\\\\n\", \"g\")), \"\\n  \").replace((new RegExp(\"\\\\n\\\\s+\\\\n\", \"g\")), \"\\n\\n\");\n\t      } else {\n\t        return arg;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var indent = (function indent$(args) {\n\t    /* indent src/helpers.sibilant:16:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"\\n  \", recurseIndent(map(args, transpile)), \"\\n\" ];\n\t  });\n\t  var escapeRegex = (function escapeRegex$(string) {\n\t    /* escape-regex src/helpers.sibilant:19:0 */\n\t  \n\t    return string.replace((new RegExp(\"[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\^\\\\$\\\\|]\", \"g\")), \"\\\\$&\");\n\t  });\n\t  var qescape = (function qescape$(content) {\n\t    /* qescape src/helpers.sibilant:22:0 */\n\t  \n\t    return (function() {\n\t      if (!((typeof content !== \"undefined\" && content !== null))) {\n\t        return \"\";\n\t      } else if (typeof content === \"string\") {\n\t        return content.split(\"\\\\\\\\ \"[0]).join(\"\\\\\\\\ \".slice(0, -1)).replace((new RegExp(\"\\\"\", \"g\")), \"\\\\\\\"\").replace((new RegExp(\"\\\\n\", \"g\")), \"\\\\n\\\" +\\n\\\"\");\n\t      } else {\n\t        return content;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var mapNode = (function mapNode$(node, fn) {\n\t    /* map-node src/helpers.sibilant:32:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        var mappedNode = fn(node);\n\t        (function() {\n\t          if (node__QUERY(mappedNode)) {\n\t            return mappedNode.contents = mapNode(mappedNode.contents, fn);\n\t          }\n\t        }).call(this);\n\t        return mappedNode;\n\t      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n\t        return map(node, (function() {\n\t          /* src/helpers.sibilant:41:27 */\n\t        \n\t          return mapNode(arguments[0], fn);\n\t        }));\n\t      } else {\n\t        return fn(node);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var eachNode = (function eachNode$(node, fn) {\n\t    /* each-node src/helpers.sibilant:45:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        return (function() {\n\t          if (fn(node)) {\n\t            return eachNode(node.contents, fn);\n\t          }\n\t        }).call(this);\n\t      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n\t        return node.forEach((function(c) {\n\t          /* src/helpers.sibilant:48:17 */\n\t        \n\t          return eachNode(c, fn);\n\t        }));\n\t      } else {\n\t        return fn(node);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var statement__QUERY = (function statement__QUERY$(transpiled) {\n\t    /* statement? src/helpers.sibilant:51:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(transpiled)) {\n\t        return statement__QUERY(transpiled.contents);\n\t      } else if ((transpiled && \"object\" === typeof transpiled && \"Array\" === transpiled.constructor.name)) {\n\t        return statement__QUERY(transpiled.slice(-1)[0]);\n\t      } else if (typeof transpiled === \"string\") {\n\t        return \";\" === transpiled.slice(-1)[0];\n\t      } else {\n\t        return false;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var asStatement = (function asStatement$(node) {\n\t    /* as-statement src/helpers.sibilant:58:0 */\n\t  \n\t    var transpiled = transpile(node);\n\t    return (function() {\n\t      if (emptyNode__QUERY(transpiled)) {\n\t        return undefined;\n\t      } else if (statement__QUERY(transpiled)) {\n\t        return transpiled;\n\t      } else {\n\t        return [ transpiled, \";\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var unquote__QUERY = (function unquote__QUERY$(node) {\n\t    /* unquote? src/helpers.sibilant:65:0 */\n\t  \n\t    return node__QUERY(node, \"at\");\n\t  });\n\t  var findUnquotes = (function findUnquotes$(node) {\n\t    /* find-unquotes src/helpers.sibilant:67:0 */\n\t  \n\t    var unquotes = {  };\n\t    eachNode(node, (function(n) {\n\t      /* src/helpers.sibilant:69:21 */\n\t    \n\t      (function() {\n\t        if (unquote__QUERY(n)) {\n\t          return unquotes[n.nodeId] = transpile(n);\n\t        }\n\t      }).call(this);\n\t      return !(node__QUERY(n, \"tick\"));\n\t    }));\n\t    return unquotes;\n\t  });\n\t  var spliceDots = (function spliceDots$(node) {\n\t    /* splice-dots src/helpers.sibilant:75:0 */\n\t  \n\t    (function() {\n\t      if ((node && (node.contents && \"object\" === typeof node.contents && \"Array\" === node.contents.constructor.name))) {\n\t        var contents = [];\n\t        node.contents.forEach((function(content) {\n\t          /* src/helpers.sibilant:78:11 */\n\t        \n\t          return (function() {\n\t            if ((node__QUERY(content, \"dots\") && (content.contents && \"object\" === typeof content.contents && \"Array\" === content.contents.constructor.name) && content.contents.length === 1 && (content.contents[0] && \"object\" === typeof content.contents[0] && \"Array\" === content.contents[0].constructor.name))) {\n\t              return contents.push.apply(contents, content.contents[0]);\n\t            } else {\n\t              return contents.push(content);\n\t            }\n\t          }).call(this);\n\t        }));\n\t        return node.contents = contents;\n\t      }\n\t    }).call(this);\n\t    return node;\n\t  });\n\t  var alternatingKeysAndValues = (function alternatingKeysAndValues$(hash) {\n\t    /* alternating-keys-and-values src/helpers.sibilant:90:0 */\n\t  \n\t    return flatten(map(Object.keys(hash), (function(key) {\n\t      /* src/helpers.sibilant:92:14 */\n\t    \n\t      return [ key, hash[key] ];\n\t    })));\n\t  });\n\t  var mapNodeForQuoteExpansion = (function mapNodeForQuoteExpansion$(node, expansions) {\n\t    /* map-node-for-quote-expansion src/helpers.sibilant:95:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        var mappedNode = (function() {\n\t          if (expansions.hasOwnProperty(node.nodeId)) {\n\t            return expansions[node.nodeId];\n\t          } else {\n\t            return clone(node);\n\t          }\n\t        }).call(this);\n\t        (function() {\n\t          if (node__QUERY(mappedNode)) {\n\t            return mappedNode.contents = mapNodeForQuoteExpansion(mappedNode.contents, expansions);\n\t          }\n\t        }).call(this);\n\t        mappedNode = spliceDots(mappedNode);\n\t        return mappedNode;\n\t      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n\t        return map(node, (function() {\n\t          /* src/helpers.sibilant:105:27 */\n\t        \n\t          return mapNodeForQuoteExpansion(arguments[0], expansions);\n\t        }));\n\t      } else {\n\t        return node;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var dotsAndAt = (function dotsAndAt$(content) {\n\t    /* dots-and-at src/helpers.sibilant:109:0 */\n\t  \n\t    return (node__QUERY(content, \"dots\") && 3 === content.token.length && node__QUERY(content.contents[0], \"at\"));\n\t  });\n\t  var replace__BANG = (function replace__BANG$(content) {\n\t    /* replace! src/helpers.sibilant:114:0 */\n\t  \n\t    return (function() {\n\t      if (dotsAndAt(content)) {\n\t        return mergeWith(content, { contents: [ transpile(content.contents[0]) ] });\n\t      } else if (node__QUERY(content, \"at\")) {\n\t        return transpile(content.contents[0]);\n\t      } else if (node__QUERY(content, \"tick\")) {\n\t        return JSON.stringify(content);\n\t      } else if ((\"object\" === typeof content && content !== null && content.constructor.name !== \"Array\")) {\n\t        return sibilant.macros.namespaces.core.hash.apply(this, Object.keys(content).reduce((function() {\n\t          /* src/helpers.sibilant:123:34 */\n\t        \n\t          return arguments[0].concat([ arguments[1], replace__BANG(content[arguments[1]]) ]);\n\t        }), []));\n\t      } else if ((content && \"object\" === typeof content && \"Array\" === content.constructor.name)) {\n\t        return sibilant.macros.namespaces.core.list.apply(this, map(content, replace__BANG));\n\t      } else if (typeof content === \"undefined\") {\n\t        return \"undefined\";\n\t      } else if (typeof content === \"number\") {\n\t        return content.toString();\n\t      } else {\n\t        return JSON.stringify(content);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var node__QUERY = (function node__QUERY$(thing, type, type2, type3, type4, testArg) {\n\t    /* node? src/helpers.sibilant:132:0 */\n\t  \n\t    var a = arguments;\n\t    return (thing && thing.type && thing.contents && (function() {\n\t      if (testArg) {\n\t        return Array.prototype.slice.call(a, 1).indexOf(thing.type) !== -1;\n\t      } else if (type) {\n\t        return (thing.type === type || thing.type === type2 || thing.type === type3 || thing.type === type4);\n\t      } else {\n\t        return true;\n\t      }\n\t    }).call(this));\n\t  });\n\t  var emptyNode__QUERY = (function emptyNode__QUERY$(item) {\n\t    /* empty-node? src/helpers.sibilant:148:0 */\n\t  \n\t    return (function() {\n\t      if (item === null) {\n\t        return true;\n\t      } else if (typeof item === \"undefined\") {\n\t        return true;\n\t      } else if (item === false) {\n\t        return true;\n\t      } else if (typeof item === \"string\") {\n\t        return item.match((new RegExp(\"^\\\\s*$\", undefined)));\n\t      } else if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n\t        return all__QUERY(item, emptyNode__QUERY);\n\t      } else if (node__QUERY(item)) {\n\t        return emptyNode__QUERY(item.contents);\n\t      } else {\n\t        return false;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var compactNode = (function compactNode$(item) {\n\t    /* compact-node src/helpers.sibilant:158:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(item)) {\n\t        item.contents = compactNode(item.contents);\n\t        return (function() {\n\t          if ((item.contents && item.contents.length)) {\n\t            return item;\n\t          } else {\n\t            return null;\n\t          }\n\t        }).call(this);\n\t      } else if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n\t        var compacted = compact(map(item, compactNode));\n\t        return (function() {\n\t          if ((compacted && compacted.length)) {\n\t            return compacted;\n\t          } else {\n\t            return null;\n\t          }\n\t        }).call(this);\n\t      } else if ((item === \"\" || item === false)) {\n\t        return null;\n\t      } else {\n\t        return item;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var generateSymbol = (function generateSymbol$(clue) {\n\t    /* generate-symbol src/helpers.sibilant:171:0 */\n\t  \n\t    var state = sibilant.state;\n\t    clue = (typeof clue !== \"undefined\") ? clue : \"temp\";\n\t    state.symbolCounts = (typeof state.symbolCounts !== \"undefined\") ? state.symbolCounts : {  };\n\t    var count = ((state.symbolCounts[clue] || 0) + 1);\n\t    state.symbolCounts[clue] = count;\n\t    return [ (\"\" + clue + \"$\" + count) ];\n\t  });\n\t  var makeSymbolClue = (function makeSymbolClue$(node) {\n\t    /* make-symbol-clue src/helpers.sibilant:182:0 */\n\t  \n\t    var targetNode = (function() {\n\t      if ((node__QUERY(node, \"expression\") && node.contents[0].token === \"require\")) {\n\t        return node.contents[1];\n\t      } else if (node__QUERY(node, \"expression\")) {\n\t        return node.contents[0];\n\t      } else {\n\t        return node;\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      try {\n\t        return outputFormatter(transpile(targetNode));\n\t      } catch (e) {\n\t        return sibilant.prettyPrint(node, false);\n\t      }\n\t    }).call(this).replace((new RegExp(\"[^a-zA-Z]+\", \"g\")), \"_\").replace((new RegExp(\"^_|_$\", \"g\")), \"\").slice(0, 15);\n\t  });\n\t  var destructure = (function destructure$(pairs) {\n\t    /* destructure src/helpers.sibilant:193:0 */\n\t  \n\t    var destructured = [];\n\t    bulkMap(pairs, (function(lhs, rhs) {\n\t      /* src/helpers.sibilant:195:21 */\n\t    \n\t      var transpiledRhs = transpile(rhs);\n\t      return (function() {\n\t        switch(lhs.type) {\n\t        case \"bracket\":\n\t          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9$]+$\", undefined))),\n\t              source = (function() {\n\t            if (literalRhs__QUERY) {\n\t              return transpiledRhs;\n\t            } else {\n\t              var symbol = generateSymbol(makeSymbolClue(rhs));\n\t              destructured.push([ symbol, transpiledRhs ]);\n\t              return symbol;\n\t            }\n\t          }).call(this);\n\t          lhs.contents.forEach((function(item, index) {\n\t            /* src/helpers.sibilant:205:32 */\n\t          \n\t            return destructured.push([ transpile(item), {\n\t              file: \"src/helpers.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 206,\n\t              col: 76,\n\t              contents: [ {\n\t                file: \"src/helpers.sibilant\",\n\t                token: \"get\",\n\t                type: \"literal\",\n\t                line: 206,\n\t                col: 77,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, source, index ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ]);\n\t          }));\n\t          return (function() {\n\t            if (!(literalRhs__QUERY)) {\n\t              return destructured.push([ source, \"undefined\" ]);\n\t            }\n\t          }).call(this);\n\t        \n\t        case \"brace\":\n\t          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9$]+$\", undefined))),\n\t              source = (function() {\n\t            if (literalRhs__QUERY) {\n\t              return transpiledRhs;\n\t            } else if (1 === lhs.contents.length) {\n\t              return [ \"(\", rhs, \")\" ];\n\t            } else {\n\t              var symbol = generateSymbol(makeSymbolClue(rhs));\n\t              destructured.push([ symbol, transpiledRhs ]);\n\t              return symbol;\n\t            }\n\t          }).call(this);\n\t          lhs.contents.forEach((function(item, index) {\n\t            /* src/helpers.sibilant:218:32 */\n\t          \n\t            var trItem = transpile(item);\n\t            return destructured.push([ trItem, {\n\t              file: \"src/helpers.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              line: 220,\n\t              col: 67,\n\t              contents: [ {\n\t                file: \"src/helpers.sibilant\",\n\t                token: \"get\",\n\t                type: \"literal\",\n\t                line: 220,\n\t                col: 68,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, source, [ \"\\\"\", trItem, \"\\\"\" ] ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ]);\n\t          }));\n\t          return (function() {\n\t            if (!((literalRhs__QUERY || 1 === lhs.contents.length))) {\n\t              return destructured.push([ source, \"undefined\" ]);\n\t            }\n\t          }).call(this);\n\t        \n\t        default:\n\t          return destructured.push([ transpile(lhs), (function() {\n\t            if (rhs) {\n\t              return transpiledRhs;\n\t            } else {\n\t              return \"undefined\";\n\t            }\n\t          }).call(this) ]);\n\t        }\n\t      }).call(this);\n\t    }));\n\t    return destructured;\n\t  });\n\t  var recurseTranspile = (function recurseTranspile$(node) {\n\t    /* recurse-transpile src/transpiler.sibilant:1:0 */\n\t  \n\t    return (function() {\n\t      if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n\t        return map(node, recurseTranspile);\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return mergeInto(node, { contents: recurseTranspile(node.contents) });\n\t      } else if (node__QUERY(node)) {\n\t        return transpile(node);\n\t      } else {\n\t        return node;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var transpile = (function transpile$(node, preprocessor) {\n\t    /* transpile src/transpiler.sibilant:13:0 */\n\t  \n\t    (function() {\n\t      if (typeof node === \"string\") {\n\t        return node = {\n\t          type: \"js\",\n\t          token: node,\n\t          contents: []\n\t        };\n\t      } else if (typeof node === \"number\") {\n\t        return node = {\n\t          type: \"number\",\n\t          token: node.toString(),\n\t          contents: []\n\t        };\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n\t        return node;\n\t      } else if ((typeof node !== \"undefined\" && node !== null)) {\n\t        var transpiler = (transpile[node.type] || transpile.default),\n\t            result = transpiler(node),\n\t            resultNode = recurseTranspile((function() {\n\t          if (node__QUERY(result)) {\n\t            return result;\n\t          } else {\n\t            return {\n\t              contents: result,\n\t              type: \"output\"\n\t            };\n\t          }\n\t        }).call(this));\n\t        (function() {\n\t          if (typeof resultNode === \"undefined\") {\n\t            console.log((\"\" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\" + prettify(node) + \"\"));\n\t            console.log(prettify(result));\n\t            console.log(prettify(transpile(result)));\n\t            throw (new Error((\"Encountered an undefined return from recursive transpile.\\n\" + \"Please report this bug at \" + \"https://github.com/jbr/sibilant/issues/new\")))\n\t          }\n\t        }).call(this);\n\t        resultNode.contents = flatCompact(resultNode.contents);\n\t        resultNode.source = node;\n\t        return (function() {\n\t          if (emptyNode__QUERY(resultNode)) {\n\t            return undefined;\n\t          } else {\n\t            return resultNode;\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.transpile = transpile;\n\t  var readerMacros = {  };\n\t  transpile.hat = (function transpile$hat$(node) {\n\t    /* transpile.hat src/transpiler.sibilant:55:0 */\n\t  \n\t    var token = node.contents[0].token,\n\t        if$2 = (function() {\n\t      if (token.match((new RegExp(\"\\/\", undefined)))) {\n\t        return token.split(\"/\");\n\t      } else {\n\t        return [ sibilant.macros.searchPath[0], token ];\n\t      }\n\t    }).call(this),\n\t        namespace = if$2[0],\n\t        macro = if$2[1],\n\t        if$2 = undefined;\n\t    return sibilant.macros.namespaces.core.get.call(node, \"sibilant.macros.namespaces\", sibilant.macros.namespaces.core.quote(transpile.literal({ token: namespace })), sibilant.macros.namespaces.core.quote(transpile.literal({ token: macro })));\n\t  });\n\t  transpile.tick = (function transpile$tick$(node) {\n\t    /* transpile.tick src/transpiler.sibilant:66:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.quote.apply(node, node.contents);\n\t  });\n\t  transpile.at = (function transpile$at$(node) {\n\t    /* transpile.at src/transpiler.sibilant:69:0 */\n\t  \n\t    return transpile(node.contents[0]);\n\t  });\n\t  transpile.dots = (function transpile$dots$(node) {\n\t    /* transpile.dots src/transpiler.sibilant:72:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.dots.apply(node, node.contents);\n\t  });\n\t  transpile.default = (function transpile$default$(node) {\n\t    /* transpile.default src/transpiler.sibilant:75:0 */\n\t  \n\t    return node.token;\n\t  });\n\t  transpile.output = (function transpile$output$(node) {\n\t    /* transpile.output src/transpiler.sibilant:78:0 */\n\t  \n\t    return node;\n\t  });\n\t  transpile.number = (function transpile$number$(node) {\n\t    /* transpile.number src/transpiler.sibilant:81:0 */\n\t  \n\t    return parseFloat(node.token.replace((new RegExp(\",\", \"g\")), \"\")).toString();\n\t  });\n\t  transpile.root = (function transpile$root$(node) {\n\t    /* transpile.root src/transpiler.sibilant:86:0 */\n\t  \n\t    return (function() {\n\t      if (1 === node.contents.length) {\n\t        return transpile(node.contents[0]);\n\t      } else {\n\t        return interleave(compact(map(node.contents, asStatement)), \"\\n\");\n\t      }\n\t    }).call(this);\n\t  });\n\t  transpile.expression = (function transpile$expression$(node, preprocessor) {\n\t    /* transpile.expression src/transpiler.sibilant:95:0 */\n\t  \n\t    return (function() {\n\t      if (node.contents.length) {\n\t        var head = node.contents[0],\n\t            args = node.contents,\n\t            macro = sibilant.resolveMacro(\"call\");\n\t        (function() {\n\t          if (node__QUERY(head, \"string\")) {\n\t            return macro = sibilant.resolveMacro(\"concat\");\n\t          } else if (node__QUERY(head, \"dots\")) {\n\t            macro = sibilant.resolveMacro(\"send\");\n\t            return args = [ node.contents[1], head.contents[0] ].concat(node.contents.slice(2));\n\t          } else if ((node__QUERY(head, \"literal\") && head.token[0] === \".\")) {\n\t            macro = sibilant.resolveMacro(\"send\");\n\t            return args = [ node.contents[1], mergeInto(head, { token: head.token.slice(1) }) ].concat(node.contents.slice(2));\n\t          } else if (node__QUERY(head, \"literal\", \"otherChar\")) {\n\t            var resolvedMacro = sibilant.resolveMacro(outputFormatter(transpile(head)));\n\t            return (function() {\n\t              if (resolvedMacro) {\n\t                head.hint = \"macro\";\n\t                macro = resolvedMacro;\n\t                return args = node.contents.slice(1);\n\t              }\n\t            }).call(this);\n\t          }\n\t        }).call(this);\n\t        return macro.apply(node, args);\n\t      } else {\n\t        return \"null\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  transpile.bracket = (function transpile$bracket$(node) {\n\t    /* transpile.bracket src/transpiler.sibilant:133:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.list.apply(this, node.contents);\n\t  });\n\t  transpile.brace = (function transpile$brace$(node) {\n\t    /* transpile.brace src/transpiler.sibilant:136:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.hash.apply(this, node.contents);\n\t  });\n\t  transpile.literal = (function transpile$literal$(node) {\n\t    /* transpile.literal src/transpiler.sibilant:138:0 */\n\t  \n\t    var string = node.token.replace((new RegExp(\"\\\\*\", \"g\")), \"_\"),\n\t        lastChar = string.slice(-1)[0];\n\t    string = (function() {\n\t      if (lastChar === \"?\") {\n\t        return (string.slice(0, -1) + \"__QUERY\");\n\t      } else if (lastChar === \"!\") {\n\t        return (string.slice(0, -1) + \"__BANG\");\n\t      } else {\n\t        return string;\n\t      }\n\t    }).call(this);\n\t    return inject(string, string.match((new RegExp(\"-([a-zA-Z0-9])\", \"g\"))), (function(returnString, match) {\n\t      /* src/transpiler.sibilant:147:13 */\n\t    \n\t      var letter = match[1];\n\t      return returnString.replace(match, (function() {\n\t        if ((letter === letter.toUpperCase() && letter !== letter.toLowerCase())) {\n\t          return (\"_\" + letter);\n\t        } else {\n\t          return letter.toUpperCase();\n\t        }\n\t      }).call(this));\n\t    }));\n\t  });\n\t  transpile.string = (function transpile$string$(node) {\n\t    /* transpile.string src/transpiler.sibilant:154:0 */\n\t  \n\t    return node.token.split(\"\\n\").join(\"\\\\n\\\" +\\n\\\"\");\n\t  });\n\t  transpile.comment = (function transpile$comment$(node) {\n\t    /* transpile.comment src/transpiler.sibilant:159:0 */\n\t  \n\t    return null;\n\t  });\n\t  var docs = sibilant.docs = {\n\t    definitions: [],\n\t    undocumented: {  }\n\t  };\n\t  docs.record = (function docs$record$(type, namespace, name, node) {\n\t    /* docs.record src/docs.sibilant:4:0 */\n\t  \n\t    var doc = docs.lastDoc;\n\t    (function() {\n\t      if (typeof doc !== \"undefined\") {\n\t        delete sibilant.docs.undocumented[name];\n\t        return sibilant.docs.definitions.push(mergeInto(doc, {\n\t          name: name,\n\t          type: type,\n\t          namespace: namespace,\n\t          definition: node\n\t        }));\n\t      } else {\n\t        return sibilant.docs.undocumented[name] = true;\n\t      }\n\t    }).call(this);\n\t    return delete sibilant.docs.lastDoc;\n\t  });\n\t  docs.tags = (function docs$tags$() {\n\t    /* docs.tags src/docs.sibilant:16:0 */\n\t  \n\t    var tags = flatten(pluck(docs.definitions, \"tags\")),\n\t        counts = {  };\n\t    tags.forEach((function(tag) {\n\t      /* src/docs.sibilant:19:5 */\n\t    \n\t      return counts[tag] = ((counts[tag] || 0) + 1);\n\t    }));\n\t    return counts;\n\t  });\n\t  docs.text = (function docs$text$() {\n\t    /* docs.text src/docs.sibilant:27:0 */\n\t  \n\t    return docs.definitions.sort((function(a, b) {\n\t      /* src/docs.sibilant:29:16 */\n\t    \n\t      return prettify(a.name, false).localeCompare(prettify(b.name, false));\n\t    })).map((function(definition) {\n\t      /* src/docs.sibilant:34:15 */\n\t    \n\t      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n\t        if (definition.references) {\n\t          return (\"references:\\n  \" + (definition.references.map((function() {\n\t            /* src/docs.sibilant:40:51 */\n\t          \n\t            return eval(outputFormatter(transpile(arguments[0])));\n\t          })).join(\"\\n  \") + \"\\n\"));\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + (function() {\n\t        if (definition.tags) {\n\t          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n\t        /* src/docs.sibilant:51:43 */\n\t      \n\t        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n\t      })).join(\"\\n\\n\") + \"\\n\\n\");\n\t    })).join(\"\");\n\t  });\n\t  docs.textNoColor = (function docs$textNoColor$() {\n\t    /* docs.text-no-color src/docs.sibilant:58:0 */\n\t  \n\t    var stripAnsi = __webpack_require__(793);\n\t    return stripAnsi(docs.text());\n\t  });\n\t  docs.json = (function docs$json$() {\n\t    /* docs.json src/docs.sibilant:63:0 */\n\t  \n\t    return JSON.stringify(docs.data());\n\t  });\n\t  docs.data = (function docs$data$() {\n\t    /* docs.data src/docs.sibilant:66:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* src/docs.sibilant:68:6 */\n\t    \n\t      return {\n\t        name: prettify(definition.name, false),\n\t        namespace: definition.namespace,\n\t        type: definition.type,\n\t        description: definition.docString,\n\t        references: (function() {\n\t          if (definition.references) {\n\t            return definition.references.map((function() {\n\t              /* src/docs.sibilant:74:52 */\n\t            \n\t              return arguments[0].token.slice(1, -1);\n\t            }));\n\t          } else {\n\t            return [];\n\t          }\n\t        }).call(this),\n\t        arguments: definition.definition.contents[2].contents.map((function() {\n\t          /* src/docs.sibilant:79:30 */\n\t        \n\t          return prettify(arguments[0], false);\n\t        })),\n\t        definition: prettify(definition.definition, false),\n\t        examples: (definition.examples || []).map((function() {\n\t          /* src/docs.sibilant:82:29 */\n\t        \n\t          return {\n\t            javascript: outputFormatter(transpile(arguments[0])),\n\t            sibilant: prettify(arguments[0], false)\n\t          };\n\t        })),\n\t        tags: definition.tags\n\t      };\n\t    }));\n\t  });\n\t  var sibilize = (function sibilize$(input) {\n\t    /* sibilize src/require-and-include.sibilant:1:0 */\n\t  \n\t    var result = outputFormatter(transpile(restructure(parse(input))));\n\t    return result;\n\t  });\n\t  var sourcemap = (function sourcemap$(input) {\n\t    /* sourcemap src/require-and-include.sibilant:9:0 */\n\t  \n\t    return sourcemapper(transpile(restructure(parse(input))));\n\t  });\n\t  sibilant.sibilize = sibilize;\n\t  sibilant.version = (function sibilant$version$() {\n\t    /* sibilant.version src/require-and-include.sibilant:14:0 */\n\t  \n\t    return sibilant.packageInfo().version;\n\t  });\n\t  sibilant.stripShebang = (function sibilant$stripShebang$(data) {\n\t    /* sibilant.strip-shebang src/require-and-include.sibilant:17:0 */\n\t  \n\t    return data.replace((new RegExp(\"^#!.*\\\\n\", undefined)), \"\\n\");\n\t  });\n\t  sibilant.file = \"eval.sibilant\";\n\t  var withDirAndFile = (function withDirAndFile$(dir, file, fn) {\n\t    /* with-dir-and-file src/require-and-include.sibilant:22:0 */\n\t  \n\t    var before = {\n\t      dir: sibilant.dir,\n\t      file: sibilant.file\n\t    };\n\t    sibilant.dir = dir;\n\t    sibilant.file = file;\n\t    var retval = fn();\n\t    sibilant.dir = before.dir;\n\t    sibilant.file = before.file;\n\t    return retval;\n\t  });\n\t  sibilant.sourceCache = {  };\n\t  sibilant.sibilizeFile = (function sibilant$sibilizeFile$(fileName) {\n\t    /* sibilant.sibilize-file src/require-and-include.sibilant:39:0 */\n\t  \n\t    return outputFormatter(sibilant.transpileFile(fileName));\n\t  });\n\t  sibilant.sibilizeJson = (function sibilant$sibilizeJson$(fileName) {\n\t    /* sibilant.sibilize-json src/require-and-include.sibilant:44:0 */\n\t  \n\t    var before = sibilant.quoteHashKeys;\n\t    sibilant.quoteHashKeys = true;\n\t    var content = sibilant.sibilizeFile(fileName);\n\t    sibilant.quoteHashKeys = before;\n\t    return content;\n\t  });\n\t  var package = {\n\t    name: \"sibilant\",\n\t    version: \"0.5.5\",\n\t    keywords: [ \"lisp\", \"javascript\", \"language\" ],\n\t    description: \"javascript with a lisp\",\n\t    contributors: [ \"Jacob Rothstein <hi@jbr.me> (http://jbr.me)\", \"Matthew Phillips (http://www.matthewphillips.info/)\", \"Yuest Wang (http://yue.st/)\", \"Lyndon Tremblay (http://www.hoovy.org)\", \"David Sargeant (https://github.com/dubiousdavid)\" ],\n\t    repository: {\n\t      type: \"git\",\n\t      url: \"http://github.com/jbr/sibilant.git\"\n\t    },\n\t    bugs: {\n\t      mail: \"sibilant@librelist.com\",\n\t      url: \"http://github.com/jbr/sibilant/issues\"\n\t    },\n\t    bin: { sibilant: \"./bin/sibilant\" },\n\t    main: \"./lib/sibilant.js\",\n\t    license: \"MIT\",\n\t    devDependencies: {\n\t      stool: \">=0.0.7\",\n\t      diff: \">=2.2.1\",\n\t      \"strip-ansi\": \">=3.0.0\",\n\t      colors: \">=1.1.2\"\n\t    },\n\t    dependencies: {\n\t      \"source-map\": \">=0.5.3\",\n\t      \"source-map-support\": \">=0.3.3\",\n\t      cardinal: \">=0.6.0\"\n\t    },\n\t    scripts: { test: \"bin/sibilant -x stool.sibilant -- test\" }\n\t  };\n\t  sibilant.packageInfo = (function sibilant$packageInfo$() {\n\t    /* sibilant.package-info src/browser.sibilant:24:6 */\n\t  \n\t    return package;\n\t  });\n\t  sibilant.versionString = (function sibilant$versionString$() {\n\t    /* sibilant.version-string src/browser.sibilant:26:6 */\n\t  \n\t    return (package.name + \" browser version \" + package.version);\n\t  });\n\t  sibilant.dir = \"browser\";\n\t  sibilant.initialize = (function sibilant$initialize$() {\n\t    /* sibilant.initialize src/browser.sibilant:31:6 */\n\t  \n\t    return false;\n\t  });\n\t  var evalCode = (function evalCode$(js) {\n\t    /* eval-code src/browser.sibilant:32:13 */\n\t  \n\t    return (new Function(js))();\n\t  });\n\t  sibilant.include = (function sibilant$include$(url) {\n\t    /* sibilant.include src/browser.sibilant:35:6 */\n\t  \n\t    return $.get(url).done((function() {\n\t      /* src/browser.sibilant:36:32 */\n\t    \n\t      return evalCode(sibilize(arguments[0]));\n\t    }));\n\t  });\n\t  (function() {\n\t    if (typeof $ === \"function\") {\n\t      return $((function() {\n\t        /* src/browser.sibilant:39:15 */\n\t      \n\t        return map($.makeArray($(\"script[type=\\\"application/sibilant\\\"][src]\").map((function() {\n\t          /* src/browser.sibilant:42:26 */\n\t        \n\t          return this.src;\n\t        }))), sibilant.include);\n\t      }));\n\t    }\n\t  }).call(this);\n\t  return sibilant;\n\t}).call(this);\n\n/***/ },\n\n/***/ 793:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ansiRegex = __webpack_require__(794)();\n\t\n\tmodule.exports = function (str) {\n\t\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n\t};\n\n\n/***/ },\n\n/***/ 794:\n/***/ function(module, exports) {\n\n\t'use strict';\n\tmodule.exports = function () {\n\t\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n\t};\n\n\n/***/ },\n\n/***/ 795:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\tCopyright (c) 2014, Yahoo! Inc. All rights reserved.\n\tCopyrights licensed under the New BSD License.\n\tSee the accompanying LICENSE file for terms.\n\t*/\n\t\n\t'use strict';\n\t\n\tvar isRegExp = __webpack_require__(796).isRegExp;\n\t\n\t// Generate an internal UID to make the regexp pattern harder to guess.\n\tvar UID                 = Math.floor(Math.random() * 0x10000000000).toString(16);\n\tvar PLACE_HOLDER_REGEXP = new RegExp('\"@__(FUNCTION|REGEXP)-' + UID + '-(\\\\d+)__@\"', 'g');\n\t\n\tvar IS_NATIVE_CODE_REGEXP = /\\{\\s*\\[native code\\]\\s*\\}/g;\n\tvar UNSAFE_CHARS_REGEXP   = /[<>\\/\\u2028\\u2029]/g;\n\t\n\t// Mapping of unsafe HTML and invalid JavaScript line terminator chars to their\n\t// Unicode char counterparts which are safe to use in JavaScript strings.\n\tvar UNICODE_CHARS = {\n\t    '<'     : '\\\\u003C',\n\t    '>'     : '\\\\u003E',\n\t    '/'     : '\\\\u002F',\n\t    '\\u2028': '\\\\u2028',\n\t    '\\u2029': '\\\\u2029'\n\t};\n\t\n\tmodule.exports = function serialize(obj, space) {\n\t    var functions = [];\n\t    var regexps   = [];\n\t    var str;\n\t\n\t    // Creates a JSON string representation of the object and uses placeholders\n\t    // for functions and regexps (identified by index) which are later\n\t    // replaced.\n\t    str = JSON.stringify(obj, function (key, value) {\n\t        if (typeof value === 'function') {\n\t            return '@__FUNCTION-' + UID + '-' + (functions.push(value) - 1) + '__@';\n\t        }\n\t\n\t        if (typeof value === 'object' && isRegExp(value)) {\n\t            return '@__REGEXP-' + UID + '-' + (regexps.push(value) - 1) + '__@';\n\t        }\n\t\n\t        return value;\n\t    }, space);\n\t\n\t    // Protects against `JSON.stringify()` returning `undefined`, by serializing\n\t    // to the literal string: \"undefined\".\n\t    if (typeof str !== 'string') {\n\t        return String(str);\n\t    }\n\t\n\t    // Replace unsafe HTML and invalid JavaScript line terminator chars with\n\t    // their safe Unicode char counterpart. This _must_ happen before the\n\t    // regexps and functions are serialized and added back to the string.\n\t    str = str.replace(UNSAFE_CHARS_REGEXP, function (unsafeChar) {\n\t        return UNICODE_CHARS[unsafeChar];\n\t    });\n\t\n\t    if (functions.length === 0 && regexps.length === 0) {\n\t        return str;\n\t    }\n\t\n\t    // Replaces all occurrences of function and regexp placeholders in the JSON\n\t    // string with their string representations. If the original value can not\n\t    // be found, then `undefined` is used.\n\t    return str.replace(PLACE_HOLDER_REGEXP, function (match, type, valueIndex) {\n\t        if (type === 'REGEXP') {\n\t            return regexps[valueIndex].toString();\n\t        }\n\t\n\t        var fn           = functions[valueIndex];\n\t        var serializedFn = fn.toString();\n\t\n\t        if (IS_NATIVE_CODE_REGEXP.test(serializedFn)) {\n\t            throw new TypeError('Serializing native function: ' + fn.name);\n\t        }\n\t\n\t        return serializedFn;\n\t    });\n\t}\n\n\n/***/ },\n\n/***/ 796:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(798);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(799);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(797)))\n\n/***/ },\n\n/***/ 797:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 798:\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n\n/***/ 799:\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** worker.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d6b6b48bfc37eaffe032\n **/","(var commands {})\n(require!\n {sibilant} \"sibilant/lib/browser\"\n serialize \"serialize-javascript\")\n\n\n(def tap (v fn) (fn v) v)\n\n(def commands.sibilize (sibilant-code)\n     (sibilant.sibilize sibilant-code))\n\n(def commands.evaluate (sibilant-code)\n     (|> (\"(do \"sibilant-code\")\")\n         sibilant.sibilize\n         (new Function #)\n         call\n         serialize))\n\n\n(def on-message (e)\n     (var [ identifier command data ] e.data\n          command-fn (get commands command)\n          return-value { })\n\n     (try (set return-value 'result (apply command-fn data))\n          (set return-value 'error e.message))\n     \n     (post-message [ identifier return-value ]))\n\n(assign onmessage on-message)\n\n\n\n\n/** WEBPACK FOOTER **\n ** worker.sibilant\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** src/macros/misc.sibilant\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** src/helpers.sibilant\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** src/macros/lambda.sibilant\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** src/macros/hash.sibilant\n **/","//# sourceMappingURL=../maps/browser.map\n;\nthis.sibilant = (function() {\n  /* src/browser.sibilant:4:5 */\n\n  var sibilant = {  },\n      exports = sibilant;\n  var error = (function error$(str) {\n    /* error src/browser.sibilant:6:6 */\n  \n    throw str\n  });\n  var inspect = (function inspect$(item) {\n    /* inspect src/browser.sibilant:7:6 */\n  \n    return (function() {\n      if (item.toSource) {\n        return item.toSource();\n      } else {\n        return item.toString();\n      }\n    }).call(this);\n  });\n  var bulkMap = (function bulkMap$(arr, fn) {\n    /* bulk-map include/functional.sibilant:1:0 */\n  \n    var index = 0,\n        groupSize = fn.length,\n        retArr = [];\n    (function() {\n      var while$5 = undefined;\n      while (index < arr.length) {\n        while$5 = (function() {\n          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n          return index += groupSize;\n        }).call(this);\n      };\n      return while$5;\n    }).call(this);\n    return retArr;\n  });\n  var inject = (function inject$(start, items, fn) {\n    /* inject include/functional.sibilant:13:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.reduce(fn, start);\n      } else {\n        return start;\n      }\n    }).call(this);\n  });\n  var map = (function map$(items, fn) {\n    /* map include/functional.sibilant:18:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.map(fn);\n      } else {\n        return [];\n      }\n    }).call(this);\n  });\n  var select = (function select$(items, fn) {\n    /* select include/functional.sibilant:23:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.filter(fn);\n      } else {\n        return [];\n      }\n    }).call(this);\n  });\n  var detect = (function detect$(items, fn) {\n    /* detect include/functional.sibilant:28:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.find(fn);\n      }\n    }).call(this);\n  });\n  var all__QUERY = (function all__QUERY$(items, fn) {\n    /* all? include/functional.sibilant:32:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.every(fn);\n      }\n    }).call(this);\n  });\n  var none__QUERY = (function none__QUERY$(items, fn) {\n    /* none? include/functional.sibilant:36:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return !(items.some(fn));\n      }\n    }).call(this);\n  });\n  var any__QUERY = (function any__QUERY$(items, fn) {\n    /* any? include/functional.sibilant:40:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.some(fn);\n      }\n    }).call(this);\n  });\n  var reject = (function reject$(items, fn) {\n    /* reject include/functional.sibilant:44:0 */\n  \n    return select(items, (function() {\n      /* include/functional.sibilant:45:16 */\n    \n      return !(fn.apply(this, arguments));\n    }));\n  });\n  var compact = (function compact$(arr) {\n    /* compact include/functional.sibilant:48:0 */\n  \n    return select(arr, (function(item) {\n      /* include/functional.sibilant:49:17 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var unique = (function unique$(arr) {\n    /* unique include/functional.sibilant:55:0 */\n  \n    return inject([], arr, (function(coll, item) {\n      /* include/functional.sibilant:57:13 */\n    \n      return (function() {\n        if (coll.indexOf(item) !== -1) {\n          return coll;\n        } else {\n          return coll.concat([ item ]);\n        }\n      }).call(this);\n    }));\n  });\n  var interleave = (function interleave$(glue, arr) {\n    /* interleave include/functional.sibilant:63:0 */\n  \n    (function() {\n      if ((typeof arr === \"string\" && (glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name))) {\n        var temp = glue;\n        glue = arr;\n        return arr = temp;\n      }\n    }).call(this);\n    return (function() {\n      if ((glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name)) {\n        return inject([], arr, (function(collector, item, index) {\n          /* include/functional.sibilant:69:13 */\n        \n          return collector.concat([ item, glue[index] ]);\n        }));\n      } else {\n        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n          /* include/functional.sibilant:73:13 */\n        \n          return collector.concat([ glue, item ]);\n        }));\n      }\n    }).call(this);\n  });\n  var flatten = (function flatten$(items, predicate) {\n    /* flatten include/functional.sibilant:76:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return inject([], items, (function(collector, item) {\n          /* include/functional.sibilant:79:17 */\n        \n          return (function() {\n            if ((!(predicate) || predicate(item))) {\n              return collector.concat((function() {\n                if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n                  return flatten(item, predicate);\n                } else {\n                  return item;\n                }\n              }).call(this));\n            } else {\n              return collector;\n            }\n          }).call(this);\n        }));\n      } else if ((!(predicate) || predicate(items))) {\n        return [ items ];\n      } else {\n        return [];\n      }\n    }).call(this);\n  });\n  var flatCompact = (function flatCompact$(items) {\n    /* flat-compact include/functional.sibilant:89:0 */\n  \n    return flatten(items, (function(item) {\n      /* include/functional.sibilant:90:20 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var recurseMap = (function recurseMap$(item, fn) {\n    /* recurse-map include/functional.sibilant:96:0 */\n  \n    return (function() {\n      if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n        return map(item, (function(subitem) {\n          /* include/functional.sibilant:97:32 */\n        \n          return recurseMap(subitem, fn);\n        }));\n      } else {\n        return fn(item);\n      }\n    }).call(this);\n  });\n  var pluck = (function pluck$(items, attribute) {\n    /* pluck include/functional.sibilant:100:0 */\n  \n    return map(items, (function(item) {\n      /* include/functional.sibilant:101:16 */\n    \n      return item[attribute];\n    }));\n  });\n  var mergeInto = (function mergeInto$(into, from) {\n    /* merge-into include/functional.sibilant:103:0 */\n  \n    return Object.assign(into, from);\n  });\n  var clone = (function clone$(object) {\n    /* clone include/functional.sibilant:106:0 */\n  \n    return Object.assign({  }, object);\n  });\n  var values = (function values$(object) {\n    /* values include/functional.sibilant:109:0 */\n  \n    return map(Object.keys(object), (function() {\n      /* include/functional.sibilant:110:26 */\n    \n      return object[arguments[0]];\n    }));\n  });\n  var mapValues = (function mapValues$(object, fn) {\n    /* map-values include/functional.sibilant:112:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key, index) {\n      /* include/functional.sibilant:114:13 */\n    \n      collector[key] = fn(object[key], key);\n      return collector;\n    }));\n  });\n  var mergeWith = (function mergeWith$(into, from) {\n    /* merge-with include/functional.sibilant:118:0 */\n  \n    return Object.assign({  }, into, from);\n  });\n  var log__BANG = (function log__BANG$(args) {\n    /* log! src/colors.sibilant:1:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return inspect__BANG.apply(this, args).forEach((function() {\n      /* src/colors.sibilant:2:35 */\n    \n      return console.log(arguments[0]);\n    }));\n  });\n  var inspect__BANG = (function inspect__BANG$(args) {\n    /* inspect! src/colors.sibilant:4:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return args.map((function() {\n      /* src/colors.sibilant:5:15 */\n    \n      return util.inspect(arguments[0], {\n        colors: false,\n        depth: 3\n      });\n    }));\n  });\n  var color = (function color$(code, items, depth) {\n    /* color src/colors.sibilant:7:0 */\n  \n    return (code + items.join(\"\") + \"\\033[0m\");\n  });\n  var black = (function black$(args) {\n    /* black src/colors.sibilant:10:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;30m\", args);\n  });\n  var red = (function red$(args) {\n    /* red src/colors.sibilant:11:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;31m\", args);\n  });\n  var green = (function green$(args) {\n    /* green src/colors.sibilant:12:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;32m\", args);\n  });\n  var brown = (function brown$(args) {\n    /* brown src/colors.sibilant:13:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;33m\", args);\n  });\n  var blue = (function blue$(args) {\n    /* blue src/colors.sibilant:14:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;34m\", args);\n  });\n  var purple = (function purple$(args) {\n    /* purple src/colors.sibilant:15:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;35m\", args);\n  });\n  var cyan = (function cyan$(args) {\n    /* cyan src/colors.sibilant:16:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;36m\", args);\n  });\n  var gray = (function gray$(args) {\n    /* gray src/colors.sibilant:17:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;37m\", args);\n  });\n  var boldGray = (function boldGray$(args) {\n    /* bold-gray src/colors.sibilant:18:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;30m\", args);\n  });\n  var boldRed = (function boldRed$(args) {\n    /* bold-red src/colors.sibilant:19:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;31m\", args);\n  });\n  var boldGreen = (function boldGreen$(args) {\n    /* bold-green src/colors.sibilant:20:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;32m\", args);\n  });\n  var yellow = (function yellow$(args) {\n    /* yellow src/colors.sibilant:21:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;33m\", args);\n  });\n  var boldBlue = (function boldBlue$(args) {\n    /* bold-blue src/colors.sibilant:22:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;34m\", args);\n  });\n  var boldPurple = (function boldPurple$(args) {\n    /* bold-purple src/colors.sibilant:23:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;35m\", args);\n  });\n  var boldCyan = (function boldCyan$(args) {\n    /* bold-cyan src/colors.sibilant:24:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;36m\", args);\n  });\n  var white = (function white$(args) {\n    /* white src/colors.sibilant:25:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;37m\", args);\n  });\n  sibilant.prettyPrint = (function sibilant$prettyPrint$(node, color, entry) {\n    /* sibilant.pretty-print src/pretty-printer.sibilant:3:0 */\n  \n    entry = (typeof entry !== \"undefined\") ? entry : true;\n    color = (typeof color !== \"undefined\") ? color : true;\n    return realNewlines((function() {\n      if (node__QUERY(node)) {\n        var prettyPrinter = (sibilant.prettyPrint[node.type] || sibilant.prettyPrint.default);\n        return prettyPrinter(node, color, entry);\n      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n        return ((function() {\n          if (color) {\n            return black(\"[\");\n          } else {\n            return \"\";\n          }\n        }).call(this) + map(node, (function() {\n          /* src/pretty-printer.sibilant:14:28 */\n        \n          return prettify(arguments[0], color, false);\n        })).join((function() {\n          if (color) {\n            return black(\",\");\n          } else {\n            return \"\";\n          }\n        }).call(this)) + (function() {\n          if (color) {\n            return black(\"]\");\n          } else {\n            return \"\";\n          }\n        }).call(this));\n      } else if (color) {\n        return red(inspect(node));\n      } else {\n        return realNewlines(inspect(node));\n      }\n    }).call(this));\n  });\n  var prettify = sibilant.prettyPrint;\n  sibilant.prettyPrint.default = (function sibilant$prettyPrint$default$(node, color, entry) {\n    /* sibilant.pretty-print.default src/pretty-printer.sibilant:23:0 */\n  \n    var mapPretty = (function mapPretty$(attr) {\n      /* map-pretty src/pretty-printer.sibilant:24:5 */\n    \n      var arr = node[attr];\n      return (function() {\n        if ((arr && arr.length)) {\n          return map(arr, (function() {\n            /* src/pretty-printer.sibilant:27:27 */\n          \n            return prettify(arguments[0], color, false);\n          })).join(\"\");\n        } else {\n          return \"\";\n        }\n      }).call(this);\n    });\n    return realNewlines(sibilant.prettyPrint.colorize(node, color, ((function() {\n      if (entry) {\n        return \"\";\n      } else {\n        return mapPretty(\"precedingIgnored\");\n      }\n    }).call(this) + mapPretty(\"modifiers\") + node.token + mapPretty(\"contents\") + mapPretty(\"closingIgnored\") + ((node.closed && acceptablePairs[node.token]) || \"\"))));\n  });\n  sibilant.prettyPrint.root = (function sibilant$prettyPrint$root$(node, color, entry) {\n    /* sibilant.pretty-print.root src/pretty-printer.sibilant:39:0 */\n  \n    return map(node.contents, (function() {\n      /* src/pretty-printer.sibilant:41:16 */\n    \n      return prettify(arguments[0], color, false);\n    })).join(\"\\n\");\n  });\n  sibilant.prettyPrint.output = (function sibilant$prettyPrint$output$(node, color) {\n    /* sibilant.pretty-print.output src/pretty-printer.sibilant:44:0 */\n  \n    return ((function() {\n      if (color) {\n        return black(\"{\");\n      } else {\n        return \"\";\n      }\n    }).call(this) + (function() {\n      if ((node.contents && \"object\" === typeof node.contents && \"Array\" === node.contents.constructor.name)) {\n        return map(node.contents, (function() {\n          /* src/pretty-printer.sibilant:48:28 */\n        \n          return sibilant.prettyPrint.colorize(node, color, prettify(arguments[0], color, false));\n        })).join((function() {\n          if (color) {\n            return black(\",\");\n          } else {\n            return \"\";\n          }\n        }).call(this));\n      } else {\n        return sibilant.prettyPrint.colorize(node, color, node.contents);\n      }\n    }).call(this) + (function() {\n      if (color) {\n        return black(\"}\");\n      } else {\n        return \"\";\n      }\n    }).call(this));\n  });\n  var realNewlines = (function realNewlines$(node) {\n    /* real-newlines src/pretty-printer.sibilant:54:0 */\n  \n    return node.split(\"\\\\n\").join(\"\\n\");\n  });\n  sibilant.prettyPrint.colorize = (function sibilant$prettyPrint$colorize$(node, color, string) {\n    /* sibilant.pretty-print.colorize src/pretty-printer.sibilant:59:0 */\n  \n    return (function() {\n      if (!(color)) {\n        return string;\n      } else if (node.hint === \"macro\") {\n        return yellow(string);\n      } else if (node__QUERY(node, \"output\")) {\n        return purple(string);\n      } else {\n        return green(string);\n      }\n    }).call(this);\n  });\n  var outputFormatter = (function outputFormatter$(node) {\n    /* output-formatter src/output-formatter.sibilant:1:0 */\n  \n    return (function() {\n      if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n        return map(node, outputFormatter).join(\"\");\n      } else if (node__QUERY(node, \"output\")) {\n        return outputFormatter(node.contents);\n      } else if ((typeof node === \"string\" || typeof node === \"number\")) {\n        return node;\n      } else if (!((typeof node !== \"undefined\" && node !== null))) {\n        return \"\";\n      } else if (node__QUERY(node)) {\n        console.log((\"warning: We ran into an unexpected node that never got transpiled at \" + node.file + \":\" + node.line + \":\" + node.col + \".\"));\n        return outputFormatter(transpile(node));\n      }\n    }).call(this);\n  });\n  sibilant.outputFormatter = outputFormatter;\n  var bulkMap = (function bulkMap$(arr, fn) {\n    /* bulk-map include/functional.sibilant:1:0 */\n  \n    var index = 0,\n        groupSize = fn.length,\n        retArr = [];\n    (function() {\n      var while$6 = undefined;\n      while (index < arr.length) {\n        while$6 = (function() {\n          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n          return index += groupSize;\n        }).call(this);\n      };\n      return while$6;\n    }).call(this);\n    return retArr;\n  });\n  var inject = (function inject$(start, items, fn) {\n    /* inject include/functional.sibilant:13:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.reduce(fn, start);\n      } else {\n        return start;\n      }\n    }).call(this);\n  });\n  var map = (function map$(items, fn) {\n    /* map include/functional.sibilant:18:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.map(fn);\n      } else {\n        return [];\n      }\n    }).call(this);\n  });\n  var select = (function select$(items, fn) {\n    /* select include/functional.sibilant:23:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.filter(fn);\n      } else {\n        return [];\n      }\n    }).call(this);\n  });\n  var detect = (function detect$(items, fn) {\n    /* detect include/functional.sibilant:28:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.find(fn);\n      }\n    }).call(this);\n  });\n  var all__QUERY = (function all__QUERY$(items, fn) {\n    /* all? include/functional.sibilant:32:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.every(fn);\n      }\n    }).call(this);\n  });\n  var none__QUERY = (function none__QUERY$(items, fn) {\n    /* none? include/functional.sibilant:36:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return !(items.some(fn));\n      }\n    }).call(this);\n  });\n  var any__QUERY = (function any__QUERY$(items, fn) {\n    /* any? include/functional.sibilant:40:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return items.some(fn);\n      }\n    }).call(this);\n  });\n  var reject = (function reject$(items, fn) {\n    /* reject include/functional.sibilant:44:0 */\n  \n    return select(items, (function() {\n      /* include/functional.sibilant:45:16 */\n    \n      return !(fn.apply(this, arguments));\n    }));\n  });\n  var compact = (function compact$(arr) {\n    /* compact include/functional.sibilant:48:0 */\n  \n    return select(arr, (function(item) {\n      /* include/functional.sibilant:49:17 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var unique = (function unique$(arr) {\n    /* unique include/functional.sibilant:55:0 */\n  \n    return inject([], arr, (function(coll, item) {\n      /* include/functional.sibilant:57:13 */\n    \n      return (function() {\n        if (coll.indexOf(item) !== -1) {\n          return coll;\n        } else {\n          return coll.concat([ item ]);\n        }\n      }).call(this);\n    }));\n  });\n  var interleave = (function interleave$(glue, arr) {\n    /* interleave include/functional.sibilant:63:0 */\n  \n    (function() {\n      if ((typeof arr === \"string\" && (glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name))) {\n        var temp = glue;\n        glue = arr;\n        return arr = temp;\n      }\n    }).call(this);\n    return (function() {\n      if ((glue && \"object\" === typeof glue && \"Array\" === glue.constructor.name)) {\n        return inject([], arr, (function(collector, item, index) {\n          /* include/functional.sibilant:69:13 */\n        \n          return collector.concat([ item, glue[index] ]);\n        }));\n      } else {\n        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n          /* include/functional.sibilant:73:13 */\n        \n          return collector.concat([ glue, item ]);\n        }));\n      }\n    }).call(this);\n  });\n  var flatten = (function flatten$(items, predicate) {\n    /* flatten include/functional.sibilant:76:0 */\n  \n    return (function() {\n      if ((items && \"object\" === typeof items && \"Array\" === items.constructor.name)) {\n        return inject([], items, (function(collector, item) {\n          /* include/functional.sibilant:79:17 */\n        \n          return (function() {\n            if ((!(predicate) || predicate(item))) {\n              return collector.concat((function() {\n                if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n                  return flatten(item, predicate);\n                } else {\n                  return item;\n                }\n              }).call(this));\n            } else {\n              return collector;\n            }\n          }).call(this);\n        }));\n      } else if ((!(predicate) || predicate(items))) {\n        return [ items ];\n      } else {\n        return [];\n      }\n    }).call(this);\n  });\n  var flatCompact = (function flatCompact$(items) {\n    /* flat-compact include/functional.sibilant:89:0 */\n  \n    return flatten(items, (function(item) {\n      /* include/functional.sibilant:90:20 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var recurseMap = (function recurseMap$(item, fn) {\n    /* recurse-map include/functional.sibilant:96:0 */\n  \n    return (function() {\n      if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n        return map(item, (function(subitem) {\n          /* include/functional.sibilant:97:32 */\n        \n          return recurseMap(subitem, fn);\n        }));\n      } else {\n        return fn(item);\n      }\n    }).call(this);\n  });\n  var pluck = (function pluck$(items, attribute) {\n    /* pluck include/functional.sibilant:100:0 */\n  \n    return map(items, (function(item) {\n      /* include/functional.sibilant:101:16 */\n    \n      return item[attribute];\n    }));\n  });\n  var mergeInto = (function mergeInto$(into, from) {\n    /* merge-into include/functional.sibilant:103:0 */\n  \n    return Object.assign(into, from);\n  });\n  var clone = (function clone$(object) {\n    /* clone include/functional.sibilant:106:0 */\n  \n    return Object.assign({  }, object);\n  });\n  var values = (function values$(object) {\n    /* values include/functional.sibilant:109:0 */\n  \n    return map(Object.keys(object), (function() {\n      /* include/functional.sibilant:110:26 */\n    \n      return object[arguments[0]];\n    }));\n  });\n  var mapValues = (function mapValues$(object, fn) {\n    /* map-values include/functional.sibilant:112:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key, index) {\n      /* include/functional.sibilant:114:13 */\n    \n      collector[key] = fn(object[key], key);\n      return collector;\n    }));\n  });\n  var mergeWith = (function mergeWith$(into, from) {\n    /* merge-with include/functional.sibilant:118:0 */\n  \n    return Object.assign({  }, into, from);\n  });\n  var parser = {  };\n  sibilant.parser = parser;\n  parser.tokens = {\n    \"comment\": \"(;.*)\",\n    \"string\": \"(\\\"(([^\\\"]|(\\\\\\\\\\\"))*[^\\\\\\\\])?\\\")\",\n    \"number\": \"(-?[0-9][0-9.,]*)\",\n    \"literal\": \"(-?[*.$a-zA-Z_][/*.a-zA-Z0-9-_]*(\\\\?|!)?)\",\n    \"special\": \"([&'])\",\n    \"at\": \"@\",\n    \"tick\": \"[`']\",\n    \"hat\": \"(\\\\^)\",\n    \"dots\": \"(\\\\.+)\",\n    \"argPlaceholder\": \"(#[0-9]+)\",\n    \"otherChar\": \"([\\\\|#><=!\\\\+\\\\/\\\\*-]+)\",\n    \"openExpression\": \"(\\\\(|\\\\{|\\\\[)\",\n    \"closeExpression\": \"(\\\\)|\\\\}|\\\\])\",\n    \"newline\": \"\\\\n\",\n    \"whitespace\": \"\\\\s+\",\n    \"ignored\": \".\"\n  };\n  parser.tokens.head = (\"(\\\\.*[*$a-zA-Z_\\\\|><=\\\\+\\\\/\\\\*-]+\" + \"[/*.a-zA-Z0-9-_\\\\|><=\\\\+\\\\/\\\\*-]*\" + \"(\\\\?|!)?\\\\()\");\n  parser.tokenPrecedence = [ \"comment\", \"string\", \"number\", \"tick\", \"hat\", \"at\", \"special\", \"head\", \"dots\", \"literal\", \"argPlaceholder\", \"otherChar\", \"openExpression\", \"closeExpression\", \"newline\", \"whitespace\", \"ignored\" ];\n  parser.orderedRegexes = parser.tokenPrecedence.map((function(x) {\n    /* src/parser.sibilant:43:23 */\n  \n    return mergeInto((new RegExp((\"^\" + parser.tokens[x]), undefined)), { name: x });\n  }));\n  var orderedRegexes = parser.orderedRegexes;\n  parser.parse = (function parser$parse$(string, context) {\n    /* parser.parse src/parser.sibilant:48:0 */\n  \n    context = (typeof context !== \"undefined\") ? context : {\n      position: 0,\n      stack: [],\n      line: 1,\n      lastNewline: 0,\n      col: 0\n    };\n    var match = true,\n        regexName = null,\n        remainingInput = string;\n    (function() {\n      var while$7 = undefined;\n      while (match) {\n        while$7 = (function() {\n          detect(orderedRegexes, (function(r) {\n            /* src/parser.sibilant:59:20 */\n          \n            regexName = r.name;\n            return match = r.exec(remainingInput);\n          }));\n          return (function() {\n            if ((typeof match !== \"undefined\" && match !== null)) {\n              var matchString = match[0],\n                  length = matchString.length;\n              context.stack.push({\n                file: sibilant.file,\n                token: matchString,\n                type: regexName,\n                line: context.line,\n                col: context.col,\n                contents: []\n              });\n              (function() {\n                if (\"newline\" === regexName) {\n                  ((context.line)++);\n                  context.col = 0;\n                  return context.lastNewline = context.position;\n                } else if ((\"string\" === regexName && matchString.indexOf(\"\\n\") !== -1)) {\n                  var stringNewlineCount = (matchString.split(\"\\n\").length - 1);\n                  context.line += stringNewlineCount;\n                  return context.col = (length - matchString.lastIndexOf(\"\\n\"));\n                } else {\n                  return context.col += length;\n                }\n              }).call(this);\n              context.position += length;\n              return remainingInput = (function() {\n                if ((remainingInput && remainingInput.length)) {\n                  return remainingInput.slice(length);\n                } else {\n                  return \"\";\n                }\n              }).call(this);\n            }\n          }).call(this);\n        }).call(this);\n      };\n      return while$7;\n    }).call(this);\n    return context.stack;\n  });\n  var parse = parser.parse;\n  var acceptablePairs = {\n    \"(\": \")\",\n    \"[\": \"]\",\n    \"{\": \"}\"\n  },\n      bracketTypes = {\n    \"(\": \"expression\",\n    \"[\": \"bracket\",\n    \"{\": \"brace\"\n  };\n  var restructure = (function restructure$(input) {\n    /* restructure src/restructurer.sibilant:6:0 */\n  \n    var output = {\n      type: \"root\",\n      contents: [],\n      file: sibilant.file,\n      col: 0,\n      line: 1\n    },\n        context = {\n      parseStack: [ output ],\n      output: output,\n      input: input,\n      ignoredNodes: [],\n      specials: 0\n    };\n    inject(context, input, restructurers);\n    (function() {\n      if (!(1 === context.parseStack.length)) {\n        var unclosedNode = context.parseStack[0];\n        throw (new Error((\"unclosed node at \" + unclosedNode.file + \":\" + unclosedNode.line + \":\" + unclosedNode.col + \"\\n  \" + prettify(unclosedNode, false).slice(0, 100))))\n      }\n    }).call(this);\n    return output;\n  });\n  var restructurers = (function restructurers$(context, node) {\n    /* restructurers src/restructurer.sibilant:29:0 */\n  \n    var restructurer = (restructurers[node.type] || restructurers.default);\n    return restructurer(node, context);\n  });\n  sibilant.restructure = restructure;\n  restructurers.head = (function restructurers$head$(node, context) {\n    /* restructurers.head src/restructurer.sibilant:35:0 */\n  \n    var head = mergeWith(node, {\n      token: node.token.slice(0, -1),\n      type: \"literal\"\n    }),\n        expression = mergeWith(node, {\n      token: \"(\",\n      type: \"openExpression\"\n    });\n    return restructurers(restructurers(context, expression), head);\n  });\n  restructurers.openExpression = (function restructurers$openExpression$(node, context) {\n    /* restructurers.open-expression src/restructurer.sibilant:44:42 */\n  \n    var first = context.parseStack[0];\n    node.contents = [];\n    node.type = bracketTypes[node.token];\n    acceptIgnoredNodes(node, context);\n    acceptSpecials(node, context);\n    first.contents.push(node);\n    context.parseStack.unshift(node);\n    return context;\n  });\n  restructurers.closeExpression = (function restructurers$closeExpression$(node, context) {\n    /* restructurers.close-expression src/restructurer.sibilant:56:0 */\n  \n    var first = context.parseStack[0];\n    (function() {\n      if (node__QUERY(first, \"root\")) {\n        throw (new Error((\"unexpected \" + node.token + \" on \" + node.file + \":\" + node.line + \":\" + node.col)))\n      }\n    }).call(this);\n    (function() {\n      if (acceptablePairs[first.token] !== node.token) {\n        throw (new Error((\"trying to close \" + yellow(sibilant.prettyPrint(first)) + \"\\n   on \" + first.file + \":\" + first.line + \":\" + first.col + \"\\n   with \" + sibilant.prettyPrint(node) + \"\\n   on \" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\")))\n      }\n    }).call(this);\n    first.end = node.end;\n    first.closed = true;\n    first.closingIgnored = context.ignoredNodes;\n    context.ignoredNodes = [];\n    context.parseStack.shift();\n    closeSpecials(first, context);\n    (function() {\n      if (context.parseStack.length === 0) {\n        throw (new Error((\"unbalanced parens:\\n\" + inspect(parseStack))))\n      }\n    }).call(this);\n    return context;\n  });\n  var openSpecial = (function openSpecial$(node, context) {\n    /* open-special src/restructurer.sibilant:81:0 */\n  \n    ((context.specials)++);\n    acceptIgnoredNodes(node, context);\n    var first = context.parseStack[0];\n    node.contents = [];\n    first.contents.push(node);\n    context.parseStack.unshift(node);\n    return context;\n  });\n  var acceptSpecials = (function acceptSpecials$(node, context) {\n    /* accept-specials src/restructurer.sibilant:94:0 */\n  \n    node.specials = context.specials;\n    context.specials = 0;\n    return context;\n  });\n  var acceptIgnoredNodes = (function acceptIgnoredNodes$(node, context) {\n    /* accept-ignored-nodes src/restructurer.sibilant:99:0 */\n  \n    node.precedingIgnored = context.ignoredNodes;\n    context.ignoredNodes = [];\n    return context;\n  });\n  var closeSpecials = (function closeSpecials$(node, context) {\n    /* close-specials src/restructurer.sibilant:104:0 */\n  \n    (function() {\n      if (node.specials > 0) {\n        ((node.specials)--);\n        context.parseStack.shift();\n        return closeSpecials(node, context);\n      }\n    }).call(this);\n    return context;\n  });\n  var accumulateIgnoredNode = (function accumulateIgnoredNode$(node, context) {\n    /* accumulate-ignored-node src/restructurer.sibilant:112:0 */\n  \n    context.ignoredNodes.push(node);\n    return context;\n  });\n  [ \"hat\", \"dots\", \"tick\", \"at\" ].forEach((function(special) {\n    /* src/restructurer.sibilant:116:0 */\n  \n    return restructurers[special] = openSpecial;\n  }));\n  [ \"whitespace\", \"newline\", \"ignored\", \"comment\" ].forEach((function(ignored) {\n    /* src/restructurer.sibilant:119:0 */\n  \n    return restructurers[ignored] = accumulateIgnoredNode;\n  }));\n  restructurers.default = (function restructurers$default$(node, context) {\n    /* restructurers.default src/restructurer.sibilant:122:0 */\n  \n    acceptSpecials(node, context);\n    acceptIgnoredNodes(node, context);\n    context.parseStack[0].contents.push(node);\n    return closeSpecials(node, context);\n  });\n  var coreNamespace = {  },\n      macroNamespaces = { core: coreNamespace };\n  sibilant.state = {\n    symbolCount: 0,\n    functionComments: true\n  };\n  sibilant.macros = {\n    \"namespaces\": macroNamespaces,\n    \"defaultSearchPath\": [ \"core\" ],\n    \"searchPath\": [ \"core\" ],\n    \"namespace\": coreNamespace\n  };\n  var namespace = sibilant.macros.namespace,\n      macros = sibilant.macros.namespace;\n  sibilant.macros.currentNamespace = (function sibilant$macros$currentNamespace$() {\n    /* sibilant.macros.current-namespace src/precompiled-macros.sibilant:15:0 */\n  \n    return sibilant.macros.namespaces[sibilant.macros.searchPath[0]];\n  });\n  sibilant.resolveMacro = (function sibilant$resolveMacro$(macroName) {\n    /* sibilant.resolve-macro src/precompiled-macros.sibilant:18:0 */\n  \n    return (function() {\n      if ((macroName.indexOf(\"/\") !== -1 && 1 < macroName.length && !(macroName.indexOf(\"\\n\") !== -1))) {\n        var pathComponents = macroName.split(\"/\"),\n            macro = (sibilant.macros.namespaces.hasOwnProperty(pathComponents[0]) && sibilant.macros.namespaces[pathComponents[0]][pathComponents.slice(1).join(\"/\")]);\n        return (function() {\n          if (macro) {\n            return macro;\n          } else {\n            return error((\"called namespaced macro \" + macroName + \" but could not find namespace \" + pathComponents[0] + \". you might need to include the file that defines it first.\"));\n          }\n        }).call(this);\n      } else {\n        var namespace = detect(sibilant.macros.searchPath, (function(namespace) {\n          /* src/precompiled-macros.sibilant:30:33 */\n        \n          return sibilant.macros.namespaces[namespace].hasOwnProperty(macroName);\n        }));\n        return (function() {\n          if (namespace) {\n            return sibilant.macros.namespaces[namespace][macroName];\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.withDefaultSearchPath = (function sibilant$withDefaultSearchPath$(fn) {\n    /* sibilant.with-default-search-path src/precompiled-macros.sibilant:35:0 */\n  \n    var searchPathBefore = sibilant.macros.searchPath;\n    sibilant.macros.searchPath = sibilant.macros.defaultSearchPath;\n    var returnValue = fn();\n    sibilant.macros.searchPath = searchPathBefore;\n    return returnValue;\n  });\n  sibilant.macros.namespaces.core.case = (function case$(subject, cases) {\n    /* case src/macros/case.sibilant:1:0 */\n  \n    var cases = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      file: \"src/macros/case.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 2,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/case.sibilant\",\n        token: \"if\",\n        type: \"literal\",\n        line: 2,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(flatten(bulkMap(cases, (function(predicate, body) {\n        /* src/macros/case.sibilant:3:30 */\n      \n        return (function() {\n          if (body) {\n            return [ {\n              file: \"src/macros/case.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 5,\n              col: 38,\n              contents: [ {\n                file: \"src/macros/case.sibilant\",\n                token: \"|>\",\n                type: \"otherChar\",\n                line: 5,\n                col: 39,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, subject, predicate ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            }, body ];\n          } else {\n            return predicate;\n          }\n        }).call(this);\n      })))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\">\"] = (function $$(args) {\n    /* > src/macros/comparison.sibilant:3:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \">\";\n    return {\n      file: \"src/macros/comparison.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 5,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/comparison.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 5,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* src/macros/comparison.sibilant:6:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"<\"] = (function $$(args) {\n    /* < src/macros/comparison.sibilant:10:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"<\";\n    return {\n      file: \"src/macros/comparison.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 12,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/comparison.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 12,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* src/macros/comparison.sibilant:13:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"<=\"] = (function $$(args) {\n    /* <= src/macros/comparison.sibilant:16:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"<=\";\n    return {\n      file: \"src/macros/comparison.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 18,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/comparison.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 18,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* src/macros/comparison.sibilant:19:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\">=\"] = (function $$(args) {\n    /* >= src/macros/comparison.sibilant:22:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \">=\";\n    return {\n      file: \"src/macros/comparison.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 24,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/comparison.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 24,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* src/macros/comparison.sibilant:25:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"!=\"] = (function $$(args) {\n    /* != src/macros/comparison.sibilant:27:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"!==\";\n    return {\n      file: \"src/macros/comparison.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 29,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/comparison.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 29,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* src/macros/comparison.sibilant:30:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"=\"] = (function $$(args) {\n    /* = src/macros/comparison.sibilant:33:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"===\";\n    return {\n      file: \"src/macros/comparison.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 35,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/comparison.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 35,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* src/macros/comparison.sibilant:36:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.ternary = (function ternary$(cond, ifTrue, ifFalse) {\n    /* ternary src/macros/flow-control.sibilant:9:0 */\n  \n    return [ \"(\", transpile(cond), \") ? \", transpile(ifTrue), \" : \", transpile(ifFalse) ];\n  });\n  sibilant.macros.namespaces.core.when = (function when$(condition, body) {\n    /* when src/macros/flow-control.sibilant:21:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return sibilant.macros.namespaces.core._scopedWithoutReturn(\"if (\", condition, \") {\", indent({\n      file: \"src/macros/flow-control.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 24,\n      col: 18,\n      contents: [ {\n        file: \"src/macros/flow-control.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        line: 24,\n        col: 19,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\");\n  });\n  sibilant.macros.namespaces.core.unless = (function unless$(condition, body) {\n    /* unless src/macros/flow-control.sibilant:33:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(function() {\", indent([ \"if (\", {\n      file: \"src/macros/flow-control.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 35,\n      col: 25,\n      contents: [ {\n        file: \"src/macros/flow-control.sibilant\",\n        token: \"not\",\n        type: \"literal\",\n        line: 35,\n        col: 26,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, condition ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }, \") {\", indent({\n      file: \"src/macros/flow-control.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 36,\n      col: 33,\n      contents: [ {\n        file: \"src/macros/flow-control.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        line: 36,\n        col: 34,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.if = (function if$(alternatingConditionsAndBranches) {\n    /* if src/macros/flow-control.sibilant:58:0 */\n  \n    var alternatingConditionsAndBranches = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(function() {\", indent(interleave(\" else \", bulkMap(alternatingConditionsAndBranches, (function(cond, val) {\n      /* src/macros/flow-control.sibilant:63:25 */\n    \n      return (function() {\n        if (typeof val !== \"undefined\") {\n          return [ \"if (\", transpile(cond), \") {\", indent({\n            file: \"src/macros/flow-control.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 66,\n            col: 44,\n            contents: [ {\n              file: \"src/macros/flow-control.sibilant\",\n              token: \"do\",\n              type: \"literal\",\n              line: 66,\n              col: 45,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, val ],\n            precedingIgnored: [],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }), \"}\" ];\n        } else {\n          return [ \"{\", indent({\n            file: \"src/macros/flow-control.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 68,\n            col: 47,\n            contents: [ {\n              file: \"src/macros/flow-control.sibilant\",\n              token: \"do\",\n              type: \"literal\",\n              line: 68,\n              col: 48,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, cond ],\n            precedingIgnored: [],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }), \"}\" ];\n        }\n      }).call(this);\n    })))), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.quotedHash = (function quotedHash$(pairs) {\n    /* quoted-hash src/macros/hash.sibilant:3:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    var cachedQuoteValue = sibilant.quoteHashKeys;\n    sibilant.quoteHashKeys = true;\n    var value = sibilant.macros.namespaces.core.hash.apply(this, pairs);\n    sibilant.quoteHashKeys = cachedQuoteValue;\n    return value;\n  });\n  sibilant.macros.namespaces.core.hash = (function hash$(pairs) {\n    /* hash src/macros/hash.sibilant:18:7 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    pairs = pairs.map((function(p, i) {\n      /* src/macros/hash.sibilant:19:32 */\n    \n      return (function() {\n        if ((p.token === \"&\" && node__QUERY(p, \"special\"))) {\n          var double = pairs[(function() {\n            if (0 === (i % 2)) {\n              return (1 + i);\n            } else {\n              return (i - 1);\n            }\n          }).call(this)];\n          return (function() {\n            if ((node__QUERY(double, \"tick\") && double.token === \"`\")) {\n              return double.contents[0];\n            } else {\n              return double;\n            }\n          }).call(this);\n        } else {\n          return p;\n        }\n      }).call(this);\n    }));\n    (function() {\n      if (1 === (pairs.length % 2)) {\n        return error((\"odd number of key-value pairs in hash: \" + inspect(pairs)));\n      }\n    }).call(this);\n    var pairs_reduce$2 = pairs.reduce((function(o, item, i) {\n      /* src/macros/hash.sibilant:32:26 */\n    \n      return (function() {\n        if ((0 === (i % 2) && node__QUERY(item, \"tick\") && item.token === \"`\")) {\n          return Object.assign({  }, o, { dynamicKeys: o.dynamicKeys.concat([ item.contents[0] ]) });\n        } else if ((1 === (o.dynamicKeys.length % 2) && 1 === (i % 2))) {\n          return Object.assign({  }, o, { dynamicKeys: o.dynamicKeys.concat([ item ]) });\n        } else {\n          return Object.assign({  }, o, { staticKeys: o.staticKeys.concat([ item ]) });\n        }\n      }).call(this);\n    }), {\n      dynamicKeys: [],\n      staticKeys: []\n    }),\n        dynamicKeys = pairs_reduce$2.dynamicKeys,\n        staticKeys = pairs_reduce$2.staticKeys,\n        pairs_reduce$2 = undefined;\n    var quoteKeys = sibilant.quoteHashKeys,\n        pairStrings = bulkMap(staticKeys, (function(key, value) {\n      /* src/macros/hash.sibilant:43:47 */\n    \n      return [ (function() {\n        if ((quoteKeys && !(node__QUERY(key, \"string\")))) {\n          return [ \"\\\"\", transpile(key), \"\\\"\" ];\n        } else {\n          return transpile(key);\n        }\n      }).call(this), \": \", transpile(value) ];\n    }));\n    return (function() {\n      if (dynamicKeys.length) {\n        var symbol = generateSymbol(\"hash\");\n        return {\n          file: \"src/macros/hash.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 53,\n          col: 13,\n          contents: [ {\n            file: \"src/macros/hash.sibilant\",\n            token: \"*scoped-without-source\",\n            type: \"literal\",\n            line: 53,\n            col: 14,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/hash.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 54,\n            col: 14,\n            contents: [ {\n              file: \"src/macros/hash.sibilant\",\n              token: \"var\",\n              type: \"literal\",\n              line: 54,\n              col: 15,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, symbol, {\n              file: \"src/macros/hash.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 54,\n              col: 27,\n              contents: [ {\n                file: \"src/macros/hash.sibilant\",\n                token: \"hash\",\n                type: \"literal\",\n                line: 54,\n                col: 28,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              } ].concat(staticKeys),\n              precedingIgnored: [ {\n                file: \"src/macros/hash.sibilant\",\n                token: \" \",\n                type: \"whitespace\",\n                line: 54,\n                col: 26,\n                contents: []\n              } ],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ],\n            precedingIgnored: [ {\n              file: \"src/macros/hash.sibilant\",\n              token: \"\\n\",\n              type: \"newline\",\n              line: 53,\n              col: 36,\n              contents: []\n            }, {\n              file: \"src/macros/hash.sibilant\",\n              token: \"              \",\n              type: \"whitespace\",\n              line: 54,\n              col: 0,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\n            file: \"src/macros/hash.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 55,\n            col: 14,\n            contents: [ {\n              file: \"src/macros/hash.sibilant\",\n              token: \"set\",\n              type: \"literal\",\n              line: 55,\n              col: 15,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, symbol ].concat(dynamicKeys),\n            precedingIgnored: [ {\n              file: \"src/macros/hash.sibilant\",\n              token: \"\\n\",\n              type: \"newline\",\n              line: 54,\n              col: 50,\n              contents: []\n            }, {\n              file: \"src/macros/hash.sibilant\",\n              token: \"              \",\n              type: \"whitespace\",\n              line: 55,\n              col: 0,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, symbol ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      } else if (1 >= pairStrings.length) {\n        return [ \"{ \", interleave(\", \", pairStrings), \" }\" ];\n      } else {\n        return [ \"{\", indent(interleave(\",\\n\", pairStrings)), \"}\" ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n    /* get src/macros/hash.sibilant:76:0 */\n  \n    var keys = Array.prototype.slice.call(arguments, 1);\n  \n    return [ transpile(obj), map(keys, (function(key) {\n      /* src/macros/hash.sibilant:78:19 */\n    \n      var transpiled = transpile(key),\n          output = outputFormatter(transpiled);\n      return (function() {\n        if (output.match((new RegExp(\"^\\\"[a-zA-Z0-9_]+\\\"$\", undefined)))) {\n          return [ \".\", output.replace((new RegExp(\"\\\"\", \"g\")), \"\") ];\n        } else {\n          return [ \"[\", transpiled, \"]\" ];\n        }\n      }).call(this);\n    })) ];\n  });\n  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n    /* set src/macros/hash.sibilant:96:0 */\n  \n    var kvPairs = Array.prototype.slice.call(arguments, 1);\n  \n    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n      /* src/macros/hash.sibilant:97:43 */\n    \n      return {\n        file: \"src/macros/hash.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 97,\n        col: 52,\n        contents: [ {\n          file: \"src/macros/hash.sibilant\",\n          token: \"assign\",\n          type: \"literal\",\n          line: 97,\n          col: 53,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/hash.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 97,\n          col: 60,\n          contents: [ {\n            file: \"src/macros/hash.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            line: 97,\n            col: 61,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, arr, k ],\n          precedingIgnored: [ {\n            file: \"src/macros/hash.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 97,\n            col: 59,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, v ],\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      };\n    })));\n  });\n  sibilant.macros.namespaces.core.keys = (function keys$(obj) {\n    /* keys src/macros/hash.sibilant:105:0 */\n  \n    return {\n      file: \"src/macros/hash.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 106,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/hash.sibilant\",\n        token: \"Object.keys\",\n        type: \"literal\",\n        line: 106,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, obj ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.delete = (function delete$(objects) {\n    /* delete src/macros/hash.sibilant:114:0 */\n  \n    var objects = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", map(objects, (function(obj) {\n      /* src/macros/hash.sibilant:115:37 */\n    \n      return asStatement([ \"delete \", transpile(obj) ]);\n    })));\n  });\n  sibilant.macros.namespaces.core.eachKey = (function eachKey$(as, obj, body) {\n    /* each-key src/macros/hash.sibilant:122:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    return {\n      file: \"src/macros/hash.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 123,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/hash.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        line: 123,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, obj, {\n        file: \"src/macros/hash.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 123,\n        col: 19,\n        contents: [ {\n          file: \"src/macros/hash.sibilant\",\n          token: \"keys\",\n          type: \"literal\",\n          line: 123,\n          col: 20,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/hash.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 123,\n          col: 18,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/hash.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 124,\n        col: 14,\n        contents: [ {\n          file: \"src/macros/hash.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          line: 124,\n          col: 15,\n          contents: [ {\n            file: \"src/macros/hash.sibilant\",\n            token: \"for-each\",\n            type: \"literal\",\n            line: 124,\n            col: 16,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/hash.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 124,\n          col: 25,\n          contents: [ {\n            file: \"src/macros/hash.sibilant\",\n            token: \"lambda\",\n            type: \"literal\",\n            line: 124,\n            col: 26,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            args: (function() {\n              if (node__QUERY(as, \"expression\")) {\n                return as;\n              } else {\n                return [ as ];\n              }\n            }).call(this),\n            node: this\n          } ].concat(body),\n          precedingIgnored: [ {\n            file: \"src/macros/hash.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 124,\n            col: 24,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/hash.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 123,\n          col: 25,\n          contents: []\n        }, {\n          file: \"src/macros/hash.sibilant\",\n          token: \"              \",\n          type: \"whitespace\",\n          line: 124,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.lambda = (function lambda$(argsOrOptions, body) {\n    /* lambda src/macros/lambda.sibilant:21:8 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    debug__BANG(3, argsOrOptions);\n    var args = (argsOrOptions.args || argsOrOptions),\n        body = (argsOrOptions.body || body),\n        node = (argsOrOptions.node || this),\n        args = (function() {\n      if (node__QUERY(args, \"expression\", \"bracket\")) {\n        return args.contents;\n      } else if ((node__QUERY(args) && 0 === body.length)) {\n        body = [ args ];\n        return [];\n      } else if (node__QUERY(args, \"brace\")) {\n        return [ args ];\n      } else {\n        return args;\n      }\n    }).call(this),\n        name = (function() {\n      if (argsOrOptions.name) {\n        return outputFormatter(transpile(argsOrOptions.name)).replace((new RegExp(\"\\\\W+\", \"g\")), \"$\").concat(\"$\");\n      }\n    }).call(this),\n        rest = detect(args, (function() {\n      /* src/macros/lambda.sibilant:36:30 */\n    \n      return node__QUERY(arguments[0], \"dots\");\n    })),\n        destructuredArgs = map(args, (function(arg) {\n      /* src/macros/lambda.sibilant:38:40 */\n    \n      return (function() {\n        if (node__QUERY(arg, \"bracket\", \"brace\")) {\n          var argName = generateSymbol(makeSymbolClue(arg));\n          return {\n            argName: argName,\n            destructuredPair: [ arg, argName ]\n          };\n        } else {\n          return { argName: arg };\n        }\n      }).call(this);\n    })),\n        destructuredStatements = flatCompact([ (function() {\n      if ((typeof rest !== \"undefined\" && rest !== null)) {\n        return [ rest, {\n          file: \"src/macros/lambda.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 45,\n          col: 71,\n          contents: [ {\n            file: \"src/macros/lambda.sibilant\",\n            token: \"Array.prototype.slice.call\",\n            type: \"literal\",\n            line: 45,\n            col: 72,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/lambda.sibilant\",\n            token: \"arguments\",\n            type: \"literal\",\n            line: 45,\n            col: 99,\n            contents: [],\n            specials: 0,\n            precedingIgnored: [ {\n              file: \"src/macros/lambda.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 45,\n              col: 98,\n              contents: []\n            } ]\n          }, (args.length - 1) ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ];\n      }\n    }).call(this) ].concat(map(destructuredArgs, (function() {\n      /* src/macros/lambda.sibilant:46:68 */\n    \n      return arguments[0].destructuredPair;\n    }))));\n    node = detect([ node, argsOrOptions.name, args, body[0] ], (function(n) {\n      /* src/macros/lambda.sibilant:51:21 */\n    \n      return (node__QUERY(n) && n.file);\n    }));\n    return [ \"(function\", (function() {\n      if (name) {\n        return (\" \" + name);\n      } else {\n        return \"\";\n      }\n    }).call(this), \"(\", interleave(\", \", map(destructuredArgs, (function() {\n      /* src/macros/lambda.sibilant:55:49 */\n    \n      return arguments[0].argName;\n    }))), \") {\", (function() {\n      if ((sibilant.state.functionComments && (name || node))) {\n        return indent([ \"/*\", (function() {\n          if (name) {\n            return (\" \" + sibilant.prettyPrint(argsOrOptions.name, false));\n          }\n        }).call(this), (function() {\n          if (node) {\n            return (\" \" + node.file + \":\" + node.line + \":\" + node.col);\n          }\n        }).call(this), \" */\" ]);\n      }\n    }).call(this), (function() {\n      if (destructuredStatements.length) {\n        return indent({\n          file: \"src/macros/lambda.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 61,\n          col: 55,\n          contents: [ {\n            file: \"src/macros/lambda.sibilant\",\n            token: \"var\",\n            type: \"literal\",\n            line: 61,\n            col: 56,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ].concat(destructuredStatements),\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        });\n      }\n    }).call(this), indent(sibilant.macros.namespaces.core.do.apply(this, body)), \"})\" ];\n  });\n  sibilant.macros.namespaces.core[\"#\"] = sibilant.macros.namespaces.core.lambda;\n  sibilant.macros.namespaces.core.thunk = (function thunk$(body) {\n    /* thunk src/macros/lambda.sibilant:72:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    var node = this,\n        lambdaOptions = {\n      node: node,\n      args: []\n    };\n    (function() {\n      if (!(node__QUERY(body[0]))) {\n        mergeInto(lambdaOptions, body[0]);\n        return body = body.slice(1);\n      }\n    }).call(this);\n    return {\n      file: \"src/macros/lambda.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 80,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"lambda\",\n        type: \"literal\",\n        line: 80,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, lambdaOptions ].concat(mapNode(body, (function(node) {\n        /* src/macros/lambda.sibilant:82:17 */\n      \n        return (function() {\n          if (node__QUERY(node, \"argPlaceholder\")) {\n            return {\n              file: \"src/macros/lambda.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 84,\n              col: 24,\n              contents: [ {\n                file: \"src/macros/lambda.sibilant\",\n                token: \"argument\",\n                type: \"literal\",\n                line: 84,\n                col: 25,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, node.token.replace((new RegExp(\"^#\", undefined)), \"\") ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            };\n          } else {\n            return node;\n          }\n        }).call(this);\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"#>\"] = sibilant.macros.namespaces.core.thunk;\n  sibilant.macros.namespaces.core.return = (function return$(token) {\n    /* return src/macros/lambda.sibilant:88:0 */\n  \n    (function() {\n      if (sibilant.debug) {\n        return console.log(\"returning \", prettify(token));\n      }\n    }).call(this);\n    var defaultReturn = asStatement([ \"return \", transpile(token) ]);\n    return (function() {\n      if ((token && token.contents && token.contents.length)) {\n        return (function() {\n          switch(token.contents[0].token) {\n          case \"return\":\n          case \"throw\":\n          case \"do\":\n            return transpile(token);\n          \n          case \"delete\":\n            var deleteMacro = macros.delete;\n            return (function() {\n              if (token.contents.length < 3) {\n                return defaultReturn;\n              } else {\n                return [ asStatement(deleteMacro.apply(this, token.contents.slice(1, -1))), \"\\nreturn \", asStatement(deleteMacro(token.contents.slice(-1)[0])) ];\n              }\n            }).call(this);\n          \n          case \"def\":\n            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return(token.contents[1]) ];\n          \n          case \"assign\":\n            return (function() {\n              if (token.contents.length < 4) {\n                return defaultReturn;\n              } else {\n                var result = clone(transpile(token));\n                result.contents = result.contents.slice(0, -4).concat([ \"return \" ], result.contents.slice(-4));\n                return result;\n              }\n            }).call(this);\n          \n          case \"var\":\n            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return((function() {\n              if (0 === (token.contents.length % 2)) {\n                return token.contents.slice(-1)[0];\n              } else {\n                return token.contents.slice(-2)[0];\n              }\n            }).call(this)) ];\n          \n          case \"set\":\n            return (function() {\n              if (token.contents.length < 5) {\n                return defaultReturn;\n              } else {\n                var obj = token.contents[1],\n                    nonReturnPart = token.contents.slice(2, (token.contents.length - 2)),\n                    returnPart = token.contents.slice(-2);\n                nonReturnPart.unshift(obj);\n                returnPart.unshift(obj);\n                return [ sibilant.macros.namespaces.core.set.apply(this, nonReturnPart), \"\\nreturn \", sibilant.macros.namespaces.core.set.apply(this, returnPart) ];\n              }\n            }).call(this);\n          \n          default:\n            return defaultReturn;\n          }\n        }).call(this);\n      } else {\n        return defaultReturn;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.do = (function do$(body) {\n    /* do src/macros/lambda.sibilant:135:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return (function() {\n      if (1 === body.length) {\n        return sibilant.macros.namespaces.core.return(body[0]);\n      } else if (body.length) {\n        return [ interleave(map(body.slice(0, -1), (function() {\n          /* src/macros/lambda.sibilant:143:19 */\n        \n          return asStatement(arguments[0]);\n        })), \"\\n\"), \"\\n\", sibilant.macros.namespaces.core.return(body.slice(-1)[0]) ];\n      } else {\n        return \"\";\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.def = (function def$(name, args, body) {\n    /* def src/macros/lambda.sibilant:160:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var node = this;\n    (function() {\n      if (node__QUERY(name, \"expression\")) {\n        body = [ args ].concat(body);\n        args = mergeWith(name, { contents: name.contents.slice(1) });\n        return name = name.contents[0];\n      }\n    }).call(this);\n    (function() {\n      if (typeof name === \"undefined\") {\n        return error(\"invalid function definition. missing name.\");\n      } else if (typeof args === \"undefined\") {\n        return error(\"invalid function definition. missing arguments or return value.\");\n      }\n    }).call(this);\n    sibilant.docs.record(\"function\", sibilant.macros.searchPath[0], name, node);\n    return (function() {\n      if (outputFormatter(transpile(name)).match((new RegExp(\"\\\\.\", undefined)))) {\n        return {\n          file: \"src/macros/lambda.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 173,\n          col: 10,\n          contents: [ {\n            file: \"src/macros/lambda.sibilant\",\n            token: \"assign\",\n            type: \"literal\",\n            line: 173,\n            col: 11,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, name, {\n            file: \"src/macros/lambda.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 173,\n            col: 24,\n            contents: [ {\n              file: \"src/macros/lambda.sibilant\",\n              token: \"lambda\",\n              type: \"literal\",\n              line: 173,\n              col: 25,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, {\n              name: name,\n              args: args,\n              node: node,\n              body: body\n            } ],\n            precedingIgnored: [ {\n              file: \"src/macros/lambda.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 173,\n              col: 23,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          } ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      } else {\n        return {\n          file: \"src/macros/lambda.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 174,\n          col: 10,\n          contents: [ {\n            file: \"src/macros/lambda.sibilant\",\n            token: \"var\",\n            type: \"literal\",\n            line: 174,\n            col: 11,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, name, {\n            file: \"src/macros/lambda.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 174,\n            col: 21,\n            contents: [ {\n              file: \"src/macros/lambda.sibilant\",\n              token: \"lambda\",\n              type: \"literal\",\n              line: 174,\n              col: 22,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, {\n              name: name,\n              args: args,\n              node: node,\n              body: body\n            } ],\n            precedingIgnored: [ {\n              file: \"src/macros/lambda.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 174,\n              col: 20,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          } ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.call = (function call$(fnName, args) {\n    /* call src/macros/lambda.sibilant:185:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 1);\n  \n    return (function() {\n      if (any__QUERY(args, (function() {\n        /* src/macros/lambda.sibilant:186:20 */\n      \n        return node__QUERY(arguments[0], \"dots\");\n      }))) {\n        return macros.apply(fnName, macros.list.apply(this, args));\n      } else {\n        return [ transpile(fnName), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.send = (function send$(object, method, args) {\n    /* send src/macros/lambda.sibilant:194:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 2);\n  \n    return [ transpile(object), \".\", transpile(method), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.apply = (function apply$(fn, arglist) {\n    /* apply src/macros/lambda.sibilant:206:0 */\n  \n    return {\n      file: \"src/macros/lambda.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 207,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lambda.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 207,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \"apply\",\n          type: \"literal\",\n          line: 207,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, fn, {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"this\",\n        type: \"literal\",\n        line: 207,\n        col: 20,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 207,\n          col: 19,\n          contents: []\n        } ]\n      }, arglist ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.scoped = (function scoped$(body) {\n    /* scoped src/macros/lambda.sibilant:213:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/lambda.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 214,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lambda.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 214,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \"call\",\n          type: \"literal\",\n          line: 214,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 214,\n        col: 15,\n        contents: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \"lambda\",\n          type: \"literal\",\n          line: 214,\n          col: 16,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          node: this,\n          args: []\n        } ].concat(body),\n        precedingIgnored: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 214,\n          col: 14,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"this\",\n        type: \"literal\",\n        line: 214,\n        col: 54,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 214,\n          col: 53,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core._scopedWithoutReturn = (function _scopedWithoutReturn$(body) {\n    /* *scoped-without-return src/macros/lambda.sibilant:217:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(function() {\", indent.apply(this, body), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core._scopedWithoutSource = (function _scopedWithoutSource$(body) {\n    /* *scoped-without-source src/macros/lambda.sibilant:221:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/lambda.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 222,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"*scoped-without-return\",\n        type: \"literal\",\n        line: 222,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 222,\n        col: 32,\n        contents: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \"do\",\n          type: \"literal\",\n          line: 222,\n          col: 33,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(body),\n        precedingIgnored: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 222,\n          col: 31,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.arguments = (function arguments$(args) {\n    /* arguments src/macros/lambda.sibilant:227:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/lambda.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 228,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"Array.prototype.slice.call\",\n        type: \"literal\",\n        line: 228,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"arguments\",\n        type: \"literal\",\n        line: 228,\n        col: 36,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 228,\n          col: 35,\n          contents: []\n        } ]\n      } ].concat(args),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.argument = (function argument$(index) {\n    /* argument src/macros/lambda.sibilant:234:0 */\n  \n    return {\n      file: \"src/macros/lambda.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 235,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        line: 235,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/lambda.sibilant\",\n        token: \"arguments\",\n        type: \"literal\",\n        line: 235,\n        col: 13,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lambda.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 235,\n          col: 12,\n          contents: []\n        } ]\n      }, index ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.list = (function list$(args) {\n    /* list src/macros/lists.sibilant:11:7 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var argSegments = [];\n    return (function() {\n      if (0 === args.length) {\n        return \"[]\";\n      } else {\n        var simpleList = (function simpleList$(args) {\n          /* simple-list src/macros/lists.sibilant:15:12 */\n        \n          return [ \"[ \", interleave(\", \", map(args, (function(arg) {\n            /* src/macros/lists.sibilant:16:50 */\n          \n            return arg.transpiled;\n          }))), \" ]\" ];\n        });\n        args.forEach((function(arg) {\n          /* src/macros/lists.sibilant:18:27 */\n        \n          return (function() {\n            if (node__QUERY(arg, \"dots\")) {\n              return argSegments.push({ transpiled: transpile(arg) });\n            } else if ((argSegments.slice(-1)[0] && \"object\" === typeof argSegments.slice(-1)[0] && \"Array\" === argSegments.slice(-1)[0].constructor.name)) {\n              return argSegments.slice(-1)[0].push({ transpiled: transpile(arg) });\n            } else {\n              return argSegments.push([ { transpiled: transpile(arg) } ]);\n            }\n          }).call(this);\n        }));\n        argSegments = map(argSegments, (function(segment) {\n          /* src/macros/lists.sibilant:24:38 */\n        \n          return (function() {\n            if ((segment && \"object\" === typeof segment && \"Array\" === segment.constructor.name)) {\n              return simpleList(segment);\n            } else {\n              return segment.transpiled;\n            }\n          }).call(this);\n        }));\n        return (function() {\n          if (1 === argSegments.length) {\n            return argSegments[0];\n          } else {\n            return [ argSegments[0], \".concat(\", interleave(\", \", argSegments.slice(1)), \")\" ];\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.length = (function length$(arr) {\n    /* length src/macros/lists.sibilant:36:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 37,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        line: 37,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\"file\":\"src/macros/lists.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":37,\"col\":18,\"contents\":[{\"file\":\"src/macros/lists.sibilant\",\"token\":\"length\",\"type\":\"literal\",\"line\":37,\"col\":19,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/lists.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":37,\"col\":17,\"contents\":[]}]} ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.first = (function first$(arr) {\n    /* first src/macros/lists.sibilant:43:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 43,\n      col: 20,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        line: 43,\n        col: 21,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        line: 43,\n        col: 30,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 43,\n          col: 29,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.second = (function second$(arr) {\n    /* second src/macros/lists.sibilant:48:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 48,\n      col: 21,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        line: 48,\n        col: 22,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        line: 48,\n        col: 31,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 48,\n          col: 30,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.third = (function third$(arr) {\n    /* third src/macros/lists.sibilant:53:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 53,\n      col: 20,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        line: 53,\n        col: 21,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"2\",\n        type: \"number\",\n        line: 53,\n        col: 30,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 53,\n          col: 29,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.rest = (function rest$(arr) {\n    /* rest src/macros/lists.sibilant:59:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 59,\n      col: 19,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 59,\n        col: 20,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"slice\",\n          type: \"literal\",\n          line: 59,\n          col: 21,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arr, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        line: 59,\n        col: 32,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 59,\n          col: 31,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.last = (function last$(arr) {\n    /* last src/macros/lists.sibilant:64:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 64,\n      col: 19,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"first\",\n        type: \"literal\",\n        line: 64,\n        col: 20,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 64,\n        col: 26,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          line: 64,\n          col: 27,\n          contents: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \"slice\",\n            type: \"literal\",\n            line: 64,\n            col: 28,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, arr, {\n          file: \"src/macros/lists.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          line: 64,\n          col: 39,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 64,\n            col: 38,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 64,\n          col: 25,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.cons = (function cons$(first, rest) {\n    /* cons src/macros/lists.sibilant:74:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 75,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        line: 75,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 76,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"list\",\n          type: \"literal\",\n          line: 76,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, first ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 75,\n          col: 13,\n          contents: []\n        }, {\n          file: \"src/macros/lists.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 76,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 77,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          line: 77,\n          col: 10,\n          contents: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \"concat\",\n            type: \"literal\",\n            line: 77,\n            col: 11,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, rest ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 76,\n          col: 22,\n          contents: []\n        }, {\n          file: \"src/macros/lists.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 77,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.append = (function append$(list, additional) {\n    /* append src/macros/lists.sibilant:83:0 */\n  \n    var additional = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 84,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 84,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"concat\",\n          type: \"literal\",\n          line: 84,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, list, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 84,\n        col: 23,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"list\",\n          type: \"literal\",\n          line: 84,\n          col: 24,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(additional),\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 84,\n          col: 22,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.each = (function each$(item, array, body) {\n    /* each src/macros/lists.sibilant:97:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var node = this,\n        args = (function() {\n      if (node__QUERY(item, \"expression\")) {\n        return item;\n      } else {\n        return [ item ];\n      }\n    }).call(this);\n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 100,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"|>\",\n        type: \"otherChar\",\n        line: 100,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, array, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 101,\n        col: 12,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          line: 101,\n          col: 13,\n          contents: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \"for-each\",\n            type: \"literal\",\n            line: 101,\n            col: 14,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/lists.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 101,\n          col: 23,\n          contents: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \"lambda\",\n            type: \"literal\",\n            line: 101,\n            col: 24,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            node: node,\n            args: args,\n            body: body\n          } ],\n          precedingIgnored: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 101,\n            col: 22,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 100,\n          col: 18,\n          contents: []\n        }, {\n          file: \"src/macros/lists.sibilant\",\n          token: \"            \",\n          type: \"whitespace\",\n          line: 101,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.includes__QUERY = (function includes__QUERY$(haystack, needle) {\n    /* includes? src/macros/lists.sibilant:107:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 108,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        line: 108,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, haystack, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 108,\n        col: 24,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          line: 108,\n          col: 25,\n          contents: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \"index-of\",\n            type: \"literal\",\n            line: 108,\n            col: 26,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, needle ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 108,\n          col: 23,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 108,\n        col: 44,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          line: 108,\n          col: 45,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/lists.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          line: 108,\n          col: 48,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 108,\n            col: 47,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 108,\n          col: 43,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.excludes__QUERY = (function excludes__QUERY$(haystack, needle) {\n    /* excludes? src/macros/lists.sibilant:114:0 */\n  \n    return {\n      file: \"src/macros/lists.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 115,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/lists.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        line: 115,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, haystack, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 115,\n        col: 24,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          line: 115,\n          col: 25,\n          contents: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \"index-of\",\n            type: \"literal\",\n            line: 115,\n            col: 26,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, needle ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 115,\n          col: 23,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/lists.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 115,\n        col: 44,\n        contents: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          line: 115,\n          col: 45,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/lists.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          line: 115,\n          col: 47,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/lists.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 115,\n            col: 46,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/lists.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 115,\n          col: 43,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.while = (function while$(condition, body) {\n    /* while src/macros/loops.sibilant:8:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    var symbol = generateSymbol(\"while\");\n    return {\n      file: \"src/macros/loops.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 10,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/loops.sibilant\",\n        token: \"*scoped-without-source\",\n        type: \"literal\",\n        line: 10,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/loops.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 11,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/loops.sibilant\",\n          token: \"var\",\n          type: \"literal\",\n          line: 11,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, symbol ],\n        precedingIgnored: [ {\n          file: \"src/macros/loops.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 10,\n          col: 31,\n          contents: []\n        }, {\n          file: \"src/macros/loops.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 11,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        type: \"output\",\n        contents: [ \"while (\", transpile(condition), \") {\", indent({\n          file: \"src/macros/loops.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 14,\n          col: 35,\n          contents: [ {\n            file: \"src/macros/loops.sibilant\",\n            token: \"assign\",\n            type: \"literal\",\n            line: 14,\n            col: 36,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, symbol, {\n            file: \"src/macros/loops.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 14,\n            col: 51,\n            contents: [ {\n              file: \"src/macros/loops.sibilant\",\n              token: \"*scoped-without-source\",\n              type: \"literal\",\n              line: 14,\n              col: 52,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ].concat(body),\n            precedingIgnored: [ {\n              file: \"src/macros/loops.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 14,\n              col: 50,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          } ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }), \"}\" ]\n      }, symbol ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.until = (function until$(condition, body) {\n    /* until src/macros/loops.sibilant:27:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      file: \"src/macros/loops.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 28,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/loops.sibilant\",\n        token: \"while\",\n        type: \"literal\",\n        line: 28,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/loops.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 28,\n        col: 15,\n        contents: [ {\n          file: \"src/macros/loops.sibilant\",\n          token: \"not\",\n          type: \"literal\",\n          line: 28,\n          col: 16,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, condition ],\n        precedingIgnored: [ {\n          file: \"src/macros/loops.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 28,\n          col: 14,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.macro = (function macro$(name, args, body) {\n    /* macro src/macros/macros.sibilant:12:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var nameTr = outputFormatter(transpile(name)),\n        options = {\n      name: name,\n      args: args,\n      node: this\n    },\n        js = outputFormatter(transpile({\n      file: \"src/macros/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 15,\n      col: 18,\n      contents: [ {\n        file: \"src/macros/macros.sibilant\",\n        token: \"lambda\",\n        type: \"literal\",\n        line: 15,\n        col: 19,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, options ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }));\n    debug__BANG(2, js);\n    sibilant.docs.record(\"macro\", sibilant.macros.searchPath[0], name, this);\n    var evaledJs = (function() {\n      try {\n        return eval(js);\n      } catch (e) {\n        console.log(e.message);\n        console.log(red(e.stack.split(\"\\n\")[1]));\n        return console.log((\"error in parsing macro \" + sibilant.prettyPrint(name) + \":\\n\" + js));\n      }\n    }).call(this);\n    sibilant.macros.namespace[nameTr] = evaledJs;\n    return undefined;\n  });\n  sibilant.macros.namespaces.core.meta = (function meta$(body) {\n    /* meta src/macros/macros.sibilant:42:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    var js = outputFormatter(transpile(sibilant.macros.namespaces.core.scoped.apply(this, body)));\n    (function() {\n      if (sibilant.debug) {\n        return console.log(js);\n      }\n    }).call(this);\n    return outputFormatter(eval(js));\n  });\n  sibilant.macros.namespaces.core.aliasMacro = (function aliasMacro$(currentMacroName, newMacroName) {\n    /* alias-macro src/macros/macros.sibilant:50:0 */\n  \n    var currentMacroName = outputFormatter(transpile(currentMacroName)),\n        newMacroName = outputFormatter(transpile(newMacroName));\n    sibilant.macros.namespace[newMacroName] = sibilant.macros.namespace[currentMacroName];\n    return null;\n  });\n  sibilant.macros.namespaces.core.deleteMacro = (function deleteMacro$(macroNames) {\n    /* delete-macro src/macros/macros.sibilant:61:0 */\n  \n    var macroNames = Array.prototype.slice.call(arguments, 0);\n  \n    macroNames.forEach((function(macroName) {\n      /* src/macros/macros.sibilant:62:7 */\n    \n      return delete sibilant.macros.namespace[outputFormatter(transpile(macroName))];\n    }));\n    return null;\n  });\n  sibilant.macros.namespaces.core.delmacro = sibilant.macros.namespaces.core.deleteMacro;\n  sibilant.macros.namespaces.core.renameMacro = (function renameMacro$(currentMacroName, newMacroName) {\n    /* rename-macro src/macros/macros.sibilant:74:0 */\n  \n    sibilant.macros.namespaces.core.aliasMacro(currentMacroName, newMacroName);\n    sibilant.macros.namespaces.core.deleteMacro(currentMacroName);\n    return null;\n  });\n  sibilant.macros.namespaces.core.importNamespace = (function importNamespace$(namespace) {\n    /* import-namespace src/macros/macros.sibilant:80:0 */\n  \n    var namespaceAsString = outputFormatter(transpile(namespace));\n    (function() {\n      if (!(sibilant.macros.namespaces.hasOwnProperty(namespaceAsString))) {\n        return sibilant.macros.namespaces[namespaceAsString] = {  };\n      }\n    }).call(this);\n    sibilant.macros.searchPath.unshift(namespaceAsString);\n    return undefined;\n  });\n  sibilant.macros.namespaces.core.namespace = (function namespace$(namespace) {\n    /* namespace src/macros/macros.sibilant:88:0 */\n  \n    sibilant.macros.namespaces.core.importNamespace(namespace);\n    sibilant.macros.namespace = sibilant.macros.namespaces[outputFormatter(transpile(namespace))];\n    return undefined;\n  });\n  sibilant.macros.namespaces.core.quote = (function quote$(content) {\n    /* quote src/macros/macros.sibilant:95:0 */\n  \n    var unquotes = findUnquotes(content);\n    return (function() {\n      if (typeof content === \"string\") {\n        return (\"\\\"\" + qescape(content) + \"\\\"\");\n      } else if (typeof content === \"number\") {\n        return sibilant.macros.namespaces.core.quote(content.toString());\n      } else if (node__QUERY(content, \"literal\", \"otherChar\")) {\n        return [ \"\\\"\", transpile(content), \"\\\"\" ];\n      } else if (Object.keys(unquotes).length) {\n        return replace__BANG(content, unquotes);\n      } else if (node__QUERY(content, \"expression\")) {\n        return [ \"\\\"\", mapNode(transpile(content), qescape), \"\\\"\" ];\n      } else if (node__QUERY(content, \"bracket\")) {\n        return sibilant.macros.namespaces.core.list.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n      } else if (node__QUERY(content, \"brace\")) {\n        return sibilant.macros.namespaces.core.hash.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n      } else {\n        console.log((\"unknown content\" + inspect(content)));\n        return content;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.docs = (function docs$(options) {\n    /* docs src/macros/macros.sibilant:118:0 */\n  \n    var options = Array.prototype.slice.call(arguments, 0);\n  \n    var optionsString = undefined,\n        optionsHash = {  };\n    (function() {\n      if (1 === (options.length % 2)) {\n        return (function() {\n          if ((node__QUERY(options[0], \"string\") || typeof options[0] === \"string\")) {\n            return optionsString = options.shift();\n          } else if ((node__QUERY(options.slice(-1)[0], \"string\") || typeof options.slice(-1)[0] === \"string\")) {\n            return optionsString = options.pop();\n          }\n        }).call(this);\n      }\n    }).call(this);\n    bulkMap(options, (function(key, value) {\n      /* src/macros/macros.sibilant:129:23 */\n    \n      return optionsHash[outputFormatter(transpile(key))] = value;\n    }));\n    [ \"examples\", \"references\" ].forEach((function(listAttribute) {\n      /* src/macros/macros.sibilant:132:5 */\n    \n      return (function() {\n        if ((optionsHash.hasOwnProperty(listAttribute) && node__QUERY(optionsHash[listAttribute], \"bracket\"))) {\n          return optionsHash[listAttribute] = optionsHash[listAttribute].contents;\n        }\n      }).call(this);\n    }));\n    (function() {\n      if (optionsHash.hasOwnProperty(\"example\")) {\n        (function() {\n          if (optionsHash.hasOwnProperty(\"examples\")) {\n            return error(\"please provide example OR examples, not both\");\n          }\n        }).call(this);\n        optionsHash.examples = [ optionsHash.example ];\n        return delete optionsHash.example;\n      }\n    }).call(this);\n    (function() {\n      if (optionsHash.hasOwnProperty(\"tags\")) {\n        return optionsHash.tags = eval(outputFormatter(transpile(sibilant.macros.namespaces.core.quote(optionsHash.tags))));\n      }\n    }).call(this);\n    (function() {\n      if (node__QUERY(optionsString, \"string\")) {\n        return optionsHash.docString = eval(outputFormatter(transpile(optionsString)));\n      } else if (typeof optionsString === \"string\") {\n        return optionsHash.docString = optionsString;\n      }\n    }).call(this);\n    sibilant.docs.lastDoc = optionsHash;\n    return null;\n  });\n  sibilant.macros.namespaces.core[\"+\"] = (function $$(args) {\n    /* + src/macros/math.sibilant:8:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.concat = sibilant.macros.namespaces.core[\"+\"];\n  sibilant.macros.namespaces.core[\"-\"] = (function $$(args) {\n    /* - src/macros/math.sibilant:16:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" - \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core._ = (function _$(args) {\n    /* * src/macros/math.sibilant:22:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" * \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"/\"] = (function $$(args) {\n    /* / src/macros/math.sibilant:29:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" / \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.mod = (function mod$(args) {\n    /* mod src/macros/math.sibilant:35:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" % \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.incrBy = (function incrBy$(item, increment) {\n    /* incr-by src/macros/math.sibilant:42:0 */\n  \n    return [ transpile(item), \" += \", transpile(increment) ];\n  });\n  sibilant.macros.namespaces.core.incr = (function incr$(item) {\n    /* incr src/macros/math.sibilant:48:0 */\n  \n    return [ \"((\", transpile(item), \")++)\" ];\n  });\n  sibilant.macros.namespaces.core.decr = (function decr$(item) {\n    /* decr src/macros/math.sibilant:55:0 */\n  \n    return [ \"((\", transpile(item), \")--)\" ];\n  });\n  sibilant.macros.namespaces.core.or = (function or$(args) {\n    /* or src/macros/math.sibilant:61:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" || \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.and = (function and$(args) {\n    /* and src/macros/math.sibilant:69:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return (function() {\n      if (1 === args.length) {\n        return transpile(args[0]);\n      } else {\n        return {\n          file: \"src/macros/math.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 72,\n          col: 12,\n          contents: [ {\n            file: \"src/macros/math.sibilant\",\n            token: \"parens\",\n            type: \"literal\",\n            line: 72,\n            col: 13,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ].concat(interleave(\" && \", map(args, transpile))),\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.not = (function not$(exp) {\n    /* not src/macros/math.sibilant:79:0 */\n  \n    return [ \"!\", {\n      file: \"src/macros/math.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 80,\n      col: 13,\n      contents: [ {\n        file: \"src/macros/math.sibilant\",\n        token: \"parens\",\n        type: \"literal\",\n        line: 80,\n        col: 14,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, exp ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    } ];\n  });\n  sibilant.macros.namespaces.core.asBoolean = (function asBoolean$(expr) {\n    /* as-boolean src/macros/math.sibilant:88:0 */\n  \n    return {\n      file: \"src/macros/math.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 89,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/math.sibilant\",\n        token: \"parens\",\n        type: \"literal\",\n        line: 89,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, \"!!\", {\n        file: \"src/macros/math.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 89,\n        col: 22,\n        contents: [ {\n          file: \"src/macros/math.sibilant\",\n          token: \"parens\",\n          type: \"literal\",\n          line: 89,\n          col: 23,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, expr ],\n        precedingIgnored: [ {\n          file: \"src/macros/math.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 89,\n          col: 21,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.asNumber = (function asNumber$(expr) {\n    /* as-number src/macros/math.sibilant:96:0 */\n  \n    return {\n      file: \"src/macros/math.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 96,\n      col: 25,\n      contents: [ {\n        file: \"src/macros/math.sibilant\",\n        token: \"Number\",\n        type: \"literal\",\n        line: 96,\n        col: 26,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, expr ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.statement__BANG = (function statement__BANG$(node) {\n    /* statement! src/macros/misc.sibilant:3:0 */\n  \n    return (function() {\n      if (emptyNode__QUERY(transpiled)) {\n        return undefined;\n      } else {\n        return [ node, \";\" ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.new = (function new$(constructor, args) {\n    /* new src/macros/misc.sibilant:13:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(new \", {\n      file: \"src/macros/misc.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 14,\n      col: 17,\n      contents: [ {\n        file: \"src/macros/misc.sibilant\",\n        token: \"call\",\n        type: \"literal\",\n        line: 14,\n        col: 18,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, constructor ].concat(args),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }, \")\" ];\n  });\n  sibilant.macros.namespaces.core.typeof = (function typeof$(thing) {\n    /* typeof src/macros/misc.sibilant:20:0 */\n  \n    return [ \"typeof \", transpile(thing) ];\n  });\n  sibilant.macros.namespaces.core.comment = (function comment$(contents) {\n    /* comment src/macros/misc.sibilant:26:0 */\n  \n    var contents = Array.prototype.slice.call(arguments, 0);\n  \n    return map(contents, (function(content) {\n      /* src/macros/misc.sibilant:27:21 */\n    \n      return [ \"// \", recurseMap(transpile(content), (function(item) {\n        /* src/macros/misc.sibilant:29:36 */\n      \n        return (item) ? outputFormatter(transpile(item)).replace((new RegExp(\"\\n\", \"g\")), \"\\n// \") : null;\n      })) ];\n    }));\n  });\n  sibilant.macros.namespaces.core.logPretty = (function logPretty$(label, arg) {\n    /* log-pretty src/macros/misc.sibilant:42:0 */\n  \n    var node = this;\n    (function() {\n      if (typeof arg === \"undefined\") {\n        arg = label;\n        return label = [ \"\\\"\", prettify(label, false), \"\\\"\" ];\n      }\n    }).call(this);\n    return {\n      file: \"src/macros/misc.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 47,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/misc.sibilant\",\n        token: \"console.log\",\n        type: \"literal\",\n        line: 47,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/misc.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 47,\n        col: 21,\n        contents: [ {\n          file: \"src/macros/misc.sibilant\",\n          token: \"concat\",\n          type: \"literal\",\n          line: 47,\n          col: 22,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, [ \"\\\"\", node.file, \":\", node.line, \"\\\"\" ], {\n          file: \"src/macros/misc.sibilant\",\n          token: \"\\\" \\\"\",\n          type: \"string\",\n          line: 47,\n          col: 66,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/misc.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 47,\n            col: 65,\n            contents: []\n          } ]\n        }, label, {\n          file: \"src/macros/misc.sibilant\",\n          token: \"\\\" = \\\"\",\n          type: \"string\",\n          line: 47,\n          col: 77,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/misc.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 47,\n            col: 76,\n            contents: []\n          } ]\n        }, {\n          file: \"src/macros/misc.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 47,\n          col: 83,\n          contents: [ {\n            file: \"src/macros/misc.sibilant\",\n            token: \"prettify\",\n            type: \"literal\",\n            line: 47,\n            col: 84,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, arg ],\n          precedingIgnored: [ {\n            file: \"src/macros/misc.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 47,\n            col: 82,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/misc.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 47,\n          col: 20,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.prettyLog = sibilant.macros.namespaces.core.logPretty;\n  sibilant.macros.namespaces.core.throw = (function throw$(error) {\n    /* throw src/macros/misc.sibilant:55:0 */\n  \n    return [ \"throw \", transpile(error) ];\n  });\n  sibilant.macros.namespaces.core.try = (function try$(tryblock, catchblock) {\n    /* try src/macros/misc.sibilant:60:0 */\n  \n    return [ \"(function() {\", indent([ \"try {\", indent({\n      file: \"src/macros/misc.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 63,\n      col: 26,\n      contents: [ {\n        file: \"src/macros/misc.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        line: 63,\n        col: 27,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, tryblock ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"} catch (e) {\", indent({\n      file: \"src/macros/misc.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 65,\n      col: 26,\n      contents: [ {\n        file: \"src/macros/misc.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        line: 65,\n        col: 27,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, catchblock ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.withState = (function withState$(k, v, body) {\n    /* with-state src/macros/misc.sibilant:69:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var state = sibilant.state,\n        $2 = map([ k, v ], (function() {\n      /* src/macros/misc.sibilant:71:41 */\n    \n      return outputFormatter(transpile(arguments[0]));\n    })),\n        key = $2[0],\n        value = $2[1],\n        $2 = undefined,\n        before = state[key];\n    state[key] = value;\n    var returnValue = interleave(\"\\n\", map(body, transpile));\n    state[key] = before;\n    return returnValue;\n  });\n  sibilant.macros.namespaces.core.join = (function join$(arr, glue) {\n    /* join src/macros/misc.sibilant:87:0 */\n  \n    (function() {\n      if ((typeof glue !== \"undefined\" && typeof arr === \"undefined\")) {\n        arr = glue;\n        return glue = undefined;\n      }\n    }).call(this);\n    return {\n      file: \"src/macros/misc.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 90,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/misc.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 90,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/misc.sibilant\",\n          token: \"join\",\n          type: \"literal\",\n          line: 90,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arr, (glue || \"\\\"\\\"\") ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.parens = (function parens$(contents) {\n    /* parens src/macros/misc.sibilant:92:0 */\n  \n    var contents = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\" ].concat(contents, [ \")\" ]);\n  });\n  sibilant.macros.namespaces.core.sourceMappingUrl = (function sourceMappingUrl$(url) {\n    /* source-mapping-url src/macros/misc.sibilant:99:0 */\n  \n    return [ \"//# sourceMappingURL=\", eval(outputFormatter(transpile(url))), \"\\n\" ];\n  });\n  sibilant.macros.namespaces.core.require__BANG = (function require__BANG$(requires) {\n    /* require! src/macros/misc.sibilant:102:0 */\n  \n    var requires = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/misc.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 103,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/misc.sibilant\",\n        token: \"var\",\n        type: \"literal\",\n        line: 103,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(inject([], requires, (function(pairs, node) {\n        /* src/macros/misc.sibilant:104:25 */\n      \n        return pairs.concat((function() {\n          if ((0 === (pairs.length % 2) && node__QUERY(node, \"tick\", \"string\"))) {\n            return [ mergeInto(clone(node), {\n              token: outputFormatter(transpile(node)).slice(1, -1),\n              contents: [],\n              type: \"literal\"\n            }), {\n              file: \"src/macros/misc.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 114,\n              col: 33,\n              contents: [ {\n                file: \"src/macros/misc.sibilant\",\n                token: \"require\",\n                type: \"literal\",\n                line: 114,\n                col: 34,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, node ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ];\n          } else if (1 === (pairs.length % 2)) {\n            return [ {\n              file: \"src/macros/misc.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 117,\n              col: 36,\n              contents: [ {\n                file: \"src/macros/misc.sibilant\",\n                token: \"require\",\n                type: \"literal\",\n                line: 117,\n                col: 37,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, node ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ];\n          } else {\n            return [ node ];\n          }\n        }).call(this));\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.export = (function export$(localVars) {\n    /* export src/macros/misc.sibilant:122:0 */\n  \n    var localVars = Array.prototype.slice.call(arguments, 0);\n  \n    var pairs = localVars.reduce((function(acc, value) {\n      /* src/macros/misc.sibilant:124:19 */\n    \n      return acc.concat([ sibilant.macros.namespaces.core.quote(value), value ]);\n    }), []);\n    return {\n      file: \"src/macros/misc.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 126,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/misc.sibilant\",\n        token: \"set\",\n        type: \"literal\",\n        line: 126,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/misc.sibilant\",\n        token: \"exports\",\n        type: \"literal\",\n        line: 126,\n        col: 13,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/misc.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 126,\n          col: 12,\n          contents: []\n        } ]\n      } ].concat(pairs),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.emptyList = (function emptyList$() {\n    /* empty-list src/macros/misc.sibilant:128:0 */\n  \n    return \"null\";\n  });\n  sibilant.macros.namespaces.core.debug = (function debug$(val) {\n    /* debug src/macros/misc.sibilant:131:0 */\n  \n    sibilant.debug = eval(outputFormatter(transpile(val)));\n    return null;\n  });\n  sibilant.macros.namespaces.core.dots = (function dots$(contents) {\n    /* dots src/macros/misc.sibilant:135:0 */\n  \n    var contents = Array.prototype.slice.call(arguments, 0);\n  \n    return transpile(contents);\n  });\n  sibilant.macros.namespaces.core.include = (function include$(files) {\n    /* include src/macros/misc.sibilant:150:0 */\n  \n    var files = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(files.map((function(file) {\n      /* src/macros/misc.sibilant:152:17 */\n    \n      return sibilant.withDefaultSearchPath((function() {\n        /* src/macros/misc.sibilant:154:20 */\n      \n        return sibilant.include(eval(outputFormatter(transpile(file))));\n      }));\n    })), \"\\n\");\n  });\n  sibilant.macros.namespaces.core.pipe = (function pipe$(calls) {\n    /* pipe src/macros/pipe.sibilant:25:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 0);\n  \n    return inject(undefined, calls, (function(value, item) {\n      /* src/macros/pipe.sibilant:27:15 */\n    \n      return (function() {\n        if (typeof value === \"undefined\") {\n          return item;\n        } else {\n          return (function() {\n            /* src/macros/pipe.sibilant:29:21 */\n          \n            var cloned = (function() {\n              if (node__QUERY(item, \"literal\", \"dots\")) {\n                return {\n                  file: \"src/macros/pipe.sibilant\",\n                  token: \"(\",\n                  type: \"expression\",\n                  line: 31,\n                  col: 39,\n                  contents: [ item ],\n                  precedingIgnored: [],\n                  specials: 0,\n                  end: undefined,\n                  closed: true,\n                  closingIgnored: []\n                };\n              } else {\n                return clone(item);\n              }\n            }).call(this);\n            var placeholder = detect(cloned.contents, (function(node) {\n              /* src/macros/pipe.sibilant:35:47 */\n            \n              return (node__QUERY(node, \"otherChar\") && \"#\" === node.token);\n            })),\n                placeholderIndex = cloned.contents.indexOf(placeholder),\n                placeholderBoundaries = (function() {\n              if (placeholder) {\n                return [ placeholderIndex, (1 + placeholderIndex) ];\n              } else {\n                return [ 1, 1 ];\n              }\n            }).call(this);\n            return mergeInto(cloned, { contents: cloned.contents.slice(0, placeholderBoundaries[0]).concat([ value ], cloned.contents.slice(placeholderBoundaries[1])) });\n          }).call(this);\n        }\n      }).call(this);\n    }));\n  });\n  sibilant.macros.namespaces.core[\"|>\"] = sibilant.macros.namespaces.core.pipe;\n  sibilant.macros.namespaces.core.pipeThunk = (function pipeThunk$(calls) {\n    /* pipe-thunk src/macros/pipe.sibilant:55:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/pipe.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 55,\n      col: 30,\n      contents: [ {\n        file: \"src/macros/pipe.sibilant\",\n        token: \"thunk\",\n        type: \"literal\",\n        line: 55,\n        col: 31,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, { node: this }, {\n        file: \"src/macros/pipe.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 55,\n        col: 52,\n        contents: [ {\n          file: \"src/macros/pipe.sibilant\",\n          token: \"pipe\",\n          type: \"literal\",\n          line: 55,\n          col: 53,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/pipe.sibilant\",\n          token: \"#0\",\n          type: \"argPlaceholder\",\n          line: 55,\n          col: 58,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/pipe.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 55,\n            col: 57,\n            contents: []\n          } ]\n        } ].concat(calls),\n        precedingIgnored: [ {\n          file: \"src/macros/pipe.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 55,\n          col: 51,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"#->\"] = sibilant.macros.namespaces.core.pipeThunk;\n  sibilant.macros.namespaces.core.tap = (function tap$(thing, body) {\n    /* tap src/macros/pipe.sibilant:65:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      file: \"src/macros/pipe.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 66,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/pipe.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 66,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/pipe.sibilant\",\n          token: \"#>\",\n          type: \"otherChar\",\n          line: 66,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/pipe.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 66,\n          col: 13,\n          contents: [ {\n            file: \"src/macros/pipe.sibilant\",\n            token: \"|>\",\n            type: \"otherChar\",\n            line: 66,\n            col: 14,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/pipe.sibilant\",\n            token: \"#0\",\n            type: \"argPlaceholder\",\n            line: 66,\n            col: 17,\n            contents: [],\n            specials: 0,\n            precedingIgnored: [ {\n              file: \"src/macros/pipe.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 66,\n              col: 16,\n              contents: []\n            } ]\n          } ].concat(body),\n          precedingIgnored: [ {\n            file: \"src/macros/pipe.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 66,\n            col: 12,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, {\n          file: \"src/macros/pipe.sibilant\",\n          token: \"#0\",\n          type: \"argPlaceholder\",\n          line: 66,\n          col: 30,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/pipe.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 66,\n            col: 29,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, thing ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.distribute = (function distribute$(thing, macro, alternatives) {\n    /* distribute src/macros/pipe.sibilant:69:0 */\n  \n    var alternatives = Array.prototype.slice.call(arguments, 2);\n  \n    return {\n      file: \"src/macros/pipe.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 70,\n      col: 8,\n      contents: [ macro ].concat(map(alternatives, (function(alt) {\n        /* src/macros/pipe.sibilant:70:38 */\n      \n        return (function() {\n          if (node__QUERY(alt, \"expression\")) {\n            return {\n              file: \"src/macros/pipe.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 72,\n              col: 45,\n              contents: [ {\n                file: \"src/macros/pipe.sibilant\",\n                token: \"|>\",\n                type: \"otherChar\",\n                line: 72,\n                col: 46,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, thing, alt ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            };\n          } else {\n            return {\n              file: \"src/macros/pipe.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 73,\n              col: 45,\n              contents: [ {\n                file: \"src/macros/pipe.sibilant\",\n                token: \"|>\",\n                type: \"otherChar\",\n                line: 73,\n                col: 46,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, thing ].concat(alt),\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            };\n          }\n        }).call(this);\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.zero__QUERY = (function zero__QUERY$(item) {\n    /* zero? src/macros/predicates.sibilant:5:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 5,\n      col: 21,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        line: 5,\n        col: 22,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, item, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        line: 5,\n        col: 30,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 5,\n          col: 29,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.empty__QUERY = (function empty__QUERY$(arr) {\n    /* empty? src/macros/predicates.sibilant:11:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 12,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        line: 12,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        line: 12,\n        col: 11,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 12,\n          col: 10,\n          contents: []\n        } ]\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 12,\n        col: 13,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"length\",\n          type: \"literal\",\n          line: 12,\n          col: 14,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, arr ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 12,\n          col: 12,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.odd__QUERY = (function odd__QUERY$(number) {\n    /* odd? src/macros/predicates.sibilant:18:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 19,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        line: 19,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        line: 19,\n        col: 11,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 19,\n          col: 10,\n          contents: []\n        } ]\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 19,\n        col: 13,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"mod\",\n          type: \"literal\",\n          line: 19,\n          col: 14,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, number, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"2\",\n          type: \"number\",\n          line: 19,\n          col: 26,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 19,\n            col: 25,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 19,\n          col: 12,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.even__QUERY = (function even__QUERY$(number) {\n    /* even? src/macros/predicates.sibilant:25:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 26,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        line: 26,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        line: 26,\n        col: 11,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 26,\n          col: 10,\n          contents: []\n        } ]\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 26,\n        col: 13,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"mod\",\n          type: \"literal\",\n          line: 26,\n          col: 14,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, number, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"2\",\n          type: \"number\",\n          line: 26,\n          col: 26,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 26,\n            col: 25,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 26,\n          col: 12,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.string__QUERY = (function string__QUERY$(things) {\n    /* string? src/macros/predicates.sibilant:30:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 31,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 31,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* src/macros/predicates.sibilant:31:29 */\n      \n        return {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 31,\n          col: 40,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            line: 31,\n            col: 41,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 31,\n            col: 43,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              line: 31,\n              col: 44,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 31,\n              col: 42,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":31,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"string\",\"type\":\"literal\",\"line\":31,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":31,\"col\":58,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.function__QUERY = (function function__QUERY$(things) {\n    /* function? src/macros/predicates.sibilant:37:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 38,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 38,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* src/macros/predicates.sibilant:38:29 */\n      \n        return {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 38,\n          col: 40,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            line: 38,\n            col: 41,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 38,\n            col: 43,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              line: 38,\n              col: 44,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 38,\n              col: 42,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":38,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"function\",\"type\":\"literal\",\"line\":38,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":38,\"col\":58,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.undefined__QUERY = (function undefined__QUERY$(things) {\n    /* undefined? src/macros/predicates.sibilant:45:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 46,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 46,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* src/macros/predicates.sibilant:46:29 */\n      \n        return {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 46,\n          col: 40,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            line: 46,\n            col: 41,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 46,\n            col: 43,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              line: 46,\n              col: 44,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 46,\n              col: 42,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":46,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"line\":46,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":46,\"col\":58,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.defined__QUERY = (function defined__QUERY$(things) {\n    /* defined? src/macros/predicates.sibilant:53:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 54,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 54,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* src/macros/predicates.sibilant:54:29 */\n      \n        return {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 54,\n          col: 40,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"!=\",\n            type: \"otherChar\",\n            line: 54,\n            col: 41,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 54,\n            col: 44,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              line: 54,\n              col: 45,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 54,\n              col: 43,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":54,\"col\":60,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"line\":54,\"col\":61,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":54,\"col\":59,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.number__QUERY = (function number__QUERY$(things) {\n    /* number? src/macros/predicates.sibilant:61:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 62,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 62,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* src/macros/predicates.sibilant:62:29 */\n      \n        return {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 62,\n          col: 40,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            line: 62,\n            col: 41,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 62,\n            col: 43,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              line: 62,\n              col: 44,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 62,\n              col: 42,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":62,\"col\":59,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"number\",\"type\":\"literal\",\"line\":62,\"col\":60,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":62,\"col\":58,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.array__QUERY = (function array__QUERY$(thing) {\n    /* array? src/macros/predicates.sibilant:70:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 71,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 71,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, thing, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 73,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          line: 73,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":73,\"col\":12,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"line\":73,\"col\":13,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":73,\"col\":11,\"contents\":[]}]}, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 73,\n          col: 20,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"typeof\",\n            type: \"literal\",\n            line: 73,\n            col: 21,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 73,\n            col: 19,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 72,\n          col: 15,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 73,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 74,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          line: 74,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":74,\"col\":12,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"line\":74,\"col\":13,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":74,\"col\":11,\"contents\":[]}]}, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 74,\n          col: 19,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            line: 74,\n            col: 20,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":74,\"col\":31,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"line\":74,\"col\":32,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":74,\"col\":30,\"contents\":[]}]}, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":74,\"col\":44,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"line\":74,\"col\":45,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":74,\"col\":43,\"contents\":[]}]} ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 74,\n            col: 18,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 73,\n          col: 36,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 74,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.list__QUERY = sibilant.macros.namespaces.core.array__QUERY;\n  sibilant.macros.namespaces.core.hash__QUERY = (function hash__QUERY$(thing) {\n    /* hash? src/macros/predicates.sibilant:83:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 84,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 84,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 84,\n        col: 13,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          line: 84,\n          col: 14,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":84,\"col\":16,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"line\":84,\"col\":17,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":84,\"col\":15,\"contents\":[]}]}, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 84,\n          col: 24,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"typeof\",\n            type: \"literal\",\n            line: 84,\n            col: 25,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 84,\n            col: 23,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 84,\n          col: 12,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 85,\n        col: 13,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          line: 85,\n          col: 14,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"null\",\n          type: \"literal\",\n          line: 85,\n          col: 24,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 85,\n            col: 23,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 84,\n          col: 40,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"             \",\n          type: \"whitespace\",\n          line: 85,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 86,\n        col: 13,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          line: 86,\n          col: 14,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 86,\n          col: 17,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            line: 86,\n            col: 18,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":86,\"col\":29,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"line\":86,\"col\":30,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":86,\"col\":28,\"contents\":[]}]}, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":86,\"col\":42,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"line\":86,\"col\":43,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":86,\"col\":41,\"contents\":[]}]} ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 86,\n            col: 16,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, {\"file\":\"src/macros/predicates.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":86,\"col\":49,\"contents\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"line\":86,\"col\":50,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/predicates.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":86,\"col\":48,\"contents\":[]}]} ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 85,\n          col: 29,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"             \",\n          type: \"whitespace\",\n          line: 86,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.object__QUERY = sibilant.macros.namespaces.core.hash__QUERY;\n  sibilant.macros.namespaces.core.instanceOf__QUERY = (function instanceOf__QUERY$(item, type) {\n    /* instance-of? src/macros/predicates.sibilant:93:0 */\n  \n    return \"(transpile(item)\\\" instanceof \\\"transpile(type))\";\n  });\n  sibilant.macros.namespaces.core.exists__QUERY = (function exists__QUERY$(thing) {\n    /* exists? src/macros/predicates.sibilant:101:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 102,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 102,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 102,\n        col: 13,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"defined?\",\n          type: \"literal\",\n          line: 102,\n          col: 14,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 102,\n          col: 12,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 102,\n        col: 31,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          line: 102,\n          col: 32,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"null\",\n          type: \"literal\",\n          line: 102,\n          col: 42,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 102,\n            col: 41,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 102,\n          col: 30,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.hasKey__QUERY = (function hasKey__QUERY$(object, key) {\n    /* has-key? src/macros/predicates.sibilant:109:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 110,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 110,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"has-own-property\",\n          type: \"literal\",\n          line: 110,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, object, key ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.lowerCase__QUERY = (function lowerCase__QUERY$(str) {\n    /* lower-case? src/macros/predicates.sibilant:115:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 116,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 116,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 117,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          line: 117,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 117,\n          col: 13,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \".\",\n            type: \"dots\",\n            line: 117,\n            col: 14,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"to-upper-case\",\n              type: \"literal\",\n              line: 117,\n              col: 15,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ],\n            precedingIgnored: []\n          }, str ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 117,\n            col: 12,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 116,\n          col: 12,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 117,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 118,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          line: 118,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 118,\n          col: 12,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \".\",\n            type: \"dots\",\n            line: 118,\n            col: 13,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"to-lower-case\",\n              type: \"literal\",\n              line: 118,\n              col: 14,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ],\n            precedingIgnored: []\n          }, str ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 118,\n            col: 11,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 117,\n          col: 40,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 118,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.upperCase__QUERY = (function upperCase__QUERY$(str) {\n    /* upper-case? src/macros/predicates.sibilant:125:0 */\n  \n    return {\n      file: \"src/macros/predicates.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 126,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        line: 126,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 127,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          line: 127,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 127,\n          col: 13,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \".\",\n            type: \"dots\",\n            line: 127,\n            col: 14,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"to-lower-case\",\n              type: \"literal\",\n              line: 127,\n              col: 15,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ],\n            precedingIgnored: []\n          }, str ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 127,\n            col: 12,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 126,\n          col: 12,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 127,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        file: \"src/macros/predicates.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 128,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          line: 128,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 128,\n          col: 12,\n          contents: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \".\",\n            type: \"dots\",\n            line: 128,\n            col: 13,\n            contents: [ {\n              file: \"src/macros/predicates.sibilant\",\n              token: \"to-upper-case\",\n              type: \"literal\",\n              line: 128,\n              col: 14,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ],\n            precedingIgnored: []\n          }, str ],\n          precedingIgnored: [ {\n            file: \"src/macros/predicates.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 128,\n            col: 11,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 127,\n          col: 40,\n          contents: []\n        }, {\n          file: \"src/macros/predicates.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          line: 128,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.match__QUERY = (function match__QUERY$(regexp, string) {\n    /* match? src/macros/regex.sibilant:6:0 */\n  \n    return {\n      file: \"src/macros/regex.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 7,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/regex.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 7,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \"match\",\n          type: \"literal\",\n          line: 7,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, regexp ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.matchRegex__QUERY = (function matchRegex__QUERY$(string, pattern, flags) {\n    /* match-regex? src/macros/regex.sibilant:12:0 */\n  \n    return {\n      file: \"src/macros/regex.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 13,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/regex.sibilant\",\n        token: \"match?\",\n        type: \"literal\",\n        line: 13,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/regex.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 13,\n        col: 16,\n        contents: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          line: 13,\n          col: 17,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern, flags ],\n        precedingIgnored: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 13,\n          col: 15,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, string ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.replace = (function replace$(string, pattern, replacement) {\n    /* replace src/macros/regex.sibilant:19:0 */\n  \n    return {\n      file: \"src/macros/regex.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 20,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/regex.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 20,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \"replace\",\n          type: \"literal\",\n          line: 20,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, {\n        file: \"src/macros/regex.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 21,\n        col: 14,\n        contents: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          line: 21,\n          col: 15,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern ],\n        precedingIgnored: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          line: 20,\n          col: 25,\n          contents: []\n        }, {\n          file: \"src/macros/regex.sibilant\",\n          token: \"              \",\n          type: \"whitespace\",\n          line: 21,\n          col: 0,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, replacement ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.replaceAll = (function replaceAll$(string, pattern, replacement) {\n    /* replace-all src/macros/regex.sibilant:27:0 */\n  \n    return {\n      file: \"src/macros/regex.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 28,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/regex.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        line: 28,\n        col: 9,\n        contents: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \"replace\",\n          type: \"literal\",\n          line: 28,\n          col: 10,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, {\n        file: \"src/macros/regex.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 28,\n        col: 26,\n        contents: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          line: 28,\n          col: 27,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern, {\"file\":\"src/macros/regex.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"line\":28,\"col\":42,\"contents\":[{\"file\":\"src/macros/regex.sibilant\",\"token\":\"g\",\"type\":\"literal\",\"line\":28,\"col\":43,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"file\":\"src/macros/regex.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"line\":28,\"col\":41,\"contents\":[]}]} ],\n        precedingIgnored: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 28,\n          col: 25,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, replacement ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.regex = (function regex$(pattern, flags) {\n    /* regex src/macros/regex.sibilant:33:0 */\n  \n    return {\n      file: \"src/macros/regex.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      line: 34,\n      col: 8,\n      contents: [ {\n        file: \"src/macros/regex.sibilant\",\n        token: \"new\",\n        type: \"literal\",\n        line: 34,\n        col: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        file: \"src/macros/regex.sibilant\",\n        token: \"RegExp\",\n        type: \"literal\",\n        line: 34,\n        col: 13,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          file: \"src/macros/regex.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          line: 34,\n          col: 12,\n          contents: []\n        } ]\n      }, pattern, (flags || \"undefined\") ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.switch = (function switch$(obj, cases) {\n    /* switch src/macros/switch.sibilant:13:0 */\n  \n    var cases = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(function() {\", indent([ \"switch(\", transpile(obj), \") {\", map(cases, (function(caseDef) {\n      /* src/macros/switch.sibilant:16:30 */\n    \n      var caseNameNode = caseDef.contents[0],\n          caseLabels = (function() {\n        if (node__QUERY(caseNameNode, \"expression\", \"bracket\")) {\n          return caseNameNode.contents;\n        } else {\n          return [ caseNameNode ];\n        }\n      }).call(this),\n          caseString = interleave(\"\\n\", map(caseLabels, (function(c) {\n        /* src/macros/switch.sibilant:22:78 */\n      \n        return (function() {\n          if (\"default\" === c.token) {\n            return \"default:\";\n          } else {\n            return [ \"case \", transpile(c), \":\" ];\n          }\n        }).call(this);\n      })));\n      return [ \"\\n\", caseString, indent({\n        file: \"src/macros/switch.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 26,\n        col: 59,\n        contents: [ {\n          file: \"src/macros/switch.sibilant\",\n          token: \"do\",\n          type: \"literal\",\n          line: 26,\n          col: 60,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(caseDef.contents.slice(1)),\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }) ];\n    })), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n    /* var src/macros/variables.sibilant:15:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return asStatement([ \"var \", interleave(map(destructure(pairs), (function(pair) {\n      /* src/macros/variables.sibilant:19:25 */\n    \n      return [ pair[0], \" = \", pair[1] ];\n    })), \",\\n    \") ]);\n  });\n  sibilant.macros.namespaces.core.assign = (function assign$(pairs) {\n    /* assign src/macros/variables.sibilant:38:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(map(destructure(pairs), (function(pair) {\n      /* src/macros/variables.sibilant:41:17 */\n    \n      return asStatement([ pair[0], \" = \", pair[1] ]);\n    })), \"\\n\");\n  });\n  sibilant.macros.namespaces.core.default = (function default$(pairs) {\n    /* default src/macros/variables.sibilant:49:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", bulkMap(pairs, (function(name, value) {\n      /* src/macros/variables.sibilant:50:40 */\n    \n      return {\n        file: \"src/macros/variables.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        line: 51,\n        col: 35,\n        contents: [ {\n          file: \"src/macros/variables.sibilant\",\n          token: \"assign\",\n          type: \"literal\",\n          line: 51,\n          col: 36,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, name, {\n          file: \"src/macros/variables.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          line: 51,\n          col: 49,\n          contents: [ {\n            file: \"src/macros/variables.sibilant\",\n            token: \"ternary\",\n            type: \"literal\",\n            line: 51,\n            col: 50,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            file: \"src/macros/variables.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            line: 51,\n            col: 58,\n            contents: [ {\n              file: \"src/macros/variables.sibilant\",\n              token: \"defined?\",\n              type: \"literal\",\n              line: 51,\n              col: 59,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, name ],\n            precedingIgnored: [ {\n              file: \"src/macros/variables.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              line: 51,\n              col: 57,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, name, value ],\n          precedingIgnored: [ {\n            file: \"src/macros/variables.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            line: 51,\n            col: 48,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      };\n    })));\n  });\n  var docs = sibilant.docs = {\n    definitions: [],\n    undocumented: {  }\n  };\n  docs.record = (function docs$record$(type, namespace, name, node) {\n    /* docs.record src/docs.sibilant:4:0 */\n  \n    var doc = docs.lastDoc;\n    (function() {\n      if (typeof doc !== \"undefined\") {\n        delete sibilant.docs.undocumented[name];\n        return sibilant.docs.definitions.push(mergeInto(doc, {\n          name: name,\n          type: type,\n          namespace: namespace,\n          definition: node\n        }));\n      } else {\n        return sibilant.docs.undocumented[name] = true;\n      }\n    }).call(this);\n    return delete sibilant.docs.lastDoc;\n  });\n  docs.tags = (function docs$tags$() {\n    /* docs.tags src/docs.sibilant:16:0 */\n  \n    var tags = flatten(pluck(docs.definitions, \"tags\")),\n        counts = {  };\n    tags.forEach((function(tag) {\n      /* src/docs.sibilant:19:5 */\n    \n      return counts[tag] = ((counts[tag] || 0) + 1);\n    }));\n    return counts;\n  });\n  docs.text = (function docs$text$() {\n    /* docs.text src/docs.sibilant:27:0 */\n  \n    return docs.definitions.sort((function(a, b) {\n      /* src/docs.sibilant:29:16 */\n    \n      return prettify(a.name, false).localeCompare(prettify(b.name, false));\n    })).map((function(definition) {\n      /* src/docs.sibilant:34:15 */\n    \n      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n        if (definition.references) {\n          return (\"references:\\n  \" + (definition.references.map((function() {\n            /* src/docs.sibilant:40:51 */\n          \n            return eval(outputFormatter(transpile(arguments[0])));\n          })).join(\"\\n  \") + \"\\n\"));\n        } else {\n          return \"\";\n        }\n      }).call(this) + (function() {\n        if (definition.tags) {\n          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n        } else {\n          return \"\";\n        }\n      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n        /* src/docs.sibilant:51:43 */\n      \n        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n      })).join(\"\\n\\n\") + \"\\n\\n\");\n    })).join(\"\");\n  });\n  docs.textNoColor = (function docs$textNoColor$() {\n    /* docs.text-no-color src/docs.sibilant:58:0 */\n  \n    var stripAnsi = require(\"strip-ansi\");\n    return stripAnsi(docs.text());\n  });\n  docs.json = (function docs$json$() {\n    /* docs.json src/docs.sibilant:63:0 */\n  \n    return JSON.stringify(docs.data());\n  });\n  docs.data = (function docs$data$() {\n    /* docs.data src/docs.sibilant:66:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* src/docs.sibilant:68:6 */\n    \n      return {\n        name: prettify(definition.name, false),\n        namespace: definition.namespace,\n        type: definition.type,\n        description: definition.docString,\n        references: (function() {\n          if (definition.references) {\n            return definition.references.map((function() {\n              /* src/docs.sibilant:74:52 */\n            \n              return arguments[0].token.slice(1, -1);\n            }));\n          } else {\n            return [];\n          }\n        }).call(this),\n        arguments: definition.definition.contents[2].contents.map((function() {\n          /* src/docs.sibilant:79:30 */\n        \n          return prettify(arguments[0], false);\n        })),\n        definition: prettify(definition.definition, false),\n        examples: (definition.examples || []).map((function() {\n          /* src/docs.sibilant:82:29 */\n        \n          return {\n            javascript: outputFormatter(transpile(arguments[0])),\n            sibilant: prettify(arguments[0], false)\n          };\n        })),\n        tags: definition.tags\n      };\n    }));\n  });\n  var debug__BANG = (function debug__BANG$(level, message) {\n    /* debug! src/helpers.sibilant:1:0 */\n  \n    var message = Array.prototype.slice.call(arguments, 1);\n  \n    var debug = sibilant.debug;\n    return (function() {\n      if ((debug && level <= debug)) {\n        return message.forEach((function() {\n          /* src/helpers.sibilant:4:29 */\n        \n          return console.log(arguments[0]);\n        }));\n      }\n    }).call(this);\n  });\n  var recurseIndent = (function recurseIndent$(arg) {\n    /* recurse-indent src/helpers.sibilant:6:0 */\n  \n    return (function() {\n      if (node__QUERY(arg)) {\n        return mergeInto(arg, { contents: recurseIndent(flatCompact(arg.contents)) });\n      } else if ((arg && \"object\" === typeof arg && \"Array\" === arg.constructor.name)) {\n        return map(arg, recurseIndent);\n      } else if (typeof arg === \"number\") {\n        return arg.toString();\n      } else if (typeof arg === \"string\") {\n        return arg.replace((new RegExp(\"\\\\n\", \"g\")), \"\\n  \").replace((new RegExp(\"\\\\n\\\\s+\\\\n\", \"g\")), \"\\n\\n\");\n      } else {\n        return arg;\n      }\n    }).call(this);\n  });\n  var indent = (function indent$(args) {\n    /* indent src/helpers.sibilant:16:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"\\n  \", recurseIndent(map(args, transpile)), \"\\n\" ];\n  });\n  var escapeRegex = (function escapeRegex$(string) {\n    /* escape-regex src/helpers.sibilant:19:0 */\n  \n    return string.replace((new RegExp(\"[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\^\\\\$\\\\|]\", \"g\")), \"\\\\$&\");\n  });\n  var qescape = (function qescape$(content) {\n    /* qescape src/helpers.sibilant:22:0 */\n  \n    return (function() {\n      if (!((typeof content !== \"undefined\" && content !== null))) {\n        return \"\";\n      } else if (typeof content === \"string\") {\n        return content.split(\"\\\\\\\\ \"[0]).join(\"\\\\\\\\ \".slice(0, -1)).replace((new RegExp(\"\\\"\", \"g\")), \"\\\\\\\"\").replace((new RegExp(\"\\\\n\", \"g\")), \"\\\\n\\\" +\\n\\\"\");\n      } else {\n        return content;\n      }\n    }).call(this);\n  });\n  var mapNode = (function mapNode$(node, fn) {\n    /* map-node src/helpers.sibilant:32:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        var mappedNode = fn(node);\n        (function() {\n          if (node__QUERY(mappedNode)) {\n            return mappedNode.contents = mapNode(mappedNode.contents, fn);\n          }\n        }).call(this);\n        return mappedNode;\n      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n        return map(node, (function() {\n          /* src/helpers.sibilant:41:27 */\n        \n          return mapNode(arguments[0], fn);\n        }));\n      } else {\n        return fn(node);\n      }\n    }).call(this);\n  });\n  var eachNode = (function eachNode$(node, fn) {\n    /* each-node src/helpers.sibilant:45:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        return (function() {\n          if (fn(node)) {\n            return eachNode(node.contents, fn);\n          }\n        }).call(this);\n      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n        return node.forEach((function(c) {\n          /* src/helpers.sibilant:48:17 */\n        \n          return eachNode(c, fn);\n        }));\n      } else {\n        return fn(node);\n      }\n    }).call(this);\n  });\n  var statement__QUERY = (function statement__QUERY$(transpiled) {\n    /* statement? src/helpers.sibilant:51:0 */\n  \n    return (function() {\n      if (node__QUERY(transpiled)) {\n        return statement__QUERY(transpiled.contents);\n      } else if ((transpiled && \"object\" === typeof transpiled && \"Array\" === transpiled.constructor.name)) {\n        return statement__QUERY(transpiled.slice(-1)[0]);\n      } else if (typeof transpiled === \"string\") {\n        return \";\" === transpiled.slice(-1)[0];\n      } else {\n        return false;\n      }\n    }).call(this);\n  });\n  var asStatement = (function asStatement$(node) {\n    /* as-statement src/helpers.sibilant:58:0 */\n  \n    var transpiled = transpile(node);\n    return (function() {\n      if (emptyNode__QUERY(transpiled)) {\n        return undefined;\n      } else if (statement__QUERY(transpiled)) {\n        return transpiled;\n      } else {\n        return [ transpiled, \";\" ];\n      }\n    }).call(this);\n  });\n  var unquote__QUERY = (function unquote__QUERY$(node) {\n    /* unquote? src/helpers.sibilant:65:0 */\n  \n    return node__QUERY(node, \"at\");\n  });\n  var findUnquotes = (function findUnquotes$(node) {\n    /* find-unquotes src/helpers.sibilant:67:0 */\n  \n    var unquotes = {  };\n    eachNode(node, (function(n) {\n      /* src/helpers.sibilant:69:21 */\n    \n      (function() {\n        if (unquote__QUERY(n)) {\n          return unquotes[n.nodeId] = transpile(n);\n        }\n      }).call(this);\n      return !(node__QUERY(n, \"tick\"));\n    }));\n    return unquotes;\n  });\n  var spliceDots = (function spliceDots$(node) {\n    /* splice-dots src/helpers.sibilant:75:0 */\n  \n    (function() {\n      if ((node && (node.contents && \"object\" === typeof node.contents && \"Array\" === node.contents.constructor.name))) {\n        var contents = [];\n        node.contents.forEach((function(content) {\n          /* src/helpers.sibilant:78:11 */\n        \n          return (function() {\n            if ((node__QUERY(content, \"dots\") && (content.contents && \"object\" === typeof content.contents && \"Array\" === content.contents.constructor.name) && content.contents.length === 1 && (content.contents[0] && \"object\" === typeof content.contents[0] && \"Array\" === content.contents[0].constructor.name))) {\n              return contents.push.apply(contents, content.contents[0]);\n            } else {\n              return contents.push(content);\n            }\n          }).call(this);\n        }));\n        return node.contents = contents;\n      }\n    }).call(this);\n    return node;\n  });\n  var alternatingKeysAndValues = (function alternatingKeysAndValues$(hash) {\n    /* alternating-keys-and-values src/helpers.sibilant:90:0 */\n  \n    return flatten(map(Object.keys(hash), (function(key) {\n      /* src/helpers.sibilant:92:14 */\n    \n      return [ key, hash[key] ];\n    })));\n  });\n  var mapNodeForQuoteExpansion = (function mapNodeForQuoteExpansion$(node, expansions) {\n    /* map-node-for-quote-expansion src/helpers.sibilant:95:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        var mappedNode = (function() {\n          if (expansions.hasOwnProperty(node.nodeId)) {\n            return expansions[node.nodeId];\n          } else {\n            return clone(node);\n          }\n        }).call(this);\n        (function() {\n          if (node__QUERY(mappedNode)) {\n            return mappedNode.contents = mapNodeForQuoteExpansion(mappedNode.contents, expansions);\n          }\n        }).call(this);\n        mappedNode = spliceDots(mappedNode);\n        return mappedNode;\n      } else if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n        return map(node, (function() {\n          /* src/helpers.sibilant:105:27 */\n        \n          return mapNodeForQuoteExpansion(arguments[0], expansions);\n        }));\n      } else {\n        return node;\n      }\n    }).call(this);\n  });\n  var dotsAndAt = (function dotsAndAt$(content) {\n    /* dots-and-at src/helpers.sibilant:109:0 */\n  \n    return (node__QUERY(content, \"dots\") && 3 === content.token.length && node__QUERY(content.contents[0], \"at\"));\n  });\n  var replace__BANG = (function replace__BANG$(content) {\n    /* replace! src/helpers.sibilant:114:0 */\n  \n    return (function() {\n      if (dotsAndAt(content)) {\n        return mergeWith(content, { contents: [ transpile(content.contents[0]) ] });\n      } else if (node__QUERY(content, \"at\")) {\n        return transpile(content.contents[0]);\n      } else if (node__QUERY(content, \"tick\")) {\n        return JSON.stringify(content);\n      } else if ((\"object\" === typeof content && content !== null && content.constructor.name !== \"Array\")) {\n        return sibilant.macros.namespaces.core.hash.apply(this, Object.keys(content).reduce((function() {\n          /* src/helpers.sibilant:123:34 */\n        \n          return arguments[0].concat([ arguments[1], replace__BANG(content[arguments[1]]) ]);\n        }), []));\n      } else if ((content && \"object\" === typeof content && \"Array\" === content.constructor.name)) {\n        return sibilant.macros.namespaces.core.list.apply(this, map(content, replace__BANG));\n      } else if (typeof content === \"undefined\") {\n        return \"undefined\";\n      } else if (typeof content === \"number\") {\n        return content.toString();\n      } else {\n        return JSON.stringify(content);\n      }\n    }).call(this);\n  });\n  var node__QUERY = (function node__QUERY$(thing, type, type2, type3, type4, testArg) {\n    /* node? src/helpers.sibilant:132:0 */\n  \n    var a = arguments;\n    return (thing && thing.type && thing.contents && (function() {\n      if (testArg) {\n        return Array.prototype.slice.call(a, 1).indexOf(thing.type) !== -1;\n      } else if (type) {\n        return (thing.type === type || thing.type === type2 || thing.type === type3 || thing.type === type4);\n      } else {\n        return true;\n      }\n    }).call(this));\n  });\n  var emptyNode__QUERY = (function emptyNode__QUERY$(item) {\n    /* empty-node? src/helpers.sibilant:148:0 */\n  \n    return (function() {\n      if (item === null) {\n        return true;\n      } else if (typeof item === \"undefined\") {\n        return true;\n      } else if (item === false) {\n        return true;\n      } else if (typeof item === \"string\") {\n        return item.match((new RegExp(\"^\\\\s*$\", undefined)));\n      } else if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n        return all__QUERY(item, emptyNode__QUERY);\n      } else if (node__QUERY(item)) {\n        return emptyNode__QUERY(item.contents);\n      } else {\n        return false;\n      }\n    }).call(this);\n  });\n  var compactNode = (function compactNode$(item) {\n    /* compact-node src/helpers.sibilant:158:0 */\n  \n    return (function() {\n      if (node__QUERY(item)) {\n        item.contents = compactNode(item.contents);\n        return (function() {\n          if ((item.contents && item.contents.length)) {\n            return item;\n          } else {\n            return null;\n          }\n        }).call(this);\n      } else if ((item && \"object\" === typeof item && \"Array\" === item.constructor.name)) {\n        var compacted = compact(map(item, compactNode));\n        return (function() {\n          if ((compacted && compacted.length)) {\n            return compacted;\n          } else {\n            return null;\n          }\n        }).call(this);\n      } else if ((item === \"\" || item === false)) {\n        return null;\n      } else {\n        return item;\n      }\n    }).call(this);\n  });\n  var generateSymbol = (function generateSymbol$(clue) {\n    /* generate-symbol src/helpers.sibilant:171:0 */\n  \n    var state = sibilant.state;\n    clue = (typeof clue !== \"undefined\") ? clue : \"temp\";\n    state.symbolCounts = (typeof state.symbolCounts !== \"undefined\") ? state.symbolCounts : {  };\n    var count = ((state.symbolCounts[clue] || 0) + 1);\n    state.symbolCounts[clue] = count;\n    return [ (\"\" + clue + \"$\" + count) ];\n  });\n  var makeSymbolClue = (function makeSymbolClue$(node) {\n    /* make-symbol-clue src/helpers.sibilant:182:0 */\n  \n    var targetNode = (function() {\n      if ((node__QUERY(node, \"expression\") && node.contents[0].token === \"require\")) {\n        return node.contents[1];\n      } else if (node__QUERY(node, \"expression\")) {\n        return node.contents[0];\n      } else {\n        return node;\n      }\n    }).call(this);\n    return (function() {\n      try {\n        return outputFormatter(transpile(targetNode));\n      } catch (e) {\n        return sibilant.prettyPrint(node, false);\n      }\n    }).call(this).replace((new RegExp(\"[^a-zA-Z]+\", \"g\")), \"_\").replace((new RegExp(\"^_|_$\", \"g\")), \"\").slice(0, 15);\n  });\n  var destructure = (function destructure$(pairs) {\n    /* destructure src/helpers.sibilant:193:0 */\n  \n    var destructured = [];\n    bulkMap(pairs, (function(lhs, rhs) {\n      /* src/helpers.sibilant:195:21 */\n    \n      var transpiledRhs = transpile(rhs);\n      return (function() {\n        switch(lhs.type) {\n        case \"bracket\":\n          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9$]+$\", undefined))),\n              source = (function() {\n            if (literalRhs__QUERY) {\n              return transpiledRhs;\n            } else {\n              var symbol = generateSymbol(makeSymbolClue(rhs));\n              destructured.push([ symbol, transpiledRhs ]);\n              return symbol;\n            }\n          }).call(this);\n          lhs.contents.forEach((function(item, index) {\n            /* src/helpers.sibilant:205:32 */\n          \n            return destructured.push([ transpile(item), {\n              file: \"src/helpers.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 206,\n              col: 76,\n              contents: [ {\n                file: \"src/helpers.sibilant\",\n                token: \"get\",\n                type: \"literal\",\n                line: 206,\n                col: 77,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, source, index ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ]);\n          }));\n          return (function() {\n            if (!(literalRhs__QUERY)) {\n              return destructured.push([ source, \"undefined\" ]);\n            }\n          }).call(this);\n        \n        case \"brace\":\n          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9$]+$\", undefined))),\n              source = (function() {\n            if (literalRhs__QUERY) {\n              return transpiledRhs;\n            } else if (1 === lhs.contents.length) {\n              return [ \"(\", rhs, \")\" ];\n            } else {\n              var symbol = generateSymbol(makeSymbolClue(rhs));\n              destructured.push([ symbol, transpiledRhs ]);\n              return symbol;\n            }\n          }).call(this);\n          lhs.contents.forEach((function(item, index) {\n            /* src/helpers.sibilant:218:32 */\n          \n            var trItem = transpile(item);\n            return destructured.push([ trItem, {\n              file: \"src/helpers.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              line: 220,\n              col: 67,\n              contents: [ {\n                file: \"src/helpers.sibilant\",\n                token: \"get\",\n                type: \"literal\",\n                line: 220,\n                col: 68,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, source, [ \"\\\"\", trItem, \"\\\"\" ] ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ]);\n          }));\n          return (function() {\n            if (!((literalRhs__QUERY || 1 === lhs.contents.length))) {\n              return destructured.push([ source, \"undefined\" ]);\n            }\n          }).call(this);\n        \n        default:\n          return destructured.push([ transpile(lhs), (function() {\n            if (rhs) {\n              return transpiledRhs;\n            } else {\n              return \"undefined\";\n            }\n          }).call(this) ]);\n        }\n      }).call(this);\n    }));\n    return destructured;\n  });\n  var recurseTranspile = (function recurseTranspile$(node) {\n    /* recurse-transpile src/transpiler.sibilant:1:0 */\n  \n    return (function() {\n      if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n        return map(node, recurseTranspile);\n      } else if (node__QUERY(node, \"output\")) {\n        return mergeInto(node, { contents: recurseTranspile(node.contents) });\n      } else if (node__QUERY(node)) {\n        return transpile(node);\n      } else {\n        return node;\n      }\n    }).call(this);\n  });\n  var transpile = (function transpile$(node, preprocessor) {\n    /* transpile src/transpiler.sibilant:13:0 */\n  \n    (function() {\n      if (typeof node === \"string\") {\n        return node = {\n          type: \"js\",\n          token: node,\n          contents: []\n        };\n      } else if (typeof node === \"number\") {\n        return node = {\n          type: \"number\",\n          token: node.toString(),\n          contents: []\n        };\n      }\n    }).call(this);\n    return (function() {\n      if ((node && \"object\" === typeof node && \"Array\" === node.constructor.name)) {\n        return node;\n      } else if ((typeof node !== \"undefined\" && node !== null)) {\n        var transpiler = (transpile[node.type] || transpile.default),\n            result = transpiler(node),\n            resultNode = recurseTranspile((function() {\n          if (node__QUERY(result)) {\n            return result;\n          } else {\n            return {\n              contents: result,\n              type: \"output\"\n            };\n          }\n        }).call(this));\n        (function() {\n          if (typeof resultNode === \"undefined\") {\n            console.log((\"\" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\" + prettify(node) + \"\"));\n            console.log(prettify(result));\n            console.log(prettify(transpile(result)));\n            throw (new Error((\"Encountered an undefined return from recursive transpile.\\n\" + \"Please report this bug at \" + \"https://github.com/jbr/sibilant/issues/new\")))\n          }\n        }).call(this);\n        resultNode.contents = flatCompact(resultNode.contents);\n        resultNode.source = node;\n        return (function() {\n          if (emptyNode__QUERY(resultNode)) {\n            return undefined;\n          } else {\n            return resultNode;\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.transpile = transpile;\n  var readerMacros = {  };\n  transpile.hat = (function transpile$hat$(node) {\n    /* transpile.hat src/transpiler.sibilant:55:0 */\n  \n    var token = node.contents[0].token,\n        if$2 = (function() {\n      if (token.match((new RegExp(\"\\/\", undefined)))) {\n        return token.split(\"/\");\n      } else {\n        return [ sibilant.macros.searchPath[0], token ];\n      }\n    }).call(this),\n        namespace = if$2[0],\n        macro = if$2[1],\n        if$2 = undefined;\n    return sibilant.macros.namespaces.core.get.call(node, \"sibilant.macros.namespaces\", sibilant.macros.namespaces.core.quote(transpile.literal({ token: namespace })), sibilant.macros.namespaces.core.quote(transpile.literal({ token: macro })));\n  });\n  transpile.tick = (function transpile$tick$(node) {\n    /* transpile.tick src/transpiler.sibilant:66:0 */\n  \n    return sibilant.macros.namespaces.core.quote.apply(node, node.contents);\n  });\n  transpile.at = (function transpile$at$(node) {\n    /* transpile.at src/transpiler.sibilant:69:0 */\n  \n    return transpile(node.contents[0]);\n  });\n  transpile.dots = (function transpile$dots$(node) {\n    /* transpile.dots src/transpiler.sibilant:72:0 */\n  \n    return sibilant.macros.namespaces.core.dots.apply(node, node.contents);\n  });\n  transpile.default = (function transpile$default$(node) {\n    /* transpile.default src/transpiler.sibilant:75:0 */\n  \n    return node.token;\n  });\n  transpile.output = (function transpile$output$(node) {\n    /* transpile.output src/transpiler.sibilant:78:0 */\n  \n    return node;\n  });\n  transpile.number = (function transpile$number$(node) {\n    /* transpile.number src/transpiler.sibilant:81:0 */\n  \n    return parseFloat(node.token.replace((new RegExp(\",\", \"g\")), \"\")).toString();\n  });\n  transpile.root = (function transpile$root$(node) {\n    /* transpile.root src/transpiler.sibilant:86:0 */\n  \n    return (function() {\n      if (1 === node.contents.length) {\n        return transpile(node.contents[0]);\n      } else {\n        return interleave(compact(map(node.contents, asStatement)), \"\\n\");\n      }\n    }).call(this);\n  });\n  transpile.expression = (function transpile$expression$(node, preprocessor) {\n    /* transpile.expression src/transpiler.sibilant:95:0 */\n  \n    return (function() {\n      if (node.contents.length) {\n        var head = node.contents[0],\n            args = node.contents,\n            macro = sibilant.resolveMacro(\"call\");\n        (function() {\n          if (node__QUERY(head, \"string\")) {\n            return macro = sibilant.resolveMacro(\"concat\");\n          } else if (node__QUERY(head, \"dots\")) {\n            macro = sibilant.resolveMacro(\"send\");\n            return args = [ node.contents[1], head.contents[0] ].concat(node.contents.slice(2));\n          } else if ((node__QUERY(head, \"literal\") && head.token[0] === \".\")) {\n            macro = sibilant.resolveMacro(\"send\");\n            return args = [ node.contents[1], mergeInto(head, { token: head.token.slice(1) }) ].concat(node.contents.slice(2));\n          } else if (node__QUERY(head, \"literal\", \"otherChar\")) {\n            var resolvedMacro = sibilant.resolveMacro(outputFormatter(transpile(head)));\n            return (function() {\n              if (resolvedMacro) {\n                head.hint = \"macro\";\n                macro = resolvedMacro;\n                return args = node.contents.slice(1);\n              }\n            }).call(this);\n          }\n        }).call(this);\n        return macro.apply(node, args);\n      } else {\n        return \"null\";\n      }\n    }).call(this);\n  });\n  transpile.bracket = (function transpile$bracket$(node) {\n    /* transpile.bracket src/transpiler.sibilant:133:0 */\n  \n    return sibilant.macros.namespaces.core.list.apply(this, node.contents);\n  });\n  transpile.brace = (function transpile$brace$(node) {\n    /* transpile.brace src/transpiler.sibilant:136:0 */\n  \n    return sibilant.macros.namespaces.core.hash.apply(this, node.contents);\n  });\n  transpile.literal = (function transpile$literal$(node) {\n    /* transpile.literal src/transpiler.sibilant:138:0 */\n  \n    var string = node.token.replace((new RegExp(\"\\\\*\", \"g\")), \"_\"),\n        lastChar = string.slice(-1)[0];\n    string = (function() {\n      if (lastChar === \"?\") {\n        return (string.slice(0, -1) + \"__QUERY\");\n      } else if (lastChar === \"!\") {\n        return (string.slice(0, -1) + \"__BANG\");\n      } else {\n        return string;\n      }\n    }).call(this);\n    return inject(string, string.match((new RegExp(\"-([a-zA-Z0-9])\", \"g\"))), (function(returnString, match) {\n      /* src/transpiler.sibilant:147:13 */\n    \n      var letter = match[1];\n      return returnString.replace(match, (function() {\n        if ((letter === letter.toUpperCase() && letter !== letter.toLowerCase())) {\n          return (\"_\" + letter);\n        } else {\n          return letter.toUpperCase();\n        }\n      }).call(this));\n    }));\n  });\n  transpile.string = (function transpile$string$(node) {\n    /* transpile.string src/transpiler.sibilant:154:0 */\n  \n    return node.token.split(\"\\n\").join(\"\\\\n\\\" +\\n\\\"\");\n  });\n  transpile.comment = (function transpile$comment$(node) {\n    /* transpile.comment src/transpiler.sibilant:159:0 */\n  \n    return null;\n  });\n  var docs = sibilant.docs = {\n    definitions: [],\n    undocumented: {  }\n  };\n  docs.record = (function docs$record$(type, namespace, name, node) {\n    /* docs.record src/docs.sibilant:4:0 */\n  \n    var doc = docs.lastDoc;\n    (function() {\n      if (typeof doc !== \"undefined\") {\n        delete sibilant.docs.undocumented[name];\n        return sibilant.docs.definitions.push(mergeInto(doc, {\n          name: name,\n          type: type,\n          namespace: namespace,\n          definition: node\n        }));\n      } else {\n        return sibilant.docs.undocumented[name] = true;\n      }\n    }).call(this);\n    return delete sibilant.docs.lastDoc;\n  });\n  docs.tags = (function docs$tags$() {\n    /* docs.tags src/docs.sibilant:16:0 */\n  \n    var tags = flatten(pluck(docs.definitions, \"tags\")),\n        counts = {  };\n    tags.forEach((function(tag) {\n      /* src/docs.sibilant:19:5 */\n    \n      return counts[tag] = ((counts[tag] || 0) + 1);\n    }));\n    return counts;\n  });\n  docs.text = (function docs$text$() {\n    /* docs.text src/docs.sibilant:27:0 */\n  \n    return docs.definitions.sort((function(a, b) {\n      /* src/docs.sibilant:29:16 */\n    \n      return prettify(a.name, false).localeCompare(prettify(b.name, false));\n    })).map((function(definition) {\n      /* src/docs.sibilant:34:15 */\n    \n      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n        if (definition.references) {\n          return (\"references:\\n  \" + (definition.references.map((function() {\n            /* src/docs.sibilant:40:51 */\n          \n            return eval(outputFormatter(transpile(arguments[0])));\n          })).join(\"\\n  \") + \"\\n\"));\n        } else {\n          return \"\";\n        }\n      }).call(this) + (function() {\n        if (definition.tags) {\n          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n        } else {\n          return \"\";\n        }\n      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n        /* src/docs.sibilant:51:43 */\n      \n        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n      })).join(\"\\n\\n\") + \"\\n\\n\");\n    })).join(\"\");\n  });\n  docs.textNoColor = (function docs$textNoColor$() {\n    /* docs.text-no-color src/docs.sibilant:58:0 */\n  \n    var stripAnsi = require(\"strip-ansi\");\n    return stripAnsi(docs.text());\n  });\n  docs.json = (function docs$json$() {\n    /* docs.json src/docs.sibilant:63:0 */\n  \n    return JSON.stringify(docs.data());\n  });\n  docs.data = (function docs$data$() {\n    /* docs.data src/docs.sibilant:66:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* src/docs.sibilant:68:6 */\n    \n      return {\n        name: prettify(definition.name, false),\n        namespace: definition.namespace,\n        type: definition.type,\n        description: definition.docString,\n        references: (function() {\n          if (definition.references) {\n            return definition.references.map((function() {\n              /* src/docs.sibilant:74:52 */\n            \n              return arguments[0].token.slice(1, -1);\n            }));\n          } else {\n            return [];\n          }\n        }).call(this),\n        arguments: definition.definition.contents[2].contents.map((function() {\n          /* src/docs.sibilant:79:30 */\n        \n          return prettify(arguments[0], false);\n        })),\n        definition: prettify(definition.definition, false),\n        examples: (definition.examples || []).map((function() {\n          /* src/docs.sibilant:82:29 */\n        \n          return {\n            javascript: outputFormatter(transpile(arguments[0])),\n            sibilant: prettify(arguments[0], false)\n          };\n        })),\n        tags: definition.tags\n      };\n    }));\n  });\n  var sibilize = (function sibilize$(input) {\n    /* sibilize src/require-and-include.sibilant:1:0 */\n  \n    var result = outputFormatter(transpile(restructure(parse(input))));\n    return result;\n  });\n  var sourcemap = (function sourcemap$(input) {\n    /* sourcemap src/require-and-include.sibilant:9:0 */\n  \n    return sourcemapper(transpile(restructure(parse(input))));\n  });\n  sibilant.sibilize = sibilize;\n  sibilant.version = (function sibilant$version$() {\n    /* sibilant.version src/require-and-include.sibilant:14:0 */\n  \n    return sibilant.packageInfo().version;\n  });\n  sibilant.stripShebang = (function sibilant$stripShebang$(data) {\n    /* sibilant.strip-shebang src/require-and-include.sibilant:17:0 */\n  \n    return data.replace((new RegExp(\"^#!.*\\\\n\", undefined)), \"\\n\");\n  });\n  sibilant.file = \"eval.sibilant\";\n  var withDirAndFile = (function withDirAndFile$(dir, file, fn) {\n    /* with-dir-and-file src/require-and-include.sibilant:22:0 */\n  \n    var before = {\n      dir: sibilant.dir,\n      file: sibilant.file\n    };\n    sibilant.dir = dir;\n    sibilant.file = file;\n    var retval = fn();\n    sibilant.dir = before.dir;\n    sibilant.file = before.file;\n    return retval;\n  });\n  sibilant.sourceCache = {  };\n  sibilant.sibilizeFile = (function sibilant$sibilizeFile$(fileName) {\n    /* sibilant.sibilize-file src/require-and-include.sibilant:39:0 */\n  \n    return outputFormatter(sibilant.transpileFile(fileName));\n  });\n  sibilant.sibilizeJson = (function sibilant$sibilizeJson$(fileName) {\n    /* sibilant.sibilize-json src/require-and-include.sibilant:44:0 */\n  \n    var before = sibilant.quoteHashKeys;\n    sibilant.quoteHashKeys = true;\n    var content = sibilant.sibilizeFile(fileName);\n    sibilant.quoteHashKeys = before;\n    return content;\n  });\n  var package = {\n    name: \"sibilant\",\n    version: \"0.5.5\",\n    keywords: [ \"lisp\", \"javascript\", \"language\" ],\n    description: \"javascript with a lisp\",\n    contributors: [ \"Jacob Rothstein <hi@jbr.me> (http://jbr.me)\", \"Matthew Phillips (http://www.matthewphillips.info/)\", \"Yuest Wang (http://yue.st/)\", \"Lyndon Tremblay (http://www.hoovy.org)\", \"David Sargeant (https://github.com/dubiousdavid)\" ],\n    repository: {\n      type: \"git\",\n      url: \"http://github.com/jbr/sibilant.git\"\n    },\n    bugs: {\n      mail: \"sibilant@librelist.com\",\n      url: \"http://github.com/jbr/sibilant/issues\"\n    },\n    bin: { sibilant: \"./bin/sibilant\" },\n    main: \"./lib/sibilant.js\",\n    license: \"MIT\",\n    devDependencies: {\n      stool: \">=0.0.7\",\n      diff: \">=2.2.1\",\n      \"strip-ansi\": \">=3.0.0\",\n      colors: \">=1.1.2\"\n    },\n    dependencies: {\n      \"source-map\": \">=0.5.3\",\n      \"source-map-support\": \">=0.3.3\",\n      cardinal: \">=0.6.0\"\n    },\n    scripts: { test: \"bin/sibilant -x stool.sibilant -- test\" }\n  };\n  sibilant.packageInfo = (function sibilant$packageInfo$() {\n    /* sibilant.package-info src/browser.sibilant:24:6 */\n  \n    return package;\n  });\n  sibilant.versionString = (function sibilant$versionString$() {\n    /* sibilant.version-string src/browser.sibilant:26:6 */\n  \n    return (package.name + \" browser version \" + package.version);\n  });\n  sibilant.dir = \"browser\";\n  sibilant.initialize = (function sibilant$initialize$() {\n    /* sibilant.initialize src/browser.sibilant:31:6 */\n  \n    return false;\n  });\n  var evalCode = (function evalCode$(js) {\n    /* eval-code src/browser.sibilant:32:13 */\n  \n    return (new Function(js))();\n  });\n  sibilant.include = (function sibilant$include$(url) {\n    /* sibilant.include src/browser.sibilant:35:6 */\n  \n    return $.get(url).done((function() {\n      /* src/browser.sibilant:36:32 */\n    \n      return evalCode(sibilize(arguments[0]));\n    }));\n  });\n  (function() {\n    if (typeof $ === \"function\") {\n      return $((function() {\n        /* src/browser.sibilant:39:15 */\n      \n        return map($.makeArray($(\"script[type=\\\"application/sibilant\\\"][src]\").map((function() {\n          /* src/browser.sibilant:42:26 */\n        \n          return this.src;\n        }))), sibilant.include);\n      }));\n    }\n  }).call(this);\n  return sibilant;\n}).call(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sibilant/lib/browser.js\n ** module id = 792\n ** module chunks = 1\n **/","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/strip-ansi/index.js\n ** module id = 793\n ** module chunks = 1\n **/","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ansi-regex/index.js\n ** module id = 794\n ** module chunks = 1\n **/","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nvar isRegExp = require('util').isRegExp;\n\n// Generate an internal UID to make the regexp pattern harder to guess.\nvar UID                 = Math.floor(Math.random() * 0x10000000000).toString(16);\nvar PLACE_HOLDER_REGEXP = new RegExp('\"@__(FUNCTION|REGEXP)-' + UID + '-(\\\\d+)__@\"', 'g');\n\nvar IS_NATIVE_CODE_REGEXP = /\\{\\s*\\[native code\\]\\s*\\}/g;\nvar UNSAFE_CHARS_REGEXP   = /[<>\\/\\u2028\\u2029]/g;\n\n// Mapping of unsafe HTML and invalid JavaScript line terminator chars to their\n// Unicode char counterparts which are safe to use in JavaScript strings.\nvar UNICODE_CHARS = {\n    '<'     : '\\\\u003C',\n    '>'     : '\\\\u003E',\n    '/'     : '\\\\u002F',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n};\n\nmodule.exports = function serialize(obj, space) {\n    var functions = [];\n    var regexps   = [];\n    var str;\n\n    // Creates a JSON string representation of the object and uses placeholders\n    // for functions and regexps (identified by index) which are later\n    // replaced.\n    str = JSON.stringify(obj, function (key, value) {\n        if (typeof value === 'function') {\n            return '@__FUNCTION-' + UID + '-' + (functions.push(value) - 1) + '__@';\n        }\n\n        if (typeof value === 'object' && isRegExp(value)) {\n            return '@__REGEXP-' + UID + '-' + (regexps.push(value) - 1) + '__@';\n        }\n\n        return value;\n    }, space);\n\n    // Protects against `JSON.stringify()` returning `undefined`, by serializing\n    // to the literal string: \"undefined\".\n    if (typeof str !== 'string') {\n        return String(str);\n    }\n\n    // Replace unsafe HTML and invalid JavaScript line terminator chars with\n    // their safe Unicode char counterpart. This _must_ happen before the\n    // regexps and functions are serialized and added back to the string.\n    str = str.replace(UNSAFE_CHARS_REGEXP, function (unsafeChar) {\n        return UNICODE_CHARS[unsafeChar];\n    });\n\n    if (functions.length === 0 && regexps.length === 0) {\n        return str;\n    }\n\n    // Replaces all occurrences of function and regexp placeholders in the JSON\n    // string with their string representations. If the original value can not\n    // be found, then `undefined` is used.\n    return str.replace(PLACE_HOLDER_REGEXP, function (match, type, valueIndex) {\n        if (type === 'REGEXP') {\n            return regexps[valueIndex].toString();\n        }\n\n        var fn           = functions[valueIndex];\n        var serializedFn = fn.toString();\n\n        if (IS_NATIVE_CODE_REGEXP.test(serializedFn)) {\n            throw new TypeError('Serializing native function: ' + fn.name);\n        }\n\n        return serializedFn;\n    });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/serialize-javascript/index.js\n ** module id = 795\n ** module chunks = 1\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/util.js\n ** module id = 796\n ** module chunks = 1\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 797\n ** module chunks = 1\n **/","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/support/isBufferBrowser.js\n ** module id = 798\n ** module chunks = 1\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 799\n ** module chunks = 1\n **/"],"sourceRoot":""}