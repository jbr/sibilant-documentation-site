{"version":3,"sources":["webpack:///worker.bundle.js","webpack:///webpack/bootstrap 967dcac8ae31b0ccde69?c8b2","webpack:///./worker.sibilant","webpack:///../sibilant/include/macros.sibilant?7fbe","webpack:///./~/sibilant/lib/browser.js","webpack:///./~/strip-ansi/index.js","webpack:///./~/ansi-regex/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p",0,"commands","$_symbol1_$","sibilant","undefined","sibilize","sibilantCode","onMessage","e","identifier","data","command","commandFn","returnValue","result","apply","this","error","message","postMessage","onmessage",558,"str","inspect","item","toSource","toString","bulkMap","arr","fn","index","groupSize","length","retArr","push","slice","inject","start","items","value","constructor","name","forEach","map","collector","select","detect","returnItem","$_symbol2_$","all__QUERY","none__QUERY","any__QUERY","reject","arguments","compact","interleave","glue","temp","concat","flatten","Array","prototype","recurseMap","subitem","pluck","attribute","mergeInto","into","from","Object","keys","key","clone","object","mapValues","mergeWith","log__BANG","args","inspect__BANG","console","log","util","colors","depth","color","code","join","black","red","green","brown","blue","purple","cyan","gray","boldGray","boldRed","boldGreen","yellow","boldBlue","boldPurple","boldCyan","white","prettyPrint","node","entry","realNewlines","node__QUERY","prettyPrinter","type","prettify","mapPretty","attr","colorize","token","closed","acceptablePairs","root","contents","output","split","string","hint","outputFormatter","transpile","$_symbol3_$","$_symbol4_$","parser","tokens","regex","comment","number","literal","special","at","tick","hat","dots","argPlaceholder","otherChar","openExpression","closeExpression","newline","whitespace","ignored","tokenPrecedence","orderedRegexes","x","RegExp","parse","context","position","stack","line","lastNewline","col","match","regexName","remainingInput","$_symbol5_$","r","exec","matchString","dir","file","indexOf","stringNewlineCount","lastIndexOf","restructurers","(","[","{","bracketTypes","restructure","input","parseStack","ignoredTokens","specials","restructurer","unclosedNode","Error","first","acceptIgnoredTokens","acceptSpecials","unshift","end","closingIgnored","shift","closeSpecials","openSpecial","precedingIgnored","accumulateIgnoredToken","coreNamespace","macroNamespaces","core","state","macros","namespaces","defaultSearchPath","searchPath","namespace","currentNamespace","resolveMacro","macroName","pathComponents","macro","hasOwnProperty","withDefaultSearchPath","searchPathBefore","ternary","cond","ifTrue","ifFalse","set","kvPairs","k","v","asStatement","pairs","get","obj","aliasMacro","currentMacroName","newMacroName","send","method","arglist","cons","rest","append","list","additional","scoped","body","second","third","last","a","b","or","and","mod","jsComparator","incrBy","increment","incr","decr","pattern","flags","thing","things","arg","truebody","falsebody","indent","pipe","calls","cloned","placeholder","placeholderIndex","placeholderBoundaries","content","replace","transpiled","when","condition","not","exp","unless","assign","logPretty","label","prettyLog","each","array","macroExpand","asBoolean","expr","tryblock","catchblock","state$","eval","symbol","symbolCount","newSymbolCount","until","regexp","replacement","replaceAll","thunk","lambdaOptions","mapNode","pipeThunk","objects","deleteMacro","macroNames","delmacro","renameMacro","argument","eachKey","as","cases","caseDef","caseNameNode","caseLabels","caseString","alternatingConditionsAndBranches","val","chain","lines","recurseIndent","haystack","needle","withState","before","destructured","lhs","rhs","transpiledRhs","literalRhs__QUERY","source","trItem","pair","importNamespace","namespaceAsString","sourceMappingUrl","sourceMappingUrl$","url","sortBy","arrayOfObjects","docs","definitions","undocumented","record","doc","lastDoc","definition","tags","counts","tag","text","docs$text$","docString","references","examples","textNoColor","stripAnsi","json","JSON","stringify","description","javascript","tap","escapeRegex","qescape","mappedNode","eachNode","statement__QUERY","emptyNode__QUERY","unquote__QUERY","findUnquotes","unquotes","n","nodeId","spliceDots","alternatingKeysAndValues","hash","mapNodeForQuoteExpansion","expansions","debug","defaultReturn","nonReturnPart","returnPart","emptyList","def","fnName","fnNameTr","thisNode","lambda","sibilant$macros$namespaces$core$macro$","nameTr","options","js","evaledJs","meta","sibilant$macros$namespaces$core$meta$","reverse","reversed","argsOrOptions","quotedHash","cachedQuoteValue","quoteHashKeys","quoteKeys","pairStrings","replace__BANG","reduce","prettyLogAndReturn","quote","sibilant$macros$namespaces$core$debug$","expandQuote","nodeCache","argSegments","simpleList","segment","include","sibilant$macros$namespaces$core$include$","files","sibilant$macros$namespaces$core$docs$","optionsString","optionsHash","pop","listAttribute","example","types","compactNode","compacted","recurseTranspile","preprocessor","transpiler","resultNode","readerMacros","$_symbol6_$","parseFloat","expression","head","resolvedMacro","bracket","brace","returnString","toUpperCase","initialize","sourcemap","sourcemapper","version","packageInfo","stripShebang","withDirAndFile","retval","sourceCache","sibilizeFile","fileName","transpileFile","sibilizeJson","package","keywords","contributors","repository","bugs","mail","bin","main","license","devDependencies","stool","diff","cardinal","dependencies","source-map","source-map-support","scripts","test","versionString","evalCode","Function","$","done","makeArray","src",559,"ansiRegex",560],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMMW,EACA,SAASP,EAAQD,EAASH,GE7ChC,GAAKY,MAALC,EACiBb,EAAQ,KAAnBc,ECkhC6DD,EAAAC,SDnhCnED,EAAAE,MAGKH,GAAAI,SAAL,SAAwBC,GAAxB,MACMH,GAAAE,SAAkBC,GAExB,IAAKC,GAAL,SAAiBC,GACZ,GAAOC,GFoDQD,EAAEE,KAAK,GEpDJC,EFqDNH,EAAEE,KAAK,GErDOA,EFsDjBF,EAAEE,KAAK,GErDXE,EAAgBX,EAASU,GACzBE,IAHV,OAKK,gBC0lBqB,MD1lBXA,GC4oC6CC,OD5oCjBF,EC+DjCG,MAAUC,KD/DkCN,GAAjD,MAAAF,GC4lBqB,MD3lBXK,GC2oC6CI,MD3oCzBT,EAAAU,UAD9BtB,KAAAoB,MAEoBG,aAAeV,EAAWI,IAE3CO,WAAUb,GF8DZc,IACA,SAAS5B,OAAQD,QAASH,qBI5EhC2B,KAAAb,SAAA,WAGA,GAAAA,aACAX,QAAAW,SACAc,MAAA,SAAAK,GAGA,KAAAA,IAEAC,QAAA,SAAAC,GAGA,kBACA,MAAAA,GAAAC,SACAD,EAAAC,WAEAD,EAAAE,YAEK9B,KAAAoB,OAELW,QAAA,SAAAC,EAAAC,GAGA,GAAAC,GAAA,EACAC,EAAAF,EAAAG,OACAC,IAWA,OAVA,YAEA,IADA,GAAA/B,GAAAE,OACA0B,EAAAF,EAAAI,QACA9B,EAAA,WAEA,MADA+B,GAAAC,KAAAL,EAAAd,MAAAC,KAAAY,EAAAO,MAAAL,IAAAC,KACAD,GAAAC,GACSnC,KAAAoB,KAET,OAAAd,IACKN,KAAAoB,MACLiB,GAEAG,OAAA,SAAAC,EAAAC,EAAAT,GAGA,GAAAU,GAAAF,CAUA,OATA,YACA,0CAAAG,YAAAC,KACAH,EAAAI,QAAA,SAAAlB,EAAAM,GAGA,MAAAS,GAAAV,EAAAU,EAAAf,EAAAM,KAJA,QAOKlC,KAAAoB,MACLuB,GAEAI,IAAA,SAAAL,EAAAT,GAGA,MAAAO,WAAAE,EAAA,SAAAM,EAAApB,EAAAM,GAIA,MADAc,GAAAV,KAAAL,EAAAL,EAAAM,IACAc,KAGAC,OAAA,SAAAP,EAAAT,GAGA,MAAAO,WAAAE,EAAA,SAAAM,EAAApB,EAAAM,GAQA,MALA,YACA,MAAAD,GAAAL,EAAAM,GACAc,EAAAV,KAAAV,GADA,QAGO5B,KAAAoB,MACP4B,KAGAE,OAAA,SAAAR,EAAAT,GAGA,GAAAkB,GAAA3C,OACA0B,EAAA,EACAQ,OAeA,OAdA,YAEA,IADA,GAAAU,GAAA5C,OACAkC,EAAAN,SAAAF,IAAAiB,GACAC,EAAA,WAMA,MALA,YACA,MAAAnB,GAAAS,EAAAR,MACAiB,EAAAT,EAAAR,GADA,QAGWlC,KAAAoB,MACX,KACSpB,KAAAoB,KAET,OAAAgC,IACKpD,KAAAoB,MACL+B,GAEAE,WAAA,SAAAX,EAAAT,GAGA,MAIK,mBAJLiB,QAAAR,EAAA,SAAAd,EAAAM,GAGA,OAAAD,EAAAL,EAAAM,MAGAoB,YAAA,SAAAZ,EAAAT,GAGA,yBAAAiB,QAAAR,EAAAT,IAEAsB,WAAA,SAAAb,EAAAT,GAGA,yBAAAiB,QAAAR,EAAAT,IAEAuB,OAAA,SAAAd,EAAAT,GAIA,MAAAgB,QAAAP,EAAA,WAGA,OAAAT,EAAAd,MAAAC,KAAAqC,cAGAC,QAAA,SAAA1B,GAGA,MAAAiB,QAAAjB,EAAA,SAAAJ,GAGA,cAAAA,IAAA,IAAAA,GAAA,mBAAAA,MAGA+B,WAAA,SAAAC,EAAA5B,GAUA,MAPA,YACA,mBAAAA,IAAA,mCAAAY,YAAAC,KAAA,CACA,GAAAgB,GAAAD,CAEA,OADAA,GAAA5B,EACAA,EAAA6B,IAEK7D,KAAAoB,MACL,WACA,0CAAAwB,YAAAC,KACAL,UAAAR,EAAA,SAAAgB,EAAApB,EAAAM,GAGA,MAAAc,GAAAc,QAAAlC,EAAAgC,EAAA1B,OAGAM,QAAAR,EAAA,IAAAA,EAAAO,MAAA,YAAAS,EAAApB,EAAAM,GAGA,MAAAc,GAAAc,QAAAF,EAAAhC,OAGK5B,KAAAoB,OAEL2C,QAAA,SAAArB,GAGA,GAAAA,GAAAsB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAjB,WAAAE,EAAA,SAAAM,EAAApB,GAGA,MAAAoB,GAAAc,OAAA,WACA,0CAAAlB,YAAAC,KACAkB,QAAA5C,MAAAC,KAAAQ,GAEAA,GAEO5B,KAAAoB,UAGP8C,WAAA,SAAAtC,EAAAK,GAGA,kBACA,0CAAAW,YAAAC,KACAE,IAAAnB,EAAA,SAAAuC,GAGA,MAAAD,YAAAC,EAAAlC,KAGAA,EAAAL,IAEK5B,KAAAoB,OAELgD,MAAA,SAAA1B,EAAA2B,GAGA,MAAAtB,KAAAL,EAAA,SAAAd,GAGA,MAAAA,GAAAyC,MAGAC,UAAA,SAAAC,EAAAC,GAQA,MALAC,QAAAC,KAAAF,GAAA1B,QAAA,SAAA6B,GAGA,MAAAJ,GAAAI,GAAAH,EAAAG,KAEAJ,GAEAK,MAAA,SAAAC,GAGA,MAAArC,WAAsBiC,OAAAC,KAAAG,GAAA,SAAA7B,EAAA2B,GAItB,MADA3B,GAAA2B,GAAAE,EAAAF,GACA3B,KAGA8B,UAAA,SAAAD,EAAA5C,GAGA,MAAAO,WAAsBiC,OAAAC,KAAAG,GAAA,SAAA7B,EAAA2B,EAAAzC,GAItB,MADAc,GAAA2B,GAAA1C,EAAA4C,EAAAF,MACA3B,KAGA+B,UAAA,SAAAR,EAAAC,GAGA,MAAAF,WAAAM,MAAAL,GAAAC,IAEAQ,UAAA,SAAAC,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAyB,eAAA/D,MAAAC,KAAA6D,GAAAnC,QAAA,WAGA,MAAAqC,SAAAC,IAAA3B,UAAA,OAGAyB,cAAA,SAAAD,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAwB,GAAAlC,IAAA,WAGA,MAAAsC,MAAA1D,QAAA8B,UAAA,IACA6B,QAAA,EACAC,MAAA,OAIAC,MAAA,SAAAC,EAAA/C,EAAA6C,GAGA,MAAAE,GAAA/C,EAAAgD,KAAA,YAEAC,MAAA,SAAAV,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBW,IAAA,SAAAX,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBY,MAAA,SAAAZ,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBa,MAAA,SAAAb,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBc,KAAA,SAAAd,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBe,OAAA,SAAAf,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBgB,KAAA,SAAAhB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBiB,KAAA,SAAAjB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBkB,SAAA,SAAAlB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBmB,QAAA,SAAAnB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBoB,UAAA,SAAApB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBqB,OAAA,SAAArB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBsB,SAAA,SAAAtB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBuB,WAAA,SAAAvB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzBwB,SAAA,SAAAxB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,IAEzByB,MAAA,SAAAzB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAA+B,OAAA,UAAyBP,GAEzB1E,UAAAoG,YAAA,SAAAC,EAAApB,EAAAqB,GAKA,MAFAA,GAAA,mBAAAA,MAAA,EACArB,EAAA,mBAAAA,MAAA,EACAsB,aAAA,WACA,GAAAC,YAAAH,GAAA,CACA,GAAAI,GAAAzG,SAAAoG,YAAAC,EAAAK,OAAA1G,SAAAoG,YAAApG,UACA,OAAAyG,GAAAJ,EAAApB,EAAAqB,GACO,0CAAAjE,YAAAC,KACP,WACA,MAAA2C,GACAG,MAAA,KAEA,IAES3F,KAAAoB,MAAA2B,IAAA6D,EAAA,WAGT,MAAAM,UAAAzD,UAAA,GAAA+B,GAAA,KACSE,KAAA,WACT,MAAAF,GACAG,MAAA,KAEA,IAES3F,KAAAoB,OAAA,WACT,MAAAoE,GACAG,MAAA,KAEA,IAES3F,KAAAoB,MACFoE,EACPI,IAAAjE,QAAAiF,IAEAE,aAAAnF,QAAAiF,KAEK5G,KAAAoB,OAEL,IAAA8F,UAAA3G,SAAAoG,WACApG,UAAAoG,YAAApG,WAAA,SAAAqG,EAAApB,EAAAqB,GAGA,GAAAM,GAAA,SAAAC,GAGA,GAAApF,GAAA4E,EAAAQ,EACA,mBACA,MAAApF,MAAAI,OACAW,IAAAf,EAAA,WAGA,MAAAkF,UAAAzD,UAAA,GAAA+B,GAAA,KACWE,KAAA,IAEX,IAEO1F,KAAAoB,MAEP,OAAA0F,cAAAvG,SAAAoG,YAAAU,SAAAT,EAAApB,EAAA,WACA,MAAAqB,GACA,GAEAM,EAAA,qBAEKnH,KAAAoB,MAAA+F,EAAA,aAAAP,EAAAU,MAAAH,EAAA,YAAAA,EAAA,mBAAAP,EAAAW,QAAAC,gBAAAZ,EAAAU,QAAA,OAEL/G,SAAAoG,YAAAc,KAAA,SAAAb,EAAApB,EAAAqB,GAGA,MAAA9D,KAAA6D,EAAAc,SAAA,WAGA,MAAAR,UAAAzD,UAAA,GAAA+B,GAAA,KACKE,KAAA,OAELnF,SAAAoG,YAAAgB,OAAA,SAAAf,EAAApB,GAGA,kBACA,MAAAA,GACAG,MAAA,KAEA,IAEK3F,KAAAoB,MAAA,WACL,MAAAwF,GAAA,0BAAAA,GAAA,oBAAAA,EAAA,SAAAhE,YAAAC,KACAE,IAAA6D,EAAAc,SAAA,WAGA,MAAAnH,UAAAoG,YAAAU,SAAAT,EAAApB,EAAA0B,SAAAzD,UAAA,GAAA+B,GAAA,MACSE,KAAA,WACT,MAAAF,GACAG,MAAA,KAEA,IAES3F,KAAAoB,OAETb,SAAAoG,YAAAU,SAAAT,EAAApB,EAAAoB,EAAAc,WAEK1H,KAAAoB,MAAA,WACL,MAAAoE,GACAG,MAAA,KAEA,IAEK3F,KAAAoB,MAEL,IAAA0F,cAAA,SAAAF,GAGA,MAAAA,GAAAgB,MAAA,OAAAlC,KAAA,MAEAnF,UAAAoG,YAAAU,SAAA,SAAAT,EAAApB,EAAAqC,GAGA,kBACA,SAEO,UAAAjB,EAAAkB,KACPxB,OAAAuB,GACOd,YAAAH,EAAA,UACPZ,OAAA6B,GAEAhC,MAAAgC,GANAA,GAQK7H,KAAAoB,MAEL,IAAA2G,iBAAA,SAAAnB,GAGA,kBACA,0CAAAhE,YAAAC,KACAE,IAAA6D,EAAAmB,iBAAArC,KAAA,IACOqB,YAAAH,EAAA,UACPmB,gBAAAnB,EAAAc,UACO,gBAAAd,IAAA,gBAAAA,GACPA,EACO,mBAAAA,IAAA,OAAAA,EACP,GACOG,YAAAH,IACPzB,QAAAC,IAAA,yBACAD,QAAAC,IAAA,QACAD,QAAAC,IAAA8B,SAAAN,IACAmB,gBAAAC,UAAApB,KAJO,QAMF5G,KAAAoB,MAELb,UAAAwH,+BACA,IAAAhG,SAAA,SAAAC,EAAAC,GAGA,GAAAC,GAAA,EACAC,EAAAF,EAAAG,OACAC,IAWA,OAVA,YAEA,IADA,GAAA4F,GAAAzH,OACA0B,EAAAF,EAAAI,QACA6F,EAAA,WAEA,MADA5F,GAAAC,KAAAL,EAAAd,MAAAC,KAAAY,EAAAO,MAAAL,IAAAC,KACAD,GAAAC,GACSnC,KAAAoB,KAET,OAAA6G,IACKjI,KAAAoB,MACLiB,GAEAG,OAAA,SAAAC,EAAAC,EAAAT,GAGA,GAAAU,GAAAF,CAUA,OATA,YACA,0CAAAG,YAAAC,KACAH,EAAAI,QAAA,SAAAlB,EAAAM,GAGA,MAAAS,GAAAV,EAAAU,EAAAf,EAAAM,KAJA,QAOKlC,KAAAoB,MACLuB,GAEAI,IAAA,SAAAL,EAAAT,GAGA,MAAAO,WAAAE,EAAA,SAAAM,EAAApB,EAAAM,GAIA,MADAc,GAAAV,KAAAL,EAAAL,EAAAM,IACAc,KAGAC,OAAA,SAAAP,EAAAT,GAGA,MAAAO,WAAAE,EAAA,SAAAM,EAAApB,EAAAM,GAQA,MALA,YACA,MAAAD,GAAAL,EAAAM,GACAc,EAAAV,KAAAV,GADA,QAGO5B,KAAAoB,MACP4B,KAGAE,OAAA,SAAAR,EAAAT,GAGA,GAAAkB,GAAA3C,OACA0B,EAAA,EACAQ,OAeA,OAdA,YAEA,IADA,GAAAwF,GAAA1H,OACAkC,EAAAN,SAAAF,IAAAiB,GACA+E,EAAA,WAMA,MALA,YACA,MAAAjG,GAAAS,EAAAR,MACAiB,EAAAT,EAAAR,GADA,QAGWlC,KAAAoB,MACX,KACSpB,KAAAoB,KAET,OAAA8G,IACKlI,KAAAoB,MACL+B,GAEAE,WAAA,SAAAX,EAAAT,GAGA,MAIK,mBAJLiB,QAAAR,EAAA,SAAAd,EAAAM,GAGA,OAAAD,EAAAL,EAAAM,MAGAoB,YAAA,SAAAZ,EAAAT,GAGA,yBAAAiB,QAAAR,EAAAT,IAEAsB,WAAA,SAAAb,EAAAT,GAGA,yBAAAiB,QAAAR,EAAAT,IAEAuB,OAAA,SAAAd,EAAAT,GAIA,MAAAgB,QAAAP,EAAA,WAGA,OAAAT,EAAAd,MAAAC,KAAAqC,cAGAC,QAAA,SAAA1B,GAGA,MAAAiB,QAAAjB,EAAA,SAAAJ,GAGA,cAAAA,IAAA,IAAAA,GAAA,mBAAAA,MAGA+B,WAAA,SAAAC,EAAA5B,GAUA,MAPA,YACA,mBAAAA,IAAA,mCAAAY,YAAAC,KAAA,CACA,GAAAgB,GAAAD,CAEA,OADAA,GAAA5B,EACAA,EAAA6B,IAEK7D,KAAAoB,MACL,WACA,0CAAAwB,YAAAC,KACAL,UAAAR,EAAA,SAAAgB,EAAApB,EAAAM,GAGA,MAAAc,GAAAc,QAAAlC,EAAAgC,EAAA1B,OAGAM,QAAAR,EAAA,IAAAA,EAAAO,MAAA,YAAAS,EAAApB,EAAAM,GAGA,MAAAc,GAAAc,QAAAF,EAAAhC,OAGK5B,KAAAoB,OAEL2C,QAAA,SAAArB,GAGA,GAAAA,GAAAsB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAjB,WAAAE,EAAA,SAAAM,EAAApB,GAGA,MAAAoB,GAAAc,OAAA,WACA,0CAAAlB,YAAAC,KACAkB,QAAA5C,MAAAC,KAAAQ,GAEAA,GAEO5B,KAAAoB,UAGP8C,WAAA,SAAAtC,EAAAK,GAGA,kBACA,0CAAAW,YAAAC,KACAE,IAAAnB,EAAA,SAAAuC,GAGA,MAAAD,YAAAC,EAAAlC,KAGAA,EAAAL,IAEK5B,KAAAoB,OAELgD,MAAA,SAAA1B,EAAA2B,GAGA,MAAAtB,KAAAL,EAAA,SAAAd,GAGA,MAAAA,GAAAyC,MAGAC,UAAA,SAAAC,EAAAC,GAQA,MALAC,QAAAC,KAAAF,GAAA1B,QAAA,SAAA6B,GAGA,MAAAJ,GAAAI,GAAAH,EAAAG,KAEAJ,GAEAK,MAAA,SAAAC,GAGA,MAAArC,WAAsBiC,OAAAC,KAAAG,GAAA,SAAA7B,EAAA2B,GAItB,MADA3B,GAAA2B,GAAAE,EAAAF,GACA3B,KAGA8B,UAAA,SAAAD,EAAA5C,GAGA,MAAAO,WAAsBiC,OAAAC,KAAAG,GAAA,SAAA7B,EAAA2B,EAAAzC,GAItB,MADAc,GAAA2B,GAAA1C,EAAA4C,EAAAF,MACA3B,KAGA+B,UAAA,SAAAR,EAAAC,GAGA,MAAAF,WAAAM,MAAAL,GAAAC,IAEA2D,SACA5H,UAAA4H,cACAA,OAAAC,QACAC,MAAA,sCACAC,QAAA,QACAT,OAAA,gCACAU,OAAA,oBACAC,QAAA,4CACAC,QAAA,SACAC,GAAA,IACAC,KAAA,OACAC,IAAA,QACAC,KAAA,SACAC,eAAA,YACAC,UAAA,0BACAC,eAAA,gBACAC,gBAAA,gBACAC,QAAA,MACAC,WAAA,OACAC,QAAA,KAEAjB,OAAAkB,iBAAA,mLACAlB,OAAAmB,eAAAnB,OAAAkB,gBAAAtG,IAAA,SAAAwG,GAGA,MAAAjF,WAAA,GAAAkF,QAAA,IAAArB,OAAAC,OAAAmB,GAAA/I,SAAyEqC,KAAA0G,KAEzE,IAAAD,gBAAAnB,OAAAmB,cACAnB,QAAAsB,MAAA,SAAA5B,EAAA6B,GAGAA,EAAA,mBAAAA,MACAC,SAAA,EACAC,SACAC,KAAA,EACAC,YAAA,EACAC,IAAA,EAEA,IAAAC,IAAA,EACAC,EAAA,KACAC,EAAArC,CAqDA,OApDA,YAEA,IADA,GAAAsC,GAAA3J,OACAwJ,GACAG,EAAA,WAOA,MANAjH,QAAAoG,eAAA,SAAAc,GAIA,MADAH,GAAAG,EAAAvH,KACAmH,EAAAI,EAAAC,KAAAH,KAEA,WACA,sBAAAF,IAAA,OAAAA,EAAA,CACA,GAAAM,GAAAN,EAAA,GACA5H,EAAAkI,EAAAlI,MA0BA,OAzBAsH,GAAAE,MAAAtH,MACAiI,IAAAhK,SAAAgK,IACAC,KAAAjK,SAAAiK,KACAlD,MAAAgD,EACArD,KAAAgD,EACAxH,MAAAiH,EAAAC,SACAE,KAAAH,EAAAG,KACAE,IAAAL,EAAAK,IACA3H,SACAsF,cAEA,WACA,eAAAuC,EAGA,MAFAP,GAAA,OACAA,EAAAK,IAAA,EACAL,EAAAI,YAAAJ,EAAAC,QACiB,eAAAM,GAAA,KAAAK,EAAAG,QAAA,OACjB,GAAAC,GAAAJ,EAAA1C,MAAA,MAAAxF,OAAA,CAEA,OADAsH,GAAAG,MAAAa,EACAhB,EAAAK,IAAA3H,EAAAkI,EAAAK,YAAA,MAEA,MAAAjB,GAAAK,KAAA3H,GAEepC,KAAAoB,MACfsI,EAAAC,UAAAvH,EACA8H,EAAA,WACA,MAAAA,GAAA9H,OACA8H,EAAA3H,MAAAH,GAEA,IAEepC,KAAAoB,QAEJpB,KAAAoB,OACFpB,KAAAoB,KAET,OAAA+I,IACKnK,KAAAoB,MACLsI,EAAAE,MAEA,IAAAH,OAAAtB,OAAAsB,MACAmB,iBACApD,iBACAqD,IAAA,IACAC,IAAA,IACAC,IAAM,KAENC,cACAH,IAAA,aACAC,IAAA,UACAC,IAAM,SAENE,YAAA,SAAAC,GAGA,GAAAvD,IACAV,KAAA,OACAS,YACA8C,KAAAjK,SAAAiK,KACAT,IAAA,EACAF,KAAA,GAEAH,GACAyB,YAAAxD,GACAA,SACAuD,QACAE,iBACAC,SAAA,EAcA,OAZA7I,QAAAkH,EAAAwB,EAAA,SAAAxB,EAAApC,EAAApF,GAGA,GAAAoJ,GAAAV,cAAAtD,EAAAL,OAAA2D,wBACA,OAAAU,GAAAhE,EAAAoC,EAAAxH,KAEA,WACA,OAAAwH,EAAAyB,WAAA/I,OAAA,CACA,GAAAmJ,GAAA7B,EAAAyB,WAAA,EACA,UAAAK,OAAA,oBAAAD,EAAAf,KAAA,IAAAe,EAAA1B,KAAA,IAAA0B,EAAAxB,IAAA,OAAA7C,SAAAqE,GAAA,GAAAhJ,MAAA,UAEKvC,KAAAoB,MACLuG,EAEApH,UAAA0K,wBACAL,cAAA5B,eAAA,SAAA1B,EAAAoC,GAGA,GAAA+B,GAAA/B,EAAAyB,WAAA,EAOA,OANA7D,GAAAI,YACAJ,EAAAL,KAAA+D,aAAA1D,SACAoE,oBAAApE,EAAAoC,GACAiC,eAAArE,EAAAoC,GACA+B,EAAA/D,SAAApF,KAAAgF,GACAoC,EAAAyB,WAAAS,QAAAtE,GACAoC,GAEAkB,cAAA3B,gBAAA,SAAArC,EAAA8C,EAAAxH,GAGA,GAAAuJ,GAAA/B,EAAAyB,WAAA,EAsBA,OArBA,YACA,GAAApE,YAAA0E,EAAA,QACA,SAAAD,OAAA,cAAA5E,EAAAU,MAAA,OAAAV,EAAA4D,KAAA,IAAA5D,EAAAiD,KAAA,IAAAjD,EAAAmD,MAEK/J,KAAAoB,MACL,WACA,GAAAoG,gBAAAiE,EAAAnE,SAAAV,EAAAU,MACA,SAAAkE,OAAA,mBAAAlF,OAAA/F,SAAAoG,YAAA8E,IAAA,WAAAA,EAAAjB,KAAA,IAAAiB,EAAA5B,KAAA,IAAA4B,EAAA1B,IAAA,aAAAxJ,SAAAoG,YAAAC,GAAA,WAAAA,EAAA4D,KAAA,IAAA5D,EAAAiD,KAAA,IAAAjD,EAAAmD,IAAA,OAEK/J,KAAAoB,MACLqK,EAAAI,IAAAjF,EAAAiF,IACAJ,EAAAlE,QAAA,EACAkE,EAAAK,eAAApC,EAAA0B,cACA1B,EAAA0B,iBACA1B,EAAAyB,WAAAY,QACAC,cAAAP,EAAA/B,GACA,WACA,OAAAA,EAAAyB,WAAA/I,OACA,SAAAoJ,OAAA,uBAAA7J,QAAAwJ,cAEKnL,KAAAoB,MACLsI,EAEA,IAAAuC,aAAA,SAAArF,EAAA8C,GAGAA,EAAA,WACAgC,oBAAA9E,EAAA8C,EACA,IAAA+B,GAAA/B,EAAAyB,WAAA,EAIA,OAHAvE,GAAAc,YACA+D,EAAA/D,SAAApF,KAAAsE,GACA8C,EAAAyB,WAAAS,QAAAhF,GACA8C,GAEAiC,eAAA,SAAA/E,EAAA8C,GAKA,MAFA9C,GAAAyE,SAAA3B,EAAA2B,SACA3B,EAAA2B,SAAA,EACA3B,GAEAgC,oBAAA,SAAA9E,EAAA8C,GAKA,MAFA9C,GAAAsF,iBAAAxC,EAAA0B,cACA1B,EAAA0B,iBACA1B,GAEAsC,cAAA,SAAApF,EAAA8C,GAUA,MAPA,YACA,MAAA9C,GAAAyE,SAAA,GACAzE,EAAA,WACA8C,EAAAyB,WAAAY,QACAC,cAAApF,EAAA8C,IAHA,QAKK1J,KAAAoB,MACLsI,GAEAyC,uBAAA,SAAA7E,EAAAoC,EAAAxH,GAIA,MADAwH,GAAA0B,cAAA9I,KAAAgF,GACAoC,IAEA,0BAAA5G,QAAA,SAAA2F,GAGA,MAAAmC,eAAAnC,GAAAwD,eAEA,kCAAAnJ,QAAA,SAAAsG,GAGA,MAAAwB,eAAAxB,GAAA+C,yBAEAvB,yBAAA,SAAAtD,EAAAoC,EAAAxH,GAMA,MAHAyJ,gBAAArE,EAAAoC,GACAgC,oBAAApE,EAAAoC,GACAA,EAAAyB,WAAA,GAAAzD,SAAApF,KAAAgF,GACA0E,cAAA1E,EAAAoC,GAEA,IAAA0C,kBACAC,iBAAyBC,KAAAF,cACzB7L,UAAAgM,SACAhM,SAAAiM,QACAC,WAAAJ,gBACAK,mBAAA,QACAC,YAAA,QACAC,UAAAR,cAEA,IAAAQ,WAAArM,SAAAiM,OAAAI,UACAJ,OAAAjM,SAAAiM,OAAAI,SACArM,UAAAiM,OAAAK,iBAAA,WAGA,MAAAtM,UAAAiM,OAAAC,WAAAlM,SAAAiM,OAAAG,WAAA,KAEApM,SAAAuM,aAAA,SAAAC,GAGA,kBACA,QAAAA,EAAAtC,QAAA,QAAAsC,EAAA3K,QAAA,KAAA2K,EAAAtC,QAAA,OACA,GAAAuC,GAAAD,EAAAnF,MAAA,KACAqF,EAAA1M,SAAAiM,OAAAC,WAAAS,eAAAF,EAAA,KAAAzM,SAAAiM,OAAAC,WAAAO,EAAA,IAAAA,EAAAzK,MAAA,GAAAmD,KAAA,KACA,mBACA,MAAAuH,GACAA,EAEA5L,MAAA,2BAAA0L,EAAA,iCAAAC,EAAA,mEAEShN,KAAAoB,MAET,GAAAwL,GAAA1J,OAAA3C,SAAAiM,OAAAG,WAAA,SAAAC,GAGA,MAAArM,UAAAiM,OAAAC,WAAAG,GAAAM,eAAAH,IAEA,mBACA,MAAAH,GACArM,SAAAiM,OAAAC,WAAAG,GAAAG,GADA,QAGS/M,KAAAoB,OAEJpB,KAAAoB,OAELb,SAAA4M,sBAAA,SAAAlL,GAGA,GAAAmL,GAAA7M,SAAAiM,OAAAG,UACApM,UAAAiM,OAAAG,WAAApM,SAAAiM,OAAAE,iBACA,IAAAzL,GAAAgB,GAEA,OADA1B,UAAAiM,OAAAG,WAAAS,EACAnM,GAEAV,SAAAiM,OAAAC,WAAAH,KAAAe,QAAA,SAAAC,EAAAC,EAAAC,GAGA,WAAAxF,UAAAsF,GAAA,OAAAtF,UAAAuF,GAAA,MAAAvF,UAAAwF,KAEAjN,SAAAiM,OAAAC,WAAAH,KAAAmB,IAAA,SAAAzL,EAAA0L,GAGA,GAAAA,GAAA1J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAE,YAAA,KAAA5B,QAAA2L,EAAA,SAAAC,EAAAC,GAGA,MAAAC,cAAA,IAAA7F,UAAAhG,GAAA,QAAAgG,UAAA2F,GAAA,OAAA3F,UAAA4F,SAGArN,SAAAiM,OAAAC,WAAAH,KAAA/L,OAAA,SAAAuN,GAGA,GAAAA,GAAA9J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAoK,cAAA,OAAAlK,WAAA,UAAA5B,QAAA+L,EAAA,SAAAjL,EAAAF,GAGA,OAAAqF,UAAAnF,GAAA,MAAAmF,UAAArF,UAGApC,SAAAiM,OAAAC,WAAAH,KAAAyB,IAAA,SAAAC,EAAAtJ,GAGA,GAAAA,GAAAV,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAuE,UAAAgG,GAAA,IAAAjL,IAAA2B,EAAA,SAAAC,GAGA,WAAAqD,UAAArD,GAAA,SAGApE,SAAAiM,OAAAC,WAAAH,KAAA2B,WAAA,SAAAC,EAAAC,GAGA,GAAAD,GAAAnG,gBAAAC,UAAAkG,IACAC,EAAApG,gBAAAC,UAAAmG,GAEA,OADA5N,UAAAiM,OAAAI,UAAAuB,GAAA5N,SAAAiM,OAAAI,UAAAsB,GACA,MAEA3N,SAAAiM,OAAAC,WAAAH,KAAA8B,KAAA,SAAAvJ,EAAAwJ,EAAApJ,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QAAAuE,UAAAnD,GAAA,IAAAmD,UAAAqG,GAAA,IAAA1K,WAAA,KAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAAnL,MAAA,SAAAc,EAAAqM,GAGA,OACA/D,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOjK,GACPsI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,GACA3H,OAAA,EACAsF,eAEO4G,GACPpC,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAiC,KAAA,SAAA9C,EAAA+C,GAGA,YAAAxG,UAAAyD,GAAA,aAAAzD,UAAAwG,GAAA,MAEAjO,SAAAiM,OAAAC,WAAAH,KAAAmC,OAAA,SAAAC,EAAAC,GAGA,GAAAA,GAAA3K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOwC,GACPnE,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACSpI,OAAA6K,GACTzC,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,GACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAlK,OAAA,SAAAJ,GAGA,OACAuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOlK,GAAQuI,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,KAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAsL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,SAAAL,KAAA,UAAAxE,MAAA,KAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAkOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,KAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAC9bwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAsC,OAAA,SAAAC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAtF,KAAAxF,KACA6D,UACSnB,OAAA+K,GACT3C,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAb,MAAA,SAAAzJ,GAGA,OACAuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOlK,GACPuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAwC,OAAA,SAAA9M,GAGA,OACAuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOlK,GACPuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAyC,MAAA,SAAA/M,GAGA,OACAuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOlK,GACPuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAkC,KAAA,SAAAxM,GAGA,OACAuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOlK,GACPuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA0C,KAAA,SAAAhN,GAGA,OACAuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACSlK,GACTuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,cAAA2C,EAAAC,GAGA,OAAAlH,UAAAiH,GAAA,QAAAjH,UAAAkH,KAEA3O,SAAAiM,OAAAC,WAAAH,KAAA,cAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAE,WAAA,MAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAA,cAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAE,WAAA,MAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAA,WAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAE,WAAA,MAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAA,cAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAE,WAAA,MAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAA6C,GAAA,SAAAlK,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAE,WAAA,OAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAA8C,IAAA,SAAAnK,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAwB,EAAA7C,OAAA4F,UAAA/C,EAAA,SAAAtB,WAAA,OAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAA+C,IAAA,SAAApK,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAE,WAAA,MAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAA,cAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEA6L,EAAA,GACA,QACA/E,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAAkC,EAAA1C,MAAA,eAAAX,EAAAM,GAGP,OAAAN,EAAA,IAAA0N,EAAA,IAAArK,EAAA,EAAA/C,OAEAgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,cAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEA6L,EAAA,GACA,QACA/E,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAAkC,EAAA1C,MAAA,eAAAX,EAAAM,GAGP,OAAAN,EAAA,IAAA0N,EAAA,IAAArK,EAAA,EAAA/C,OAEAgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,eAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEA6L,EAAA,IACA,QACA/E,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAAkC,EAAA1C,MAAA,eAAAX,EAAAM,GAGP,OAAAN,EAAA,IAAA0N,EAAA,IAAArK,EAAA,EAAA/C,OAEAgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,eAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEA6L,EAAA,IACA,QACA/E,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAAkC,EAAA1C,MAAA,eAAAX,EAAAM,GAGP,OAAAN,EAAA,IAAA0N,EAAA,IAAArK,EAAA,EAAA/C,OAEAgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,eAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEA6L,EAAA,KACA,QACA/E,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAAkC,EAAA1C,MAAA,eAAAX,EAAAM,GAGP,OAAAN,EAAA,IAAA0N,EAAA,IAAArK,EAAA,EAAA/C,OAEAgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,cAAArH,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEA6L,EAAA,KACA,QACA/E,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAAkC,EAAA1C,MAAA,eAAAX,EAAAM,GAGP,OAAAN,EAAA,IAAA0N,EAAA,IAAArK,EAAA,EAAA/C,OAEAgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAiD,OAAA,SAAA3N,EAAA4N,GAGA,OAAAxH,UAAApG,GAAA,OAAAoG,UAAAwH,KAEAjP,SAAAiM,OAAAC,WAAAH,KAAAmD,KAAA,SAAA7N,GAGA,YAAAoG,UAAApG,GAAA,SAEArB,SAAAiM,OAAAC,WAAAH,KAAAoD,KAAA,SAAA9N,GAGA,YAAAoG,UAAApG,GAAA,SAEArB,SAAAiM,OAAAC,WAAAH,KAAA/L,OAAA,SAAAqC,EAAAqC,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,iBACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA;AACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOtJ,GAAAkB,OAAAmB,GACPiH,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACK,MAELvL,SAAAiM,OAAAC,WAAAH,KAAAjE,MAAA,SAAAsH,EAAAC,GAGA,OACArF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,eAEOiI,EAAAC,GAAA,aACP1D,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,qBAAA1K,GAGA,OACA2I,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOtK,GACP2I,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,sBAAAtK,GAGA,OACAuI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACSlK,GACTkK,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,oBAAA/D,GAGA,OACAgC,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACS3D,GACTgC,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,KACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,qBAAA/D,GAGA,OACAgC,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACS3D,GACTgC,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,SACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA/L,UAAA,SAAAsP,GAGA,iBAAA7H,UAAA6H,KAEAtP,SAAAiM,OAAAC,WAAAH,KAAA,uBAAAwD,GAGA,GAAAA,GAAA9L,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAA+M,EAAA,SAAAD,GAGP,OACAtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACa2D,GACb3D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACcvB,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,SAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAmOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAC/bwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,sBAGAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,yBAAAwD,GAGA,GAAAA,GAAA9L,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAA+M,EAAA,SAAAD,GAGP,OACAtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACa2D,GACb3D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACcvB,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,WAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAqOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBACjcwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,sBAGAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,0BAAAwD,GAGA,GAAAA,GAAA9L,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAA+M,EAAA,SAAAD,GAGP,OACAtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACa2D,GACb3D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACcvB,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,YAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAsOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAClcwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,sBAGAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,wBAAAwD,GAGA,GAAAA,GAAA9L,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAA+M,EAAA,SAAAD,GAGP,OACAtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACa2D,GACb3D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACcvB,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,YAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAsOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAClcwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,sBAGAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,uBAAAwD,GAGA,GAAAA,GAAA9L,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAf,IAAA+M,EAAA,SAAAD,GAGP,OACAtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACa2D,GACb3D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACcvB,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,SAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAmOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAC/bwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,sBAGAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA/L,MAAA,SAAAwP,EAAAC,EAAAC,GAGA,uBAA2BC,QAAA,OAAAlI,UAAA+H,GAAA,MAAwCG,QACnE3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAkM,GACP9D,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACK,WAAYoE,QACjB3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAAmM,GACP/D,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACK,MAAK,kBAEVvL,SAAAiM,OAAAC,WAAAH,KAAA6D,KAAA,SAAAC,GAGA,GAAAA,GAAApM,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAjB,QAAAhC,OAAA4P,EAAA,SAAAzN,EAAAf,GAGA,kBACA,yBAAAe,GACAf,EAEA,WAGA,GAAAyO,GAAA,WACA,MAAAtJ,aAAAnF,EAAA,mBAEA2I,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,UAAA9F,GACAsK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBAGAlH,MAAAhD,IAEa5B,KAAAoB,MACbkP,EAAApN,OAAAmN,EAAA3I,SAAA,SAAAd,GAGA,MAAAG,aAAAH,EAAA,oBAAAA,EAAAU,QAEAiJ,EAAAF,EAAA3I,SAAA+C,QAAA6F,GACAE,EAAA,WACA,MAAAF,IACAC,EAAA,EAAAA,IAEA,MAEavQ,KAAAoB,KACb,OAAAkD,WAAA+L,GAAsC3I,SAAA2I,EAAA3I,SAAAnF,MAAA,EAAAiO,EAAA,IAAA1M,QAAAnB,GAAA0N,EAAA3I,SAAAnF,MAAAiO,EAAA,QAC3BxQ,KAAAoB,OAEJpB,KAAAoB,SAGPb,SAAAiM,OAAAC,WAAAH,KAAA,MAAA/L,SAAAiM,OAAAC,WAAAH,KAAA6D,KACA5P,SAAAiM,OAAAC,WAAAH,KAAAhE,QAAA,SAAAZ,GAGA,GAAAA,GAAA1D,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAV,KAAA2E,EAAA,SAAA+I,GAGA,aAAAvM,WAAA8D,UAAAyI,GAAA,SAAA7O,GAGA,SAAAmG,gBAAAC,UAAApG,IAAA8O,QAAA,GAAAlH,QAAA,8BAIAjJ,SAAAiM,OAAAC,WAAAH,KAAA,sBAAAuD,GAGA,GAAAc,GAAA3I,UAAA6H,EACA,aAAAc,EAAA,gBAAAA,EAAA,sBAAAA,EAAA,oCAEApQ,SAAAiM,OAAAC,WAAAH,KAAA,YAAA/L,SAAAiM,OAAAC,WAAAH,KAAA,aACA/L,SAAAiM,OAAAC,WAAAH,KAAA,qBAAAuD,GAGA,OACAtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACY3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,SAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAmOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAC7b6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACW2D,GACX3D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACS2D,GACTtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,gBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACW2D,GAAUtF,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,cAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,GAAAsF,YAAA2D,SAAA,EAAAa,sBAAyOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAAmM6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,OAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAiOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAC9jCwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACYvB,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,QAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAAkOA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBAC5bwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,gBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,cAAA/L,SAAAiM,OAAAC,WAAAH,KAAA,YACA/L,SAAAiM,OAAAC,WAAAH,KAAA,8BAAAuC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,wBAA2ByM,OAAA/O,MAAAC,KAAAyN,GAAA,kBAE3BtO,SAAAiM,OAAAC,WAAAH,KAAA,8BAAAuC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,yBACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACSpI,OAAA+K,GACT3C,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAsE,KAAA,SAAAC,EAAAhC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAlD,UAAAiM,OAAAC,WAAAH,KAAA,4BAAAuE,EAAA,MAA0FX,QAC1F3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAA+K,GACP3C,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACK,MAELvL,SAAAiM,OAAAC,WAAAH,KAAAwE,IAAA,SAAAC,GAGA,YAAA/I,UAAA+I,GAAA,MAEAxQ,SAAAiM,OAAAC,WAAAH,KAAA0E,OAAA,SAAAH,EAAAhC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,wBAA2ByM,QAAA,QAC3B3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACO2E,GACP3E,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACK,MAAMoE,QACX3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACOpI,OAAA+K,GACP3C,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACK,MAAK,kBAEVvL,SAAAiM,OAAAC,WAAAH,KAAA2E,OAAA,SAAAhM,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAE,YAAA,KAAA5B,QAAAkD,EAAA,SAAApC,EAAAF,GAGA,MAAAkL,cAAA7F,UAAAnF,GAAA,MAAAmF,UAAArF,SAGApC,SAAAiM,OAAAC,WAAAH,KAAA4E,UAAA,SAAAC,EAAApB,GAGA,GAAAnJ,GAAAxF,IAOA,OANA,YACA,yBAAA2O,IACAA,EAAAoB,EACAA,GAAA,IAAAjK,SAAAiK,GAAA,SAFA,QAIKnR,KAAAoB,OAELmJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,cACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACS,IAAAtF,EAAA4D,KAAA,IAAA5D,EAAAiD,KAAA,MACTU,IAAA,mCACAC,KAAA;AACAlD,MAAA,MACAL,KAAA,SACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,eAESyJ,GACT5G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,SACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACW6D,GACX7D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA8E,UAAA7Q,SAAAiM,OAAAC,WAAAH,KAAA4E,UACA3Q,SAAAiM,OAAAC,WAAAH,KAAA+E,KAAA,SAAAzP,EAAA0P,EAAAzC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOoF,GACP/G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAtF,KAAAxF,KACA6D,KAAA,WACA,MAAA8B,aAAAnF,EAAA,cACAA,GAEAA,IAEW5B,KAAAoB,QACF0C,OAAA+K,GACT3C,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,sBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAiF,YAAA,SAAA1O,GAGA,GAAAoK,GAAAT,OAAAzE,gBAAAC,UAAAnF,IACA,mBACA,MAAAoK,GACAA,EAAAnL,WAEA,aAEK9B,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAA/L,SAAA,SAAAc,GAGA,gBAAA2G,UAAA3G,KAEAd,SAAAiM,OAAAC,WAAAH,KAAAkF,UAAA,SAAAC,GAGA,cAAAzJ,UAAAyJ,GAAA,OAEAlR,SAAAiM,OAAAC,WAAAH,KAAA/L,OAAA,SAAAmR,EAAAC,GAGA,uBAA2BzB,QAAA,QAAkBA,QAC7C3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOwF,GACPxF,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACK,gBAAiBoE,QACtB3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOyF,GACPzF,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACK,MAAK,kBAEVvL,SAAAiM,OAAAC,WAAAH,KAAAC,MAAA,QAAAqF,QAAA9D,OAGA,GAAAA,OAAA9J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,mBACA,WAAAqK,MAAA1L,OACA7B,SAAAgM,MAAAxE,gBAAAC,UAAA8F,MAAA,OAEA/L,QAAA+L,MAAA,SAAAH,EAAAC,GAGA,MAAArN,UAAAgM,MAAAxE,gBAAAC,UAAA2F,KAAAkE,KAAA9J,gBAAAC,UAAA4F,OAEA,OAEK5N,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAAwF,OAAA,WAGA,GAAAC,GAAAxR,SAAAgM,MAAAwF,aAAA,EACAC,EAAA,EAAAD,CAEA,OADAxR,UAAAiM,OAAAC,WAAAH,KAAAC,MAAA,cAAAyF,IACA,WAAAA,EAAA,OAEAzR,SAAAiM,OAAAC,WAAAH,KAAA/L,SAAA,SAAAsQ,EAAAhC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEAqO,EAAAvR,SAAAiM,OAAAC,WAAAH,KAAAwF,QACA,QACAvH,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,yBACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACS4F,GACT5F,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,YACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEA7E,KAAA,SACAS,UAAA,UAAAM,UAAA6I,GAAA,MAAyDX,QACzD3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACW4F,GACXvH,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,yBACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBACapI,OAAA+K,GACb3C,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACS,MACFgG,GACP5F,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA2F,MAAA,SAAApB,EAAAhC,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACS2E,GACT3E,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACOhI,OAAA+K,GACP3C,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,sBAAA4F,EAAArK,GAGA,OACA0C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOrE,EAAAqK,GACPhG,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,2BAAAzE,EAAA8H,EAAAC,GAGA,OACArF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACSyD,EAAAC,GACT1D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACOjE,GACPqE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAoE,QAAA,SAAA7I,EAAA8H,EAAAwC,GAGA,OACA5H,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,UACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOrE,GACP0C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACSyD,GACTzD,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,iBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACOqG,GACPjG,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA8F,WAAA,SAAAvK,EAAA8H,EAAAwC,GAGA,OACA5H,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,UACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOrE,GACP0C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACSyD,GAAYpF,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,OAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,WAAuL6C,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,UAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,YAAA2D,SAAA,EAAAa,sBAA8NA,mBAAuB3B,IAAA,mCAAAC,KAAA,mDAAAlD,MAAA,IAAAL,KAAA,aAAAxE,MAAA,MAAAoH,KAAA,IAAAE,IAAA,GAAA3H,OAAA,EAAAsF,gBACjcwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACOqG,GACPjG,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA+F,MAAA,SAAAxD,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEAmD,EAAAxF,KACAkR,GACA1L,OACA3B,QAQA,OANA,YACA,MAAA8B,aAAA8H,EAAA,YACAvK,UAAAgO,EAAAzD,EAAA,IACAA,IAAAtM,MAAA,KAEKvC,KAAAoB,OAELmJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOoG,GAAAxO,OAAAyO,QAAA1D,EAAA,SAAAjI,GAGP,kBACA,MAAAG,aAAAH,EAAA,mBAEA2D,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACetF,EAAAU,MAAAoJ,QAAA,GAAAlH,QAAA,KAAAhJ,QAAA,KACf0L,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBAGAlF,GAES5G,KAAAoB,SAET8K,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,MAAA/L,SAAAiM,OAAAC,WAAAH,KAAA+F,MACA9R,SAAAiM,OAAAC,WAAAH,KAAAkG,UAAA,SAAApC,GAGA,GAAAA,GAAApM,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,QACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACUtF,KAAAxF,OACVmJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,iBACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAES5D,OAAAsM,GACTlE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,OAAA/L,SAAAiM,OAAAC,WAAAH,KAAAkG,UACAjS,SAAAiM,OAAAC,WAAAH,KAAA5H,KAAA,SAAAsJ,GAGA,OACAzD,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,cACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,qBACO8B,GACP9B,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA/L,UAAA,SAAAkS,GAGA,GAAAA,GAAAzO,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAE,YAAA,KAAAZ,IAAA0P,EAAA,SAAAzE,GAGA,MAAAH,cAAA,UAAA7F,UAAAgG,SAGAzN,SAAAiM,OAAAC,WAAAH,KAAAoG,YAAA,SAAAC,GAGA,GAAAA,GAAA3O,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAOA,OALAkP,GAAA7P,QAAA,SAAAiK,GAGA,aAAAxM,UAAAiM,OAAAI,UAAA7E,gBAAAC,UAAA+E,OAEA,MAEAxM,SAAAiM,OAAAC,WAAAH,KAAAsG,SAAArS,SAAAiM,OAAAC,WAAAH,KAAAoG,YACAnS,SAAAiM,OAAAC,WAAAH,KAAAuG,YAAA,SAAA3E,EAAAC,GAKA,MAFA5N,UAAAiM,OAAAC,WAAAH,KAAA2B,WAAAC,EAAAC,GACA5N,SAAAiM,OAAAC,WAAAH,KAAAoG,YAAAxE,GACA,MAEA3N,SAAAiM,OAAAC,WAAAH,KAAA7I,UAAA,WAGA,oDAEAlD,SAAAiM,OAAAC,WAAAH,KAAAwG,SAAA,SAAA5Q,GAGA,OACAqI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,YACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,eAEOxF,GACPgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAyG,QAAA,SAAAC,EAAAhF,EAAAa,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QACA8G,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACO8B,GACPzD,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAjH,KAAA,WACA,MAAA8B,aAAAiM,EAAA,cACAA,GAEAA,IAEahT,KAAAoB,MACbwF,KAAAxF,OACW0C,OAAA+K,GACX3C,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,iBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,GACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA/L,UAAA,SAAAyN,EAAAiF,GAGA,GAAAA,GAAAjP,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,wBAA2ByM,QAAA,UAAAlI,UAAAgG,GAAA,MAA2CjL,IAAAkQ,EAAA,SAAAC,GAGtE,GAAAC,GAAAD,EAAAxL,SAAA,GACA0L,EAAA,WACA,MAAArM,aAAAoM,EAAA,wBACAA,EAAAzL,UAEAyL,IAEOnT,KAAAoB,MACPiS,EAAA1P,WAAA,KAAAZ,IAAAqQ,EAAA,SAAAlT,GAGA,kBACA,kBAAAA,EAAAoH,MACA,YAEA,QAAAU,UAAA9H,GAAA,MAESF,KAAAoB,QAET,aAAAiS,EAAAnD,QACA3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBACSpI,OAAAoP,EAAAxL,SAAAnF,MAAA,IACT2J,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,uBAEK,MAAM,kBAEXvL,SAAAiM,OAAAC,WAAAH,KAAA/L,MAAA,SAAA+S,GAGA,GAAAA,GAAAtP,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,wBAA2ByM,OAAAvM,WAAA,SAAA5B,QAAAuR,EAAA,SAAAhG,EAAAiG,GAG3B,kBACA,yBAAAA,IACA,OAAAvL,UAAAsF,GAAA,MAAgD4C,QAChD3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACaqH,GACbrH,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACW,MAEX,IAAqBoE,QACrB3F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACaoB,GACbpB,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBACW,MAEJ9L,KAAAoB,UACF,kBAELb,SAAAiM,OAAAC,WAAAH,KAAAkH,MAAA,SAAA3O,EAAAuL,GAGA,GAAAA,GAAApM,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAIA,OAFA0B,SAAAC,IAAA,yCACAD,QAAAC,IAAA,KAAAhE,KAAAoJ,KAAA,IAAApJ,KAAAyI,KAAA,IAAAzI,KAAA2I,KACA,WACA,OAAAqG,EAAAhO,OACA,MAAA4F,WAAAnD,EACO,QAAAuL,EAAAhO,OACP,OACAmI,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACWrH,GAAAf,OAAAsM,EAAA,GAAA1I,UACXwE,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,kBAGA,IAAA2H,GAAA1Q,IAAAqN,EAAA,SAAApQ,EAAAkC,GAGA,WAAA8F,UAAAhI,EAAA0H,SAAA,QAAA/D,WAAA,KAAAZ,IAAA/C,EAAA0H,SAAAnF,MAAA,GAAAyF,YAAA,MAEA,QAAAA,UAAAnD,GAAA4O,EAAA,UAAAC,cAAA/P,WAAA,KAAA8P,EAAAlR,MAAA,OAEKvC,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAA,2BAAA1K,EAAAqF,GAGA,WAAAe,UAAApG,GAAA,eAAAoG,UAAAf,GAAA,MAEA1G,SAAAiM,OAAAC,WAAAH,KAAA,yBAAAqH,EAAAC,GAGA,OACArJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOyH,GACPpJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACS0H,GACT1H,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,SACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,yBAAAqH,EAAAC,GAGA,OACArJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACOyH,GACPpJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACS0H,GACT1H,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,SACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,gBAGAwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,uBAAAuD,GAGA,OACAtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACS2D,GACT3D,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACS2D,GACTtF,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA;AACA3H,OAAA,EACAsF,gBAGAwE,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,IACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAuH,UAAA,SAAAlG,EAAAC,EAAAiB,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEAqQ,EAAAvT,SAAAiM,OAAAC,WAAAH,KAAAC,MAAAoB,EACApN,UAAAiM,OAAAC,WAAAH,KAAAC,MAAAoB,EAAAC,EACA,IAAA3M,GAAA0C,WAAA,KAAAZ,IAAA8L,EAAA7G,WAEA,OADAzH,UAAAiM,OAAAC,WAAAH,KAAAC,MAAAoB,EAAAmG,GACA7S,GAEAV,SAAAiM,OAAAC,WAAAH,KAAA5G,KAAA,SAAA1D,EAAA4B,GASA,MANA,YACA,yBAAAA,IAAA,mBAAA5B,IACAA,EAAA4B,EACAA,EAAApD,QAFA,QAIKR,KAAAoB,OAELmJ,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOlK,EAAA4B,GAAA,MACPsI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,sBAAAwB,GAGA,GAAAiG,KAqHA,OApHAhS,SAAA+L,EAAA,SAAAkG,EAAAC,GAGA,GAAAC,GAAAlM,UAAAiM,EACA,mBACA,OAAAD,EAAA/M,MACA,cACA,GAAAkN,GAAApM,gBAAAmM,GAAAlK,MAAA,GAAAR,QAAA,mBAAAhJ,SACA4T,EAAA,WACA,GAAAD,EACA,MAAAD,EAEA,IAAApC,GAAAvR,SAAAiM,OAAAC,WAAAH,KAAAwF,QAEA,OADAiC,GAAAzR,MAAAwP,EAAAoC,IACApC,GAEW9R,KAAAoB,KAiCX,OAhCA4S,GAAAtM,SAAA5E,QAAA,SAAAlB,EAAAM,GAGA,MAAA6R,GAAAzR,MAAA0F,UAAApG,IACA2I,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACekI,EAAAlS,GACfgK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,uBAGA,WACA,gBACAiI,EAAAzR,MAAA8R,EAAA,eAEWpU,KAAAoB,KAEX,aACA,GAAA+S,GAAApM,gBAAAmM,GAAAlK,MAAA,GAAAR,QAAA,mBAAAhJ,SACA4T,EAAA,WACA,GAAAD,EACA,MAAAD,EAEA,IAAApC,GAAAvR,SAAAiM,OAAAC,WAAAH,KAAAwF,QAEA,OADAiC,GAAAzR,MAAAwP,EAAAoC,IACApC,GAEW9R,KAAAoB,KAkCX,OAjCA4S,GAAAtM,SAAA5E,QAAA,SAAAlB,EAAAM,GAGA,GAAAmS,GAAArM,UAAApG,EACA,OAAAmS,GAAAzR,MAAA+R,GACA9J,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACekI,GAAA,IAAAC,EAAA,MACfnI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,uBAGA,WACA,gBACAiI,EAAAzR,MAAA8R,EAAA,eAEWpU,KAAAoB,KAEX,SACA,MAAA2S,GAAAzR,MAAA0F,UAAAgM,GAAA,WACA,MAAAC,GACAC,EAEA,aAEWlU,KAAAoB,UAEJpB,KAAAoB,QAEP2S,GAEAxT,SAAAiM,OAAAC,WAAAH,KAAA/L,OAAA,SAAAuN,GAGA,GAAAA,GAAA9J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAoK,cAAA,OAAAlK,WAAAZ,IAAAxC,SAAAiM,OAAAC,WAAAH,KAAA,aAAAwB,GAAA,SAAAwG,GAGA,OAAAA,EAAA,SAAAA,EAAA,MACK,cAEL/T,SAAAiM,OAAAC,WAAAH,KAAA2E,OAAA,SAAAnD,GAGA,GAAAA,GAAA9J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAE,YAAAZ,IAAAxC,SAAAiM,OAAAC,WAAAH,KAAA,aAAAwB,GAAA,SAAAwG,GAGA,MAAAzG,cAAAyG,EAAA,SAAAA,EAAA,OACK,OAEL/T,SAAAiM,OAAAC,WAAAH,KAAA/L,WAAA,SAAAuN,GAGA,GAAAA,GAAA9J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAE,YAAA,KAAA5B,QAAA+L,EAAA,SAAAjL,EAAAF,GAGA,OACA4H,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACSrJ,GACT0H,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,UACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,WACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACarJ,GACbqJ,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACWjJ,EAAAF,GACXuJ,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,uBAIAvL,SAAAiM,OAAAC,WAAAH,KAAAiI,gBAAA,SAAA3H,GAGA,GAAA4H,GAAAzM,gBAAAC,UAAA4E,KACA,WACA,MAAArM,UAAAiM,OAAAC,WAAAS,eAAAsH,GAAA,OACAjU,SAAAiM,OAAAC,WAAA+H,QAEKxU,KAAAoB,MACLb,SAAAiM,OAAAG,WAAAf,QAAA4I,IAGAjU,SAAAiM,OAAAC,WAAAH,KAAAM,UAAA,SAAAA,GAGArM,SAAAiM,OAAAC,WAAAH,KAAAiI,gBAAA3H,GACArM,SAAAiM,OAAAI,UAAArM,SAAAiM,OAAAC,WAAA1E,gBAAAC,UAAA4E,MAGArM,SAAAiM,OAAAC,WAAAH,KAAA,uBAAAzH,EAAAF,GAGA,OACA4F,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,mBACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACOrH,EAAAF,GACPuH,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAyB,IAAA,SAAAC,EAAAtJ,GAGA,GAAAA,GAAAV,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,QAAAuE,UAAAgG,GAAAjL,IAAA2B,EAAA,SAAAC,GAGA,GAAAgM,GAAA3I,UAAArD,GACAgD,EAAAI,gBAAA4I,EACA,mBACA,MAAAhJ,GAAAqC,MAAA,GAAAR,QAAA,mBAAAhJ,UACA,IAAAmH,EAAA+I,QAAA,GAAAlH,QAAA,eAEA,IAAAmH,EAAA,MAEO3Q,KAAAoB,UAGPb,SAAAiM,OAAAC,WAAAH,KAAAmB,IAAA,SAAAzL,EAAA0L,GAGA,GAAAA,GAAA1J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAE,YAAA,KAAA5B,QAAA2L,EAAA,SAAAC,EAAAC,GAGA,OACArD,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,SACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACWlK,EAAA2L,GACXzB,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACS8B,GACT1B,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,uBAIAvL,SAAAiM,OAAAC,WAAAH,KAAA,0BAAA5K,GAGA,OACA6I,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,gBACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACSxK,GACTwK,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACOpK,GACPwK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAA,0BAAA5K,GAGA,OACA6I,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,gBACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACSxK,GACTwK,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBACOpK,GACPwK,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAGAvL,SAAAiM,OAAAC,WAAAH,KAAAmI,iBAAA,QAAAC,mBAAAC,KAGA,+BAAA9C,KAAA9J,gBAAAC,UAAA2M,OAAA,OAEApU,SAAAiM,OAAAC,WAAAH,KAAAsI,OAAA,SAAAC,EAAAxQ,GAGA,OACAkG,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,OACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,qBACO2I,GACPtK,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,YACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,qBACW7H,GACX6H,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAvB,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,YACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEAA,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,uBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,GACAsF,gBAGA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,OACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,iBACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,GACAsF,YACA2D,SAAA,EACAa,sBAEAA,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,WACA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,MACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,sBAEA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,iBACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,YACA2D,SAAA,EACAa,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,eAEarD,GACb6H,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,IACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,uBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,GACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,mBACA3B,IAAA,mCACAC,KAAA,mDACAlD,MAAA,KACAL,KAAA,UACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,GACA3H,OAAA,EACAsF,cAEA6C,IAAA,mCACAC,KAAA,mDACAlD,MAAA,kBACAL,KAAA,aACAxE,MAAA,MACAoH,KAAA,KACAE,IAAA,EACA3H,OAAA,GACAsF,cAEA2D,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,oBAEAI,oBACAb,SAAA,EACAQ,IAAArL,OACA+G,QAAA,EACAuE,mBAGA,IAAAgJ,MAAAvU,SAAAuU,MACAC,eACAC,gBAEAF,MAAAG,OAAA,SAAAhO,EAAA2F,EAAA/J,EAAA+D,GAGA,GAAAsO,GAAAJ,KAAAK,OAcA,OAbA,YACA,yBAAAD,UACA3U,UAAAuU,KAAAE,aAAAnS,GACAtC,SAAAuU,KAAAC,YAAAzS,KAAAgC,UAAA4Q,GACArS,OACAoE,OACA2F,YACAwI,WAAAxO,MAGArG,SAAAuU,KAAAE,aAAAnS,IAAA,GAEK7C,KAAAoB,YACLb,UAAAuU,KAAAK,SAEAL,KAAAO,KAAA,WAGA,GAAAA,GAAAtR,QAAAK,MAAA0Q,KAAAC,YAAA,SACAO,IAMA,OALAD,GAAAvS,QAAA,SAAAyS,GAGA,MAAAD,GAAAC,IAAAD,EAAAC,IAAA,OAEAD,GAEAR,KAAAU,KAAA,QAAAC,cAGA,MAAAX,MAAAC,YAAAhS,IAAA,SAAAqS,YAGA,eAAAA,WAAAnO,KAAA,IAAAmO,WAAAxI,UAAA,IAAA1F,SAAAkO,WAAAvS,MAAA,kBAAAuS,WAAAM,UAAA,gBACA,MAAAN,YAAAO,WACA,mBAAAP,WAAAO,WAAA5S,IAAA,WAGA,MAAA8O,MAAA9J,gBAAAC,UAAAvE,UAAA,QACWiC,KAAA,cAEX,IAEO1F,KAAAoB,MAAA,WACP,MAAAgU,YAAAC,KACA,SAAAD,WAAAC,KAAA3P,KAAA,WAEA,IAEO1F,KAAAoB,MAAA,cAAA8F,SAAAkO,sBAAA1N,SAAA,sBAAA0N,WAAAQ,cAAA7S,IAAA,WAGP,MAAAmE,UAAAzD,UAAA,YAAAsE,gBAAAC,UAAAvE,UAAA,OACOiC,KAAA,iBACFA,KAAA,KAELoP,KAAAe,YAAA,WAGA,GAAAC,GAAArW,oBAAA,IACA,OAAAqW,GAAAhB,KAAAU,SAEAV,KAAAiB,KAAA,WAGA,MAAAC,MAAAC,UAAAnB,KAAAhU,SAEAgU,KAAAhU,KAAA,WAGA,MAAAgU,MAAAC,YAAAhS,IAAA,SAAAqS,GAGA,OACAvS,KAAAqE,SAAAkO,EAAAvS,MAAA,GACA+J,UAAAwI,EAAAxI,UACA3F,KAAAmO,EAAAnO,KACAiP,YAAAd,EAAAM,UACAC,WAAA,WACA,MAAAP,GAAAO,WACAP,EAAAO,WAAA5S,IAAA,WAGA,MAAAU,WAAA,GAAA6D,MAAA/E,MAAA,YAKSvC,KAAAoB,MACTqC,UAAA2R,aAAA1N,SAAA,GAAAA,SAAA3E,IAAA,WAGA,MAAAmE,UAAAzD,UAAA,SAEA2R,WAAAlO,SAAAkO,cAAA,GACAQ,UAAAR,EAAAQ,cAAA7S,IAAA,WAGA,OACAoT,WAAApO,gBAAAC,UAAAvE,UAAA,KACAlD,SAAA2G,SAAAzD,UAAA,UAGA4R,KAAAD,EAAAC,QAIA,IAAAe,KAAA,SAAAxU,EAAAK,GAIA,MADAA,GAAAL,GACAA,GAEA8R,cAAA,SAAAzO,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAV,KAAAkC,EAAA,SAAA8K,GAGA,kBACA,MAAAhJ,aAAAgJ,GACAzL,UAAAyL,GAAiCrI,SAAAgM,cAAAvS,MAAAC,KAAAsC,QAAAK,QAAAgM,EAAArI,cACxB,mCAAA9E,YAAAC,KACT6Q,cAAAvS,MAAAC,KAAA2O,GACS,gBAAAA,GACTA,EAAAjO,WACS,gBAAAiO,GACTA,EAAAW,QAAA,GAAAlH,QAAA,mBAAAkH,QAAA,GAAAlH,QAAA,0BAEAuG,GAEO/P,KAAAoB,SAGP8O,OAAA,SAAAjL,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,eAAAiQ,cAAA3Q,IAAAkC,EAAA+C,YAAA,OAEAqO,YAAA,SAAAxO,GAGA,MAAAA,GAAA6I,QAAA,GAAAlH,QAAA,oDAA0D,cAE1D8M,QAAA,SAAA7F,GAGA,kBACA,yBAAAA,IAAA,OAAAA,EACA,GACO,gBAAAA,GACPA,EAAA7I,MAAA,YAAAlC,KAAA,QAAAnD,MAAA,OAAAmO,QAAA,GAAAlH,QAAA,gBAAAkH,QAAA,GAAAlH,QAAA,wBAEAiH,GAEKzQ,KAAAoB,OAELmR,QAAA,SAAA3L,EAAA3E,GAGA,kBACA,GAAA8E,YAAAH,GAAA,CACA,GAAA2P,GAAAtU,EAAA2E,EAMA,OALA,YACA,MAAAG,aAAAwP,GACAA,EAAA7O,SAAA6K,QAAAgE,EAAA7O,SAAAzF,GADA,QAGSjC,KAAAoB,MACTmV,EACO,0CAAA3T,YAAAC,KACPE,IAAA6D,EAAA,WAGA,MAAA2L,SAAA9O,UAAA,GAAAxB,KAGAA,EAAA2E,IAEK5G,KAAAoB,OAELoV,SAAA,SAAA5P,EAAA3E,GAGA,kBACA,MAAA8E,aAAAH,GACA,WACA,MAAA3E,GAAA2E,GACA4P,SAAA5P,EAAAc,SAAAzF,GADA,QAGSjC,KAAAoB,MACF,mCAAAwB,YAAAC,KACP+D,EAAA9D,QAAA,SAAA5C,GAGA,MAAAsW,UAAAtW,EAAA+B,KAGAA,EAAA2E,IAEK5G,KAAAoB,OAELqV,iBAAA,SAAA9F,GAGA,kBACA,MAAA5J,aAAA4J,GACA8F,iBAAA9F,EAAAjJ,UACO,mCAAA9E,YAAAC,KACP4T,iBAAA9F,EAAApO,MAAA,QACO,gBAAAoO,GACP,MAAiBA,EAAApO,MAAA,QAEjB,GAEKvC,KAAAoB,OAELyM,YAAA,SAAAjH,GAGA,GAAA+J,GAAA3I,UAAApB,EACA,mBACA,MAAA8P,kBAAA/F,GACA,OACO8F,iBAAA9F,GACPA,GAEAA,EAAA,MAEK3Q,KAAAoB,OAELuV,eAAA,SAAA/P,GAGA,MAAAG,aAAAH,EAAA,OAEAgQ,aAAA,SAAAhQ,GAGA,GAAAiQ,KAWA,OAVAL,UAAA5P,EAAA,SAAAkQ,GAQA,MALA,YACA,MAAAH,gBAAAG,GACAD,EAAAC,EAAAC,QAAA/O,UAAA8O,GADA,QAGO9W,KAAAoB,OACP2F,YAAA+P,EAAA,UAEAD,GAEAG,WAAA,SAAApQ,GAoBA,MAjBA,YACA,GAAAA,KAAA,0BAAAA,GAAA,oBAAAA,EAAA,SAAAhE,YAAAC,KAAA,CACA,GAAA6E,KAYA,OAXAd,GAAAc,SAAA5E,QAAA,SAAA2N,GAGA,kBACA,MAAA1J,aAAA0J,EAAA,SAAAA,EAAA,0BAAAA,GAAA,oBAAAA,EAAA,SAAA7N,YAAAC,MAAA,IAAA4N,EAAA/I,SAAAtF,QAAAqO,EAAA/I,SAAA,oBAAA+I,GAAA/I,SAAA,cAAA+I,EAAA/I,SAAA,GAAA9E,YAAAC,KACA6E,EAAApF,KAAAnB,MAAAuG,EAAA+I,EAAA/I,SAAA,IAEAA,EAAApF,KAAAmO,IAEWzQ,KAAAoB,QAEXwF,EAAAc,aAEK1H,KAAAoB,MACLwF,GAEAqQ,yBAAA,SAAAC,GAGA,MAAAnT,SAAAhB,IAAA0B,OAAAC,KAAAwS,GAAA,SAAAvS,GAGA,OAAAA,EAAAuS,EAAAvS,QAGAwS,yBAAA,SAAAvQ,EAAAwQ,GAGA,kBACA,GAAArQ,YAAAH,GAAA,CACA,GAAA2P,GAAA,WACA,MAAAa,GAAAlK,eAAAtG,EAAAmQ,QACAK,EAAAxQ,EAAAmQ,QAEAnS,MAAAgC,IAES5G,KAAAoB,KAOT,OANA,YACA,MAAA2F,aAAAwP,GACAA,EAAA7O,SAAAyP,yBAAAZ,EAAA7O,SAAA0P,GADA,QAGSpX,KAAAoB,MACTmV,EAAAS,WAAAT,GAEO,0CAAA3T,YAAAC,KACPE,IAAA6D,EAAA,WAGA,MAAAuQ,0BAAA1T,UAAA,GAAA2T,KAGAxQ,GAEK5G,KAAAoB,MAELb,UAAAiM,OAAAC,WAAAH,KAAA/L,UAAA,SAAA+G,IAGA,WACA,MAAA/G,UAAA8W,MACAlS,QAAAC,IAAA,aAAA8B,SAAAI,IADA,SAGKtH,KAAAoB,KACL,IAAAkW,GAAAzJ,aAAA,UAAA7F,UAAAV,IACA,mBACA,MAAAA,MAAAI,UAAAJ,EAAAI,SAAAtF,OACA,WACA,OAAAkF,EAAAI,SAAA,GAAAJ,OACA,aACA,YACA,SACA,MAAAU,WAAAV,EAEA,cACA,GAAAoL,GAAAlG,gBACA,mBACA,MAAAlF,GAAAI,SAAAtF,OAAA,EACAkV,GAEAzJ,YAAA6E,EAAAvR,MAAAC,KAAAkG,EAAAI,SAAAnF,MAAA,oBAAAsL,YAAA6E,EAAApL,EAAAI,SAAAnF,MAAA,WAEavC,KAAAoB,KAEb,WACA,OAAA4G,UAAAV,GAAA,KAAA/G,SAAAiM,OAAAC,WAAAH,KAAA/L,UAAA+G,EAAAI,SAAA,IAEA,cACA,kBACA,GAAAJ,EAAAI,SAAAtF,OAAA,EACA,MAAAkV,EAEA,IAAApW,GAAA0D,MAAAoD,UAAAV,GAEA,OADApG,GAAAwG,SAAAxG,EAAAwG,SAAAnF,MAAA,MAAAuB,QAAA,WAAA5C,EAAAwG,SAAAnF,MAAA,KACArB,GAEalB,KAAAoB,KAEb,WACA,OAAA4G,UAAAV,GAAA,KAAA/G,SAAAiM,OAAAC,WAAAH,KAAA/L,UAAA,WACA,WAAA+G,EAAAI,SAAAtF,OAAA,EACAkF,EAAAI,SAAAnF,MAAA,OAEA+E,EAAAI,SAAAnF,MAAA,QAEavC,KAAAoB,OAEb,WACA,kBACA,GAAAkG,EAAAI,SAAAtF,OAAA,EACA,MAAAkV,EAEA,IAAAtJ,GAAA1G,EAAAI,SAAA,GACA6P,EAAAjQ,EAAAI,SAAAnF,MAAA,EAAA+E,EAAAI,SAAAtF,OAAA,GACAoV,EAAAlQ,EAAAI,SAAAnF,MAAA,GAGA,OAFAgV,GAAA3L,QAAAoC,GACAwJ,EAAA5L,QAAAoC,IACAzN,SAAAiM,OAAAC,WAAAH,KAAAmB,IAAAtM,MAAAC,KAAAmW,GAAA,YAAAhX,SAAAiM,OAAAC,WAAAH,KAAAmB,IAAAtM,MAAAC,KAAAoW,KAEaxX,KAAAoB,KAEb,SACA,MAAAkW,KAEStX,KAAAoB,MAETkW,GAEKtX,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAA/L,MAAA,SAAAsO,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,mBACA,WAAAoL,EAAAzM,OACA7B,SAAAiM,OAAAC,WAAAH,KAAA/L,UAAAsO,EAAA,IACOA,EAAAzM,QACPuB,WAAAZ,IAAA8L,EAAAtM,MAAA,iBAGA,MAAAsL,aAAApK,UAAA,MACS,WAAAlD,SAAAiM,OAAAC,WAAAH,KAAA/L,UAAAsO,EAAAtM,MAAA,SAET,IAEKvC,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAAmL,UAAA,WAGA,cAEAlX,SAAAiM,OAAAC,WAAAH,KAAAoL,IAAA,SAAAC,EAAA1S,EAAA4J,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,IAEA,WACA,yBAAAkU,GACAtW,MAAA,8CACO,mBAAA4D,GACP5D,MAAA,mEADO,SAGFrB,KAAAoB,KACL,IAAAwW,GAAA5P,UAAA2P,GACAE,EAAAzW,IAEA,OADAb,UAAAuU,KAAAG,OAAA,WAAA1U,SAAAiM,OAAAG,WAAA,GAAAgL,EAAAvW,MACAyM,aAAA,WACA,MAAA9F,iBAAA6P,GAAA5N,MAAA,GAAAR,QAAA,MAAAhJ,SACA,GAEA,QAEKR,KAAAoB,MAAAwW,EAAA,MAAArX,SAAAiM,OAAAC,WAAAH,KAAAwL,OAAA3W,MAAAC,OACLyB,KAAA8U,EACA1S,OACA2B,KAAAiR,IACK/T,OAAA+K,OAELtO,SAAAiM,OAAAC,WAAAH,KAAAW,MAAA,QAAA8K,wCAAAlV,KAAAoC,KAAA4J,MAGA,GAAAA,MAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEAuU,OAAAjQ,gBAAAC,UAAAnF,OACAoV,SACApV,UACAoC,UACA2B,KAAAxF,MAEA8W,GAAAnQ,gBAAAxH,SAAAiM,OAAAC,WAAAH,KAAAwL,OAAA3W,MAAAC,MAAA6W,SAAAnU,OAAA+K,SACA,WACA,MAAAtO,UAAA8W,MACAlS,QAAAC,IAAA8S,IADA,SAGKlY,KAAAoB,MACLb,SAAAuU,KAAAG,OAAA,QAAA1U,SAAAiM,OAAAG,WAAA,GAAA9J,KAAAzB,KACA,IAAA+W,UAAA,WACA,IACA,MAAAtG,MAAAqG,IACO,MAAAtX,GAGP,MAFAuE,SAAAC,IAAAxE,EAAAU,SACA6D,QAAAC,IAAAQ,IAAAhF,EAAAgJ,MAAAhC,MAAA,WACAzC,QAAAC,IAAA,0BAAA7E,SAAAoG,YAAA9D,MAAA,MAAAqV,MAEKlY,KAAAoB,KACLb,UAAAiM,OAAAI,UAAAoL,QAAAG,UAGA5X,SAAAiM,OAAAC,WAAAH,KAAA8L,KAAA,QAAAC,uCAAAxJ,MAGA,GAAAA,MAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEAyU,GAAAnQ,gBAAAC,UAAAzH,SAAAiM,OAAAC,WAAAH,KAAAsC,OAAAzN,MAAAC,KAAAyN,OAMA,OALA,YACA,MAAAtO,UAAA8W,MACAlS,QAAAC,IAAA8S,IADA,QAGKlY,KAAAoB,MACL2G,gBAAA8J,KAAAqG,MAEA3X,SAAAiM,OAAAC,WAAAH,KAAAxI,OAAA,SAAAmB,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,YAAAE,WAAA,MAAAZ,IAAAkC,EAAA+C,YAAA,MAEAzH,SAAAiM,OAAAC,WAAAH,KAAAgM,QAAA,SAAAtW,GAGA,GAAAuW,KAMA,OALAvW,GAAAc,QAAA,SAAAlB,GAGA,MAAA2W,GAAA3M,QAAAhK,KAEA2W,EAEA,IAAAD,SAAA/X,SAAAiM,OAAAC,WAAAH,KAAAgM,OACA/X,UAAAiM,OAAAC,WAAAH,KAAAwL,OAAA,SAAAU,EAAA3J,GAGA,GAAAA,GAAA7K,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,IAEA,WACA,MAAAlD,UAAA8W,MACAlS,QAAAC,IAAAoT,GADA,SAGKxY,KAAAoB,KACL,IAAA6D,GAAAuT,EAAAvT,MAAAuT,EACA3J,EAAA2J,EAAA3J,QACA5J,EAAA,WACA,MAAA8B,aAAA9B,EAAA,cACAA,EAAAyC,SACOX,YAAA9B,IAAA,IAAA4J,EAAAzM,QACPyM,GAAA5J,OAGAA,GAEKjF,KAAAoB,MACLyB,EAAA,WACA,MAAA2V,GAAA3V,KACAkF,gBAAAC,UAAAwQ,EAAA3V,OAAA6N,QAAA,GAAAlH,QAAA,iBAAA1F,OAAA,KADA,QAGK9D,KAAAoB,MACLoN,EAAAtL,OAAA+B,EAAA,WAGA,MAAA8B,aAAAtD,UAAA,aAEAoU,EAAAzW,KACAwF,EAAA1D,QAAAsV,EAAA5R,KAAAiR,EAAAW,EAAA3V,KAAAoC,EAAA4J,EAAA,aAAAiI,GAGA,MAAA/P,aAAA+P,MAAAtM,MAEA,+BACA,MAAA3H,GACA,IAAAA,EAEA,IAEK7C,KAAAoB,MAAA,IAAAuC,WAAA,KAAAZ,IAAAkC,EAAA+C,YAAA,MAA+D,WACpE,MAAAwQ,GAAA3V,MAAA+D,EACAsJ,QAAA,gBACA,MAAAsI,GAAA3V,KACA,IAAAtC,SAAAoG,YAAA6R,EAAA3V,MAAA,GAEA,IAES7C,KAAAoB,MAAA,WACT,MAAAwF,GACA,IAAAA,EAAA4D,KAAA,IAAA5D,EAAAiD,KAAA,IAAAjD,EAAAmD,IAEA,IAES/J,KAAAoB,MAAA,QAET,IAEKpB,KAAAoB,MAAA,WACL,yBAAAoN,IAAA,OAAAA,EACA0B,OAAArC,aAAA,OAAA7F,UAAAwG,GAAA,4CAAAvJ,EAAA7C,OAAA,SADA,QAGKpC,KAAAoB,MAAA8O,OAAA3P,SAAAiM,OAAAC,WAAAH,KAAA/L,MAAAY,MAAAC,KAAAyN,IAAA,OAELtO,SAAAiM,OAAAC,WAAAH,KAAA,KAAA/L,SAAAiM,OAAAC,WAAAH,KAAAwL,OACAvX,SAAAiM,OAAAC,WAAAH,KAAAmM,WAAA,SAAA3K,GAGA,GAAAA,GAAA9J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEAiV,EAAAnY,SAAAoY,aACApY,UAAAoY,eAAA,CACA,IAAAhW,GAAApC,SAAAiM,OAAAC,WAAAH,KAAA4K,KAAA/V,MAAAC,KAAA0M,EAEA,OADAvN,UAAAoY,cAAAD,EACA/V,GAEApC,SAAAiM,OAAAC,WAAAH,KAAA4K,KAAA,SAAApJ,GAGA,GAAAA,GAAA9J,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,IAEA,WACA,WAAAqK,EAAA1L,OAAA,EACAf,MAAA,0CAAAM,QAAAmM,IADA,SAGK9N,KAAAoB,KACL,IAAAwX,GAAArY,SAAAoY,cACAE,EAAA9W,QAAA+L,EAAA,SAAAnJ,EAAAhC,GAGA,kBACA,MAAAiW,KAAA7R,YAAApC,EAAA,WACA,IAAAqD,UAAArD,GAAA,KAEAqD,UAAArD,IAEO3E,KAAAoB,MAAA,KAAA4G,UAAArF,KAEP,mBACA,UAAAkW,EAAAzW,QACA,KAAmBuB,WAAA,KAAAkV,GAAA,OAEnB,IAAmB3I,OAAAvM,WAAA,MAAAkV,IAAA,MAEd7Y,KAAAoB,MAEL,IAAA0X,eAAA,SAAArI,GAGA,kBACA,MAAA1J,aAAA0J,EAAA,aAAAA,EAAAnJ,MAAAlF,QAAA2E,YAAA0J,EAAA/I,SAAA,SACApD,UAAAM,MAAA6L,IAA0C/I,UAAAM,UAAAyI,EAAA/I,SAAA,OACnCX,YAAA0J,EAAA,MACPzI,UAAAyI,EAAA/I,SAAA,IACOX,YAAA0J,EAAA,QACPuF,KAAAC,UAAAxF,GACO,gBAAAA,IAAA,OAAAA,GAAA,UAAAA,EAAA7N,YAAAC,KACPtC,SAAAiM,OAAAC,WAAAH,KAAA4K,KAAA/V,MAAAC,KAAAqD,OAAAC,KAAA+L,GAAAsI,OAAA,WAGA,MAAAtV,WAAA,GAAAK,QAAAL,UAAA,GAAAqV,cAAArI,EAAAhN,UAAA,aAEO,mCAAAb,YAAAC,KACPtC,SAAAiM,OAAAC,WAAAH,KAAAoC,KAAAvN,MAAAC,KAAA2B,IAAA0N,EAAAqI,gBACO,mBAAArI,GACP,YACO,gBAAAA,GACPA,EAAA3O,WAEAkU,KAAAC,UAAAxF,IAEKzQ,KAAAoB,OAEL4X,mBAAA,SAAAvI,GAIA,MADAtL,SAAAC,IAAA7E,SAAAoG,YAAA8J,IACAA,EAEAlQ,UAAAiM,OAAAC,WAAAH,KAAA2M,MAAA,SAAAxI,GAGA,GAAAoG,GAAAD,aAAAnG,EACA,mBACA,sBAAAA,GACA,IAAA6F,QAAA7F,GAAA,IACO,gBAAAA,GACPlQ,SAAAiM,OAAAC,WAAAH,KAAA2M,MAAAxI,EAAA3O,YACOiF,YAAA0J,EAAA,wBACP,IAAAzI,UAAAyI,GAAA,KACOhM,OAAAC,KAAAmS,GAAAzU,OACP0W,cAAArI,EAAAoG,GACO9P,YAAA0J,EAAA,eACP,IAAA8B,QAAAvK,UAAAyI,GAAA6F,SAAA,KACOvP,YAAA0J,EAAA,WACPlQ,SAAAiM,OAAAC,WAAAH,KAAAoC,KAAAvN,MAAAC,KAAA2B,IAAA0N,EAAA/I,SAAAnH,SAAAiM,OAAAC,WAAAH,KAAA2M,QACOlS,YAAA0J,EAAA,SACPlQ,SAAAiM,OAAAC,WAAAH,KAAA4K,KAAA/V,MAAAC,KAAA2B,IAAA0N,EAAA/I,SAAAnH,SAAAiM,OAAAC,WAAAH,KAAA2M,SAEA9T,QAAAC,IAAA,kBAAAzD,QAAA8O,IACAA,IAEKzQ,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAA+K,MAAA,QAAA6B,wCAAA3F,KAIA,MADAhT,UAAA8W,MAAAxF,KAAA9J,gBAAAC,UAAAuL,OACA,MAEAhT,SAAAiM,OAAAC,WAAAH,KAAA6M,YAAA,SAAAvS,EAAAwQ,GAGA,MAAApP,WAAAmP,yBAAA,WACA,MAAApQ,aAAAH,GACAA,EAEArG,SAAA6Y,UAAAxS,IAEK5G,KAAAoB,MAAAgW,KAEL7W,SAAAiM,OAAAC,WAAAH,KAAAoC,KAAA,SAAAzJ,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEA4V,IACA,mBACA,OAAApU,EAAA7C,OACA,UAEA,IAAAkX,GAAA,SAAArU,GAGA,YAAAtB,WAAA,KAAAZ,IAAAkC,EAAA,SAAA8K,GAGA,MAAAA,GAAAY,cACW,MA0BX,OAxBA1L,GAAAnC,QAAA,SAAAiN,GAGA,kBACA,MAAAhJ,aAAAgJ,EAAA,QACAsJ,EAAA/W,MAAuCqO,WAAA3I,UAAA+H,KAC1BsJ,EAAA9W,MAAA,wBAAA8W,GAAA9W,MAAA,kBAAA8W,EAAA9W,MAAA,OAAAK,YAAAC,KACbwW,EAAA9W,MAAA,OAAAD,MAAoDqO,WAAA3I,UAAA+H,KAEpDsJ,EAAA/W,OAAyCqO,WAAA3I,UAAA+H,OAE9B/P,KAAAoB,QAEXiY,EAAAtW,IAAAsW,EAAA,SAAAE,GAGA,kBACA,0CAAA3W,YAAAC,KACAyW,EAAAC,GAEAA,EAAA5I,YAEW3Q,KAAAoB,QAEX,WACA,WAAAiY,EAAAjX,OACAiX,EAAA,IAEAA,EAAA,cAAA1V,WAAA,KAAA0V,EAAA9W,MAAA,UAESvC,KAAAoB,OAEJpB,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAAtM,KAAA,SAAA2X,EAAA1S,GAGA,GAAAA,GAAAjB,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,mBACA,MAAAF,YAAA0B,EAAA,WAGA,MAAA8B,aAAAtD,UAAA,aAEA+I,OAAArL,MAAAwW,EAAAnL,OAAAkC,KAAAvN,MAAAC,KAAA6D,KAEA+C,UAAA2P,GAAA,IAAAhU,WAAA,KAAAZ,IAAAkC,EAAA+C,YAAA,MAEKhI,KAAAoB,OAELb,SAAAiM,OAAAC,WAAAH,KAAAzD,KAAA,SAAAnB,GAGA,GAAAA,GAAA1D,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAuE,WAAAN,IAEAnH,SAAAiM,OAAAC,WAAAH,KAAAkN,QAAA,QAAAC,0CAAAC,OAGA,GAAAA,OAAA1V,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,OAAAE,YAAA+V,MAAA3W,IAAA,SAAAyH,MAGA,MAAAjK,UAAA4M,sBAAA,WAGA,MAAA5M,UAAAiZ,QAAA3H,KAAA9J,gBAAAC,UAAAwC,aAEK,OAELjK,SAAAiM,OAAAC,WAAAH,KAAAwI,KAAA,QAAA6E,uCAAA1B,SAGA,GAAAA,SAAAjU,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,GAEAmW,cAAApZ,OACAqZ,cAkDA,OAjDA,YACA,WAAA5B,QAAA7V,OAAA,EACA,WACA,MAAA2E,aAAAkR,QAAA,8BAAAA,SAAA,GACA2B,cAAA3B,QAAAlM,QACWhF,YAAAkR,QAAA1V,MAAA,kCAAA0V,SAAA1V,MAAA,OACXqX,cAAA3B,QAAA6B,MADW,QAGF9Z,KAAAoB,MAPT,QASKpB,KAAAoB,MACLW,QAAAkW,QAAA,SAAAtT,EAAAhC,GAGA,MAAAkX,aAAA9R,gBAAAC,UAAArD,KAAAhC,KAEA,yBAAAG,QAAA,SAAAiX,GAGA,kBACA,MAAAF,aAAA3M,eAAA6M,IAAAhT,YAAA8S,YAAAE,GAAA,WACAF,YAAAE,GAAAF,YAAAE,GAAArS,SADA,QAGO1H,KAAAoB,QAEP,WACA,MAAAyY,aAAA3M,eAAA,YACA,WACA,MAAA2M,aAAA3M,eAAA,YACA7L,MAAA,gDADA,QAGSrB,KAAAoB,MACTyY,YAAAjE,UAAAiE,YAAAG,eACAH,aAAAG,SAPA,QASKha,KAAAoB,MACL,WACA,MAAAyY,aAAA3M,eAAA,QACA2M,YAAAxE,KAAAxD,KAAA9J,gBAAAC,UAAAzH,SAAAiM,OAAAC,WAAAH,KAAA2M,MAAAY,YAAAxE,SADA,QAGKrV,KAAAoB,MACL,WACA,MAAA2F,aAAA6S,cAAA,UACAC,YAAAnE,UAAA7D,KAAA9J,gBAAAC,UAAA4R,iBACO,gBAAAA,eACPC,YAAAnE,UAAAkE,cADO,QAGF5Z,KAAAoB,MACLb,SAAAuU,KAAAK,QAAA0E,YACA,KAEA,IAAA9S,aAAA,SAAA8I,EAAAoK,GAGA,GAAAA,GAAAjW,MAAAC,UAAA1B,MAAAvC,KAAAyD,UAAA,EAEA,0BAAAoM,IAAA,OAAAA,GAAA,gBAAAA,IAAA,gBAAAA,GAAA5I,OAAA,IAAAgT,EAAA7X,QAAA,KAAA6X,EAAAxP,QAAAoF,EAAA5I,QAAA4I,EAAA3C,eAAA,aAEAwJ,iBAAA,SAAA9U,GAGA,kBACA,MAAAmF,aAAAnF,GACA8U,iBAAA9U,EAAA8F,UACO,mCAAA9E,YAAAC,KACPQ,WAAAzB,EAAA8U,kBACO,gBAAA9U,GACPA,EAAAoI,MAAA,GAAAR,QAAA,SAAAhJ,SAEA,OAAAoB,GAAA,mBAAAA,KAAA,IAAAA;EAEK5B,KAAAoB,OAEL8Y,YAAA,SAAAtY,GAGA,kBACA,GAAAmF,YAAAnF,GAEA,MADAA,GAAA8F,SAAAwS,YAAAtY,EAAA8F,UACA,WACA,MAAA9F,GAAA8F,UAAA9F,EAAA8F,SAAAtF,OACAR,EAEA,MAES5B,KAAAoB,KACF,uCAAAwB,YAAAC,KAAA,CACP,GAAAsX,GAAAzW,QAAAX,IAAAnB,EAAAsY,aACA,mBACA,MAAAC,MAAA/X,OACA+X,EAEA,MAESna,KAAAoB,MAET,kBACA,WAAAQ,QAAA,EACA,KAEAA,GAES5B,KAAAoB,OAEJpB,KAAAoB,OAELgZ,iBAAA,SAAAxT,GAGA,kBACA,0CAAAhE,YAAAC,KACAE,IAAA6D,EAAAwT,kBACOrT,YAAAH,EAAA,UACPtC,UAAAsC,GAAgCc,SAAA0S,iBAAAxT,EAAAc,YACzBX,YAAAH,GACPoB,UAAApB,GAEAA,GAEK5G,KAAAoB,OAEL4G,UAAA,SAAApB,EAAAyT,GAkBA,MAfA,YACA,sBAAAzT,GACAA,GACAK,KAAA,KACAK,MAAAV,EACAc,aAEO,gBAAAd,GACPA,GACAK,KAAA,SACAK,MAAAV,EAAA9E,WACA4F,aAJO,QAOF1H,KAAAoB,MACL,WACA,sCAAAwB,YAAAC,KACA,MAAA+D,EACO,uBAAAA,IAAA,OAAAA,EAAA,CACP,GAAA0T,GAAAtS,UAAApB,EAAAK,OAAAe,qBACA9G,EAAAoZ,EAAA1T,GACA2T,EAAAH,iBAAA,WACA,MAAArT,aAAA7F,GACAA,GAGAwG,SAAAxG,EACA+F,KAAA,WAGSjH,KAAAoB,MAgBT,OAfA,YACA,sBAAAmZ,GAIA,KAHApV,SAAAC,IAAA,GAAAwB,EAAA4D,KAAA,IAAA5D,EAAAiD,KAAA,IAAAjD,EAAAmD,IAAA,KAAA7C,SAAAN,IACAzB,QAAAC,IAAA8B,SAAAhG,IACAiE,QAAAC,IAAA8B,SAAAc,UAAA9G,KACA,GAAAsK,OAAA,oIAESxL,KAAAoB,MACTmZ,EAAA7S,SAAAhE,QAAAK,QAAAwW,EAAA7S,WACA6S,EAAAnG,OAAAxN,EACA,WACA,SAAArG,SAAA8W,MACAlS,QAAAC,IAAA8B,SAAAN,GAAAhB,IAAA,MAAAsB,SAAAqT,IADA,QAGSva,KAAAoB,MACT,WACA,MAAAsV,kBAAA6D,GACA,OAEAA,GAESva,KAAAoB,QAEJpB,KAAAoB,MAELb,UAAAyH,mBACA,IAAAwS,gBACAxS,WAAAY,IAAA,SAAAhC,GAGA,GAAAU,GAAAV,EAAAc,SAAA,GAAAJ,MACAmT,EAAA,WACA,MAAAnT,GAAA0C,MAAA,GAAAR,QAAA,IAAAhJ,SACA8G,EAAAM,MAAA,MAEArH,SAAAiM,OAAAG,WAAA,GAAArF,IAEKtH,KAAAoB,MACLwL,EAAA6N,EAAA,GACAxN,EAAAwN,EAAA,GACAA,EAAAja,MACA,OAAAD,UAAAiM,OAAAC,WAAAH,KAAAyB,IAAA/N,KAAA4G,EAAA,6BAAArG,SAAAiM,OAAAC,WAAAH,KAAA2M,MAAAjR,UAAAQ,SAAiJlB,MAAAsF,KAAmBrM,SAAAiM,OAAAC,WAAAH,KAAA2M,MAAAjR,UAAAQ,SAA6DlB,MAAA2F,OAEjOjF,UAAAW,KAAA,SAAA/B,GAGA,MAAArG,UAAAiM,OAAAC,WAAAH,KAAA2M,MAAA9X,MAAAyF,IAAAc,WAEAM,UAAAU,GAAA,SAAA9B,GAGA,MAAAoB,WAAApB,EAAAc,SAAA,KAEAM,UAAAa,KAAA,SAAAjC,GAGA,MAAArG,UAAAiM,OAAAC,WAAAH,KAAAzD,KAAA1H,MAAAyF,IAAAc,WAEAM,qBAAA,SAAApB,GAGA,MAAAA,GAAAU,OAEAU,UAAAL,OAAA,SAAAf,GAGA,MAAAA,IAEAoB,UAAAO,OAAA,SAAA3B,GAGA,MAAA8T,YAAA9T,EAAAU,MAAAoJ,QAAA,GAAAlH,QAAA,cAAA1H,YAEAkG,UAAAP,KAAA,SAAAb,GAGA,kBACA,WAAAA,EAAAc,SAAAtF,OACA4F,UAAApB,EAAAc,SAAA,IAEA/D,WAAAD,QAAAX,IAAA6D,EAAAc,SAAAmG,cAAA,OAEK7N,KAAAoB,OAEL4G,UAAA2S,WAAA,SAAA/T,EAAAyT,GAGA,kBACA,GAAAzT,EAAAc,SAAAtF,OAAA,CACA,GAAAwY,GAAAhU,EAAAc,SAAA,GACAzC,EAAA2B,EAAAc,SACAuF,EAAA1M,SAAAuM,aAAA,OAkBA,OAjBA,YACA,GAAA/F,YAAA6T,EAAA,UACA,MAAA3N,GAAA1M,SAAAuM,aAAA,SACW,IAAA/F,YAAA6T,EAAA,QAEX,MADA3N,GAAA1M,SAAAuM,aAAA,QACA7H,GAAA2B,EAAAc,SAAA,GAAAkT,EAAAlT,SAAA,IAAA5D,OAAA8C,EAAAc,SAAAnF,MAAA,GACW,IAAAwE,YAAA6T,EAAA,wBACX,GAAAC,GAAAta,SAAAuM,aAAA/E,gBAAAC,UAAA4S,IACA,mBACA,MAAAC,IACAD,EAAA9S,KAAA,QACAmF,EAAA4N,EACA5V,EAAA2B,EAAAc,SAAAnF,MAAA,IAHA,QAKavC,KAAAoB,QAEJpB,KAAAoB,MACT6L,EAAA9L,MAAAyF,EAAA3B,GAEA,cAEKjF,KAAAoB,OAEL4G,UAAA8S,QAAA,SAAAlU,GAGA,MAAArG,UAAAiM,OAAAC,WAAAH,KAAAoC,KAAAvN,MAAAC,KAAAwF,EAAAc,WAEAM,UAAA+S,MAAA,SAAAnU,GAGA,MAAArG,UAAAiM,OAAAC,WAAAH,KAAA4K,KAAA/V,MAAAC,KAAAwF,EAAAc,WAEAM,UAAAQ,QAAA,SAAA5B,GAGA,GAAAiB,GAAAjB,EAAAU,KACA,OAAA9E,QAAAqF,EAAA6I,QAAA,GAAAlH,QAAA,gBAAAkH,QAAA,GAAAlH,QAAA,OAAAhJ,QAAA,WAAAkQ,QAAA,GAAAlH,QAAA,KAAAhJ,QAAA,UAAAqH,EAAAmC,MAAA,GAAAR,QAAA,sBAAAwR,EAAAhR,GAGA,MAAAgR,GAAAtK,QAAA1G,IAAA,GAAAiR,kBAGAjT,UAAAH,OAAA,SAAAjB,GAGA,MAAAA,GAAAU,MAAAM,MAAA,MAAAlC,KAAA,cAEAsC,UAAAM,QAAA,SAAA1B,GAGA,YAEA,IAAAkO,MAAAvU,SAAAuU,MACAC,eACAC,gBAEAF,MAAAG,OAAA,SAAAhO,EAAA2F,EAAA/J,EAAA+D,GAGA,GAAAsO,GAAAJ,KAAAK,OAcA,OAbA,YACA,yBAAAD,UACA3U,UAAAuU,KAAAE,aAAAnS,GACAtC,SAAAuU,KAAAC,YAAAzS,KAAAgC,UAAA4Q,GACArS,OACAoE,OACA2F,YACAwI,WAAAxO,MAGArG,SAAAuU,KAAAE,aAAAnS,IAAA,GAEK7C,KAAAoB,YACLb,UAAAuU,KAAAK,SAEAL,KAAAO,KAAA,WAGA,GAAAA,GAAAtR,QAAAK,MAAA0Q,KAAAC,YAAA,SACAO,IAMA,OALAD,GAAAvS,QAAA,SAAAyS,GAGA,MAAAD,GAAAC,IAAAD,EAAAC,IAAA,OAEAD,GAEAR,KAAAU,KAAA,QAAAC,cAGA,MAAAX,MAAAC,YAAAhS,IAAA,SAAAqS,YAGA,eAAAA,WAAAnO,KAAA,IAAAmO,WAAAxI,UAAA,IAAA1F,SAAAkO,WAAAvS,MAAA,kBAAAuS,WAAAM,UAAA,gBACA,MAAAN,YAAAO,WACA,mBAAAP,WAAAO,WAAA5S,IAAA,WAGA,MAAA8O,MAAA9J,gBAAAC,UAAAvE,UAAA,QACWiC,KAAA,cAEX,IAEO1F,KAAAoB,MAAA,WACP,MAAAgU,YAAAC,KACA,SAAAD,WAAAC,KAAA3P,KAAA,WAEA,IAEO1F,KAAAoB,MAAA,cAAA8F,SAAAkO,sBAAA1N,SAAA,sBAAA0N,WAAAQ,cAAA7S,IAAA,WAGP,MAAAmE,UAAAzD,UAAA,YAAAsE,gBAAAC,UAAAvE,UAAA,OACOiC,KAAA,iBACFA,KAAA,KAELoP,KAAAe,YAAA,WAGA,GAAAC,GAAArW,oBAAA,IACA,OAAAqW,GAAAhB,KAAAU,SAEAV,KAAAiB,KAAA,WAGA,MAAAC,MAAAC,UAAAnB,KAAAhU,SAEAgU,KAAAhU,KAAA,WAGA,MAAAgU,MAAAC,YAAAhS,IAAA,SAAAqS,GAGA,OACAvS,KAAAqE,SAAAkO,EAAAvS,MAAA,GACA+J,UAAAwI,EAAAxI,UACA3F,KAAAmO,EAAAnO,KACAiP,YAAAd,EAAAM,UACAC,WAAA,WACA,MAAAP,GAAAO,WACAP,EAAAO,WAAA5S,IAAA,WAGA,MAAAU,WAAA,GAAA6D,MAAA/E,MAAA,YAKSvC,KAAAoB,MACTqC,UAAA2R,aAAA1N,SAAA,GAAAA,SAAA3E,IAAA,WAGA,MAAAmE,UAAAzD,UAAA,SAEA2R,WAAAlO,SAAAkO,cAAA,GACAQ,UAAAR,EAAAQ,cAAA7S,IAAA,WAGA,OACAoT,WAAApO,gBAAAC,UAAAvE,UAAA,KACAlD,SAAA2G,SAAAzD,UAAA,UAGA4R,KAAAD,EAAAC,QAIA,IAAA5U,UAAA,SAAAyK,GAGA3K,SAAA2a,YACA,IAAAha,GAAA6G,gBAAAC,UAAAiD,YAAAxB,MAAAyB,KACA,OAAAhK,IAEAia,UAAA,SAAAjQ,GAIA,MADA3K,UAAA2a,aACAE,aAAApT,UAAAiD,YAAAxB,MAAAyB,MAEA3K,UAAAE,kBACAF,SAAA8a,QAAA,WAGA,MAAA9a,UAAA+a,cAAAD,SAEA9a,SAAAgb,aAAA,SAAAza,GAGA,MAAAA,GAAA4P,QAAA,GAAAlH,QAAA,WAAAhJ,QAAA,OAEAD,SAAAiK,KAAA,eACA,IAAAgR,gBAAA,SAAAjR,EAAAC,EAAAvI,GAGA,GAAA6R,IACAvJ,IAAAhK,SAAAgK,IACAC,KAAAjK,SAAAiK,KAEAjK,UAAAgK,MACAhK,SAAAiK,MACA,IAAAiR,GAAAxZ,GAGA,OAFA1B,UAAAgK,IAAAuJ,EAAAvJ,IACAhK,SAAAiK,KAAAsJ,EAAAtJ,KACAiR,EAEAlb,UAAAmb,eACAnb,SAAAob,aAAA,SAAAC,GAGA,MAAA7T,iBAAAxH,SAAAsb,cAAAD,KAEArb,SAAAub,aAAA,SAAAF,GAGArb,SAAA2a,YACA,IAAApH,GAAAvT,SAAAoY,aACApY,UAAAoY,eAAA,CACA,IAAAlI,GAAAlQ,SAAAob,aAAAC,EAEA,OADArb,UAAAoY,cAAA7E,EACArD,EAEA,IAAAsL,UACAlZ,KAAA,WACAwY,QAAA,QACAW,UAAA,gCACA9F,YAAA,yBACA+F,cAAA,+NACAC,YACAjV,KAAA,MACA0N,IAAA,sCAEAwH,MACAC,KAAA,yBACAzH,IAAA,yCAEA0H,KAAU9b,SAAA,kBACV+b,KAAA,oBACAC,QAAA,MACAC,iBACAC,MAAA,UACAC,KAAA,UACApX,OAAA,UACAqX,SAAA,WAEAC,cACAC,aAAA,UACAC,qBAAA,WAEAC,SAAcC,KAAA,0CAEdzc,UAAA+a,YAAA,WAGA,MAAAS,UAEAxb,SAAA0c,cAAA,WAGA,MAAAlB,SAAAlZ,KAAA,oBAAAkZ,QAAAV,SAEA9a,SAAAgK,IAAA,UACAhK,SAAA2a,WAAA,WAGA,SAEA,IAAAgC,UAAA,SAAAhF,GAGA,UAAAiF,UAAAjF,KAwBA,OAtBA3X,UAAAiZ,QAAA,SAAA7E,GAGA,MAAAyI,GAAArP,IAAA4G,GAAA0I,KAAA,WAGA,MAAAH,UAAAzc,SAAAgD,UAAA,QAGA,WACA,wBAAA2Z,GACAA,EAAA,WAGA,MAAAra,KAAAqa,EAAAE,UAAAF,EAAA,4CAAAra,IAAA,WAGA,MAAA3B,MAAAmc,OACShd,SAAAiZ,WART,QAWGxZ,KAAAoB,MACHb,UACCP,KAAAoB,OJoFKoc,IACA,SAAS3d,EAAQD,EAASH,GKprPhC,YACA,IAAAge,GAAAhe,EAAA,MAEAI,GAAAD,QAAA,SAAA8B,GACA,sBAAAA,KAAAgP,QAAA+M,EAAA,IAAA/b,IL4rPMgc,IACA,SAAS7d,EAAQD,GMjsPvB,YACAC,GAAAD,QAAA,WACA","file":"worker.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar commands = {  },\n\t    $_symbol1_$ = __webpack_require__(558),\n\t    sibilant = $_symbol1_$.sibilant,\n\t    $_symbol1_$ = undefined;\n\tcommands.sibilize = (function commands$sibilize$(sibilantCode) {\n\t  /* commands.sibilize /Users/jbr/code/sibilant-website/worker.sibilant:4:0 */\n\t\n\t  return sibilant.sibilize(sibilantCode);\n\t});\n\tvar onMessage = (function onMessage$(e) {\n\t  /* on-message /Users/jbr/code/sibilant-website/worker.sibilant:7:0 */\n\t\n\t  var identifier = e.data[0],\n\t      command = e.data[1],\n\t      data = e.data[2],\n\t      commandFn = commands[command],\n\t      returnValue = {  };\n\t  (function() {\n\t    try {\n\t      return returnValue.result = commandFn.apply(this, data);\n\t    } catch (e) {\n\t      return returnValue.error = e.message;\n\t    }\n\t  }).call(this);\n\t  return postMessage([ identifier, returnValue ]);\n\t});\n\tonmessage = onMessage;\n\n/***/ },\n\n/***/ 558:\n/***/ function(module, exports, __webpack_require__) {\n\n\t//# sourceMappingURL=../maps/browser.map\n\t;\n\tthis.sibilant = (function() {\n\t  /* /Users/jbr/code/sibilant/src/browser.sibilant:4:5 */\n\t\n\t  var sibilant = {  },\n\t      exports = sibilant;\n\t  var error = (function error$(str) {\n\t    /* error /Users/jbr/code/sibilant/src/browser.sibilant:6:6 */\n\t  \n\t    throw str\n\t  });\n\t  var inspect = (function inspect$(item) {\n\t    /* inspect /Users/jbr/code/sibilant/src/browser.sibilant:7:6 */\n\t  \n\t    return (function() {\n\t      if (item.toSource) {\n\t        return item.toSource();\n\t      } else {\n\t        return item.toString();\n\t      }\n\t    }).call(this);\n\t  });\n\t  var bulkMap = (function bulkMap$(arr, fn) {\n\t    /* bulk-map /Users/jbr/code/sibilant/include/functional.sibilant:1:0 */\n\t  \n\t    var index = 0,\n\t        groupSize = fn.length,\n\t        retArr = [];\n\t    (function() {\n\t      var $_symbol1_$ = undefined;\n\t      while (index < arr.length) {\n\t        $_symbol1_$ = (function() {\n\t          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n\t          return index += groupSize;\n\t        }).call(this);\n\t      };\n\t      return $_symbol1_$;\n\t    }).call(this);\n\t    return retArr;\n\t  });\n\t  var inject = (function inject$(start, items, fn) {\n\t    /* inject /Users/jbr/code/sibilant/include/functional.sibilant:13:0 */\n\t  \n\t    var value = start;\n\t    (function() {\n\t      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n\t        return items.forEach((function(item, index) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:16:4 */\n\t        \n\t          return value = fn(value, item, index);\n\t        }));\n\t      }\n\t    }).call(this);\n\t    return value;\n\t  });\n\t  var map = (function map$(items, fn) {\n\t    /* map /Users/jbr/code/sibilant/include/functional.sibilant:20:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:22:10 */\n\t    \n\t      collector.push(fn(item, index));\n\t      return collector;\n\t    }));\n\t  });\n\t  var select = (function select$(items, fn) {\n\t    /* select /Users/jbr/code/sibilant/include/functional.sibilant:26:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:28:10 */\n\t    \n\t      (function() {\n\t        if (fn(item, index)) {\n\t          return collector.push(item);\n\t        }\n\t      }).call(this);\n\t      return collector;\n\t    }));\n\t  });\n\t  var detect = (function detect$(items, fn) {\n\t    /* detect /Users/jbr/code/sibilant/include/functional.sibilant:33:0 */\n\t  \n\t    var returnItem = undefined,\n\t        index = 0,\n\t        items = (items || []);\n\t    (function() {\n\t      var $_symbol2_$ = undefined;\n\t      while (!((items.length === index || returnItem))) {\n\t        $_symbol2_$ = (function() {\n\t          (function() {\n\t            if (fn(items[index], index)) {\n\t              return returnItem = items[index];\n\t            }\n\t          }).call(this);\n\t          return ((index)++);\n\t        }).call(this);\n\t      };\n\t      return $_symbol2_$;\n\t    }).call(this);\n\t    return returnItem;\n\t  });\n\t  var all__QUERY = (function all__QUERY$(items, fn) {\n\t    /* all? /Users/jbr/code/sibilant/include/functional.sibilant:45:0 */\n\t  \n\t    return typeof detect(items, (function(item, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:46:31 */\n\t    \n\t      return !(fn(item, index));\n\t    })) === \"undefined\";\n\t  });\n\t  var none__QUERY = (function none__QUERY$(items, fn) {\n\t    /* none? /Users/jbr/code/sibilant/include/functional.sibilant:48:0 */\n\t  \n\t    return typeof detect(items, fn) === \"undefined\";\n\t  });\n\t  var any__QUERY = (function any__QUERY$(items, fn) {\n\t    /* any? /Users/jbr/code/sibilant/include/functional.sibilant:51:0 */\n\t  \n\t    return typeof detect(items, fn) !== \"undefined\";\n\t  });\n\t  var reject = (function reject$(items, fn) {\n\t    /* reject /Users/jbr/code/sibilant/include/functional.sibilant:54:0 */\n\t  \n\t    var args = [ items, fn ];\n\t    return select(items, (function() {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:56:16 */\n\t    \n\t      return !(fn.apply(this, arguments));\n\t    }));\n\t  });\n\t  var compact = (function compact$(arr) {\n\t    /* compact /Users/jbr/code/sibilant/include/functional.sibilant:58:0 */\n\t  \n\t    return select(arr, (function(item) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:59:17 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var interleave = (function interleave$(glue, arr) {\n\t    /* interleave /Users/jbr/code/sibilant/include/functional.sibilant:65:0 */\n\t  \n\t    (function() {\n\t      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n\t        var temp = glue;\n\t        glue = arr;\n\t        return arr = temp;\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n\t        return inject([], arr, (function(collector, item, index) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:71:13 */\n\t        \n\t          return collector.concat([ item, glue[index] ]);\n\t        }));\n\t      } else {\n\t        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:75:13 */\n\t        \n\t          return collector.concat([ glue, item ]);\n\t        }));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatten = (function flatten$(items) {\n\t    /* flatten /Users/jbr/code/sibilant/include/functional.sibilant:78:0 */\n\t  \n\t    var items = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inject([], items, (function(collector, item) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:80:10 */\n\t    \n\t      return collector.concat((function() {\n\t        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t          return flatten.apply(this, item);\n\t        } else {\n\t          return item;\n\t        }\n\t      }).call(this));\n\t    }));\n\t  });\n\t  var recurseMap = (function recurseMap$(item, fn) {\n\t    /* recurse-map /Users/jbr/code/sibilant/include/functional.sibilant:87:0 */\n\t  \n\t    return (function() {\n\t      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        return map(item, (function(subitem) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:88:32 */\n\t        \n\t          return recurseMap(subitem, fn);\n\t        }));\n\t      } else {\n\t        return fn(item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var pluck = (function pluck$(items, attribute) {\n\t    /* pluck /Users/jbr/code/sibilant/include/functional.sibilant:91:0 */\n\t  \n\t    return map(items, (function(item) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:92:16 */\n\t    \n\t      return item[attribute];\n\t    }));\n\t  });\n\t  var mergeInto = (function mergeInto$(into, from) {\n\t    /* merge-into /Users/jbr/code/sibilant/include/functional.sibilant:94:0 */\n\t  \n\t    Object.keys(from).forEach((function(key) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:95:5 */\n\t    \n\t      return into[key] = from[key];\n\t    }));\n\t    return into;\n\t  });\n\t  var clone = (function clone$(object) {\n\t    /* clone /Users/jbr/code/sibilant/include/functional.sibilant:98:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:100:13 */\n\t    \n\t      collector[key] = object[key];\n\t      return collector;\n\t    }));\n\t  });\n\t  var mapValues = (function mapValues$(object, fn) {\n\t    /* map-values /Users/jbr/code/sibilant/include/functional.sibilant:104:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:106:13 */\n\t    \n\t      collector[key] = fn(object[key], key);\n\t      return collector;\n\t    }));\n\t  });\n\t  var mergeWith = (function mergeWith$(into, from) {\n\t    /* merge-with /Users/jbr/code/sibilant/include/functional.sibilant:110:0 */\n\t  \n\t    return mergeInto(clone(into), from);\n\t  });\n\t  var log__BANG = (function log__BANG$(args) {\n\t    /* log! /Users/jbr/code/sibilant/src/colors.sibilant:1:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inspect__BANG.apply(this, args).forEach((function() {\n\t      /* /Users/jbr/code/sibilant/src/colors.sibilant:2:35 */\n\t    \n\t      return console.log(arguments[0]);\n\t    }));\n\t  });\n\t  var inspect__BANG = (function inspect__BANG$(args) {\n\t    /* inspect! /Users/jbr/code/sibilant/src/colors.sibilant:4:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return args.map((function() {\n\t      /* /Users/jbr/code/sibilant/src/colors.sibilant:5:15 */\n\t    \n\t      return util.inspect(arguments[0], {\n\t        colors: false,\n\t        depth: 3\n\t      });\n\t    }));\n\t  });\n\t  var color = (function color$(code, items, depth) {\n\t    /* color /Users/jbr/code/sibilant/src/colors.sibilant:7:0 */\n\t  \n\t    return (code + items.join(\"\") + \"\\033[0m\");\n\t  });\n\t  var black = (function black$(args) {\n\t    /* black /Users/jbr/code/sibilant/src/colors.sibilant:10:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;30m\", args);\n\t  });\n\t  var red = (function red$(args) {\n\t    /* red /Users/jbr/code/sibilant/src/colors.sibilant:11:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;31m\", args);\n\t  });\n\t  var green = (function green$(args) {\n\t    /* green /Users/jbr/code/sibilant/src/colors.sibilant:12:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;32m\", args);\n\t  });\n\t  var brown = (function brown$(args) {\n\t    /* brown /Users/jbr/code/sibilant/src/colors.sibilant:13:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;33m\", args);\n\t  });\n\t  var blue = (function blue$(args) {\n\t    /* blue /Users/jbr/code/sibilant/src/colors.sibilant:14:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;34m\", args);\n\t  });\n\t  var purple = (function purple$(args) {\n\t    /* purple /Users/jbr/code/sibilant/src/colors.sibilant:15:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;35m\", args);\n\t  });\n\t  var cyan = (function cyan$(args) {\n\t    /* cyan /Users/jbr/code/sibilant/src/colors.sibilant:16:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;36m\", args);\n\t  });\n\t  var gray = (function gray$(args) {\n\t    /* gray /Users/jbr/code/sibilant/src/colors.sibilant:17:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[0;37m\", args);\n\t  });\n\t  var boldGray = (function boldGray$(args) {\n\t    /* bold-gray /Users/jbr/code/sibilant/src/colors.sibilant:18:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;30m\", args);\n\t  });\n\t  var boldRed = (function boldRed$(args) {\n\t    /* bold-red /Users/jbr/code/sibilant/src/colors.sibilant:19:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;31m\", args);\n\t  });\n\t  var boldGreen = (function boldGreen$(args) {\n\t    /* bold-green /Users/jbr/code/sibilant/src/colors.sibilant:20:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;32m\", args);\n\t  });\n\t  var yellow = (function yellow$(args) {\n\t    /* yellow /Users/jbr/code/sibilant/src/colors.sibilant:21:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;33m\", args);\n\t  });\n\t  var boldBlue = (function boldBlue$(args) {\n\t    /* bold-blue /Users/jbr/code/sibilant/src/colors.sibilant:22:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;34m\", args);\n\t  });\n\t  var boldPurple = (function boldPurple$(args) {\n\t    /* bold-purple /Users/jbr/code/sibilant/src/colors.sibilant:23:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;35m\", args);\n\t  });\n\t  var boldCyan = (function boldCyan$(args) {\n\t    /* bold-cyan /Users/jbr/code/sibilant/src/colors.sibilant:24:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;36m\", args);\n\t  });\n\t  var white = (function white$(args) {\n\t    /* white /Users/jbr/code/sibilant/src/colors.sibilant:25:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return color(\"\\033[1;37m\", args);\n\t  });\n\t  sibilant.prettyPrint = (function sibilant$prettyPrint$(node, color, entry) {\n\t    /* sibilant.pretty-print /Users/jbr/code/sibilant/src/pretty-printer.sibilant:3:0 */\n\t  \n\t    entry = (typeof entry !== \"undefined\") ? entry : true;\n\t    color = (typeof color !== \"undefined\") ? color : true;\n\t    return realNewlines((function() {\n\t      if (node__QUERY(node)) {\n\t        var prettyPrinter = (sibilant.prettyPrint[node.type] || sibilant.prettyPrint.default);\n\t        return prettyPrinter(node, color, entry);\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return ((function() {\n\t          if (color) {\n\t            return black(\"[\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this) + map(node, (function() {\n\t          /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:14:28 */\n\t        \n\t          return prettify(arguments[0], color, false);\n\t        })).join((function() {\n\t          if (color) {\n\t            return black(\",\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this)) + (function() {\n\t          if (color) {\n\t            return black(\"]\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this));\n\t      } else if (color) {\n\t        return red(inspect(node));\n\t      } else {\n\t        return realNewlines(inspect(node));\n\t      }\n\t    }).call(this));\n\t  });\n\t  var prettify = sibilant.prettyPrint;\n\t  sibilant.prettyPrint.default = (function sibilant$prettyPrint$default$(node, color, entry) {\n\t    /* sibilant.pretty-print.default /Users/jbr/code/sibilant/src/pretty-printer.sibilant:23:0 */\n\t  \n\t    var mapPretty = (function mapPretty$(attr) {\n\t      /* map-pretty /Users/jbr/code/sibilant/src/pretty-printer.sibilant:24:5 */\n\t    \n\t      var arr = node[attr];\n\t      return (function() {\n\t        if ((arr && arr.length)) {\n\t          return map(arr, (function() {\n\t            /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:27:27 */\n\t          \n\t            return prettify(arguments[0], color, false);\n\t          })).join(\"\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this);\n\t    });\n\t    return realNewlines(sibilant.prettyPrint.colorize(node, color, ((function() {\n\t      if (entry) {\n\t        return \"\";\n\t      } else {\n\t        return mapPretty(\"precedingIgnored\");\n\t      }\n\t    }).call(this) + mapPretty(\"modifiers\") + node.token + mapPretty(\"contents\") + mapPretty(\"closingIgnored\") + ((node.closed && acceptablePairs[node.token]) || \"\"))));\n\t  });\n\t  sibilant.prettyPrint.root = (function sibilant$prettyPrint$root$(node, color, entry) {\n\t    /* sibilant.pretty-print.root /Users/jbr/code/sibilant/src/pretty-printer.sibilant:39:0 */\n\t  \n\t    return map(node.contents, (function() {\n\t      /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:41:16 */\n\t    \n\t      return prettify(arguments[0], color, false);\n\t    })).join(\"\\n\");\n\t  });\n\t  sibilant.prettyPrint.output = (function sibilant$prettyPrint$output$(node, color) {\n\t    /* sibilant.pretty-print.output /Users/jbr/code/sibilant/src/pretty-printer.sibilant:44:0 */\n\t  \n\t    return ((function() {\n\t      if (color) {\n\t        return black(\"{\");\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this) + (function() {\n\t      if (((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\")) {\n\t        return map(node.contents, (function() {\n\t          /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:48:28 */\n\t        \n\t          return sibilant.prettyPrint.colorize(node, color, prettify(arguments[0], color, false));\n\t        })).join((function() {\n\t          if (color) {\n\t            return black(\",\");\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this));\n\t      } else {\n\t        return sibilant.prettyPrint.colorize(node, color, node.contents);\n\t      }\n\t    }).call(this) + (function() {\n\t      if (color) {\n\t        return black(\"}\");\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this));\n\t  });\n\t  var realNewlines = (function realNewlines$(node) {\n\t    /* real-newlines /Users/jbr/code/sibilant/src/pretty-printer.sibilant:54:0 */\n\t  \n\t    return node.split(\"\\\\n\").join(\"\\n\");\n\t  });\n\t  sibilant.prettyPrint.colorize = (function sibilant$prettyPrint$colorize$(node, color, string) {\n\t    /* sibilant.pretty-print.colorize /Users/jbr/code/sibilant/src/pretty-printer.sibilant:59:0 */\n\t  \n\t    return (function() {\n\t      if (!(color)) {\n\t        return string;\n\t      } else if (node.hint === \"macro\") {\n\t        return yellow(string);\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return purple(string);\n\t      } else {\n\t        return green(string);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var outputFormatter = (function outputFormatter$(node) {\n\t    /* output-formatter /Users/jbr/code/sibilant/src/output-formatter.sibilant:1:0 */\n\t  \n\t    return (function() {\n\t      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, outputFormatter).join(\"\");\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return outputFormatter(node.contents);\n\t      } else if ((typeof node === \"string\" || typeof node === \"number\")) {\n\t        return node;\n\t      } else if (!((typeof node !== \"undefined\" && node !== null))) {\n\t        return \"\";\n\t      } else if (node__QUERY(node)) {\n\t        console.log(\"WE SHOULD NOT BE HERE\");\n\t        console.log(\"node\");\n\t        console.log(prettify(node));\n\t        return outputFormatter(transpile(node));\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.outputFormatter = outputFormatter;\n\t  var bulkMap = (function bulkMap$(arr, fn) {\n\t    /* bulk-map /Users/jbr/code/sibilant/include/functional.sibilant:1:0 */\n\t  \n\t    var index = 0,\n\t        groupSize = fn.length,\n\t        retArr = [];\n\t    (function() {\n\t      var $_symbol3_$ = undefined;\n\t      while (index < arr.length) {\n\t        $_symbol3_$ = (function() {\n\t          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n\t          return index += groupSize;\n\t        }).call(this);\n\t      };\n\t      return $_symbol3_$;\n\t    }).call(this);\n\t    return retArr;\n\t  });\n\t  var inject = (function inject$(start, items, fn) {\n\t    /* inject /Users/jbr/code/sibilant/include/functional.sibilant:13:0 */\n\t  \n\t    var value = start;\n\t    (function() {\n\t      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n\t        return items.forEach((function(item, index) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:16:4 */\n\t        \n\t          return value = fn(value, item, index);\n\t        }));\n\t      }\n\t    }).call(this);\n\t    return value;\n\t  });\n\t  var map = (function map$(items, fn) {\n\t    /* map /Users/jbr/code/sibilant/include/functional.sibilant:20:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:22:10 */\n\t    \n\t      collector.push(fn(item, index));\n\t      return collector;\n\t    }));\n\t  });\n\t  var select = (function select$(items, fn) {\n\t    /* select /Users/jbr/code/sibilant/include/functional.sibilant:26:0 */\n\t  \n\t    return inject([], items, (function(collector, item, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:28:10 */\n\t    \n\t      (function() {\n\t        if (fn(item, index)) {\n\t          return collector.push(item);\n\t        }\n\t      }).call(this);\n\t      return collector;\n\t    }));\n\t  });\n\t  var detect = (function detect$(items, fn) {\n\t    /* detect /Users/jbr/code/sibilant/include/functional.sibilant:33:0 */\n\t  \n\t    var returnItem = undefined,\n\t        index = 0,\n\t        items = (items || []);\n\t    (function() {\n\t      var $_symbol4_$ = undefined;\n\t      while (!((items.length === index || returnItem))) {\n\t        $_symbol4_$ = (function() {\n\t          (function() {\n\t            if (fn(items[index], index)) {\n\t              return returnItem = items[index];\n\t            }\n\t          }).call(this);\n\t          return ((index)++);\n\t        }).call(this);\n\t      };\n\t      return $_symbol4_$;\n\t    }).call(this);\n\t    return returnItem;\n\t  });\n\t  var all__QUERY = (function all__QUERY$(items, fn) {\n\t    /* all? /Users/jbr/code/sibilant/include/functional.sibilant:45:0 */\n\t  \n\t    return typeof detect(items, (function(item, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:46:31 */\n\t    \n\t      return !(fn(item, index));\n\t    })) === \"undefined\";\n\t  });\n\t  var none__QUERY = (function none__QUERY$(items, fn) {\n\t    /* none? /Users/jbr/code/sibilant/include/functional.sibilant:48:0 */\n\t  \n\t    return typeof detect(items, fn) === \"undefined\";\n\t  });\n\t  var any__QUERY = (function any__QUERY$(items, fn) {\n\t    /* any? /Users/jbr/code/sibilant/include/functional.sibilant:51:0 */\n\t  \n\t    return typeof detect(items, fn) !== \"undefined\";\n\t  });\n\t  var reject = (function reject$(items, fn) {\n\t    /* reject /Users/jbr/code/sibilant/include/functional.sibilant:54:0 */\n\t  \n\t    var args = [ items, fn ];\n\t    return select(items, (function() {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:56:16 */\n\t    \n\t      return !(fn.apply(this, arguments));\n\t    }));\n\t  });\n\t  var compact = (function compact$(arr) {\n\t    /* compact /Users/jbr/code/sibilant/include/functional.sibilant:58:0 */\n\t  \n\t    return select(arr, (function(item) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:59:17 */\n\t    \n\t      return (null !== item && false !== item && typeof item !== \"undefined\");\n\t    }));\n\t  });\n\t  var interleave = (function interleave$(glue, arr) {\n\t    /* interleave /Users/jbr/code/sibilant/include/functional.sibilant:65:0 */\n\t  \n\t    (function() {\n\t      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n\t        var temp = glue;\n\t        glue = arr;\n\t        return arr = temp;\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n\t        return inject([], arr, (function(collector, item, index) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:71:13 */\n\t        \n\t          return collector.concat([ item, glue[index] ]);\n\t        }));\n\t      } else {\n\t        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:75:13 */\n\t        \n\t          return collector.concat([ glue, item ]);\n\t        }));\n\t      }\n\t    }).call(this);\n\t  });\n\t  var flatten = (function flatten$(items) {\n\t    /* flatten /Users/jbr/code/sibilant/include/functional.sibilant:78:0 */\n\t  \n\t    var items = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inject([], items, (function(collector, item) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:80:10 */\n\t    \n\t      return collector.concat((function() {\n\t        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t          return flatten.apply(this, item);\n\t        } else {\n\t          return item;\n\t        }\n\t      }).call(this));\n\t    }));\n\t  });\n\t  var recurseMap = (function recurseMap$(item, fn) {\n\t    /* recurse-map /Users/jbr/code/sibilant/include/functional.sibilant:87:0 */\n\t  \n\t    return (function() {\n\t      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        return map(item, (function(subitem) {\n\t          /* /Users/jbr/code/sibilant/include/functional.sibilant:88:32 */\n\t        \n\t          return recurseMap(subitem, fn);\n\t        }));\n\t      } else {\n\t        return fn(item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var pluck = (function pluck$(items, attribute) {\n\t    /* pluck /Users/jbr/code/sibilant/include/functional.sibilant:91:0 */\n\t  \n\t    return map(items, (function(item) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:92:16 */\n\t    \n\t      return item[attribute];\n\t    }));\n\t  });\n\t  var mergeInto = (function mergeInto$(into, from) {\n\t    /* merge-into /Users/jbr/code/sibilant/include/functional.sibilant:94:0 */\n\t  \n\t    Object.keys(from).forEach((function(key) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:95:5 */\n\t    \n\t      return into[key] = from[key];\n\t    }));\n\t    return into;\n\t  });\n\t  var clone = (function clone$(object) {\n\t    /* clone /Users/jbr/code/sibilant/include/functional.sibilant:98:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:100:13 */\n\t    \n\t      collector[key] = object[key];\n\t      return collector;\n\t    }));\n\t  });\n\t  var mapValues = (function mapValues$(object, fn) {\n\t    /* map-values /Users/jbr/code/sibilant/include/functional.sibilant:104:0 */\n\t  \n\t    return inject({  }, Object.keys(object), (function(collector, key, index) {\n\t      /* /Users/jbr/code/sibilant/include/functional.sibilant:106:13 */\n\t    \n\t      collector[key] = fn(object[key], key);\n\t      return collector;\n\t    }));\n\t  });\n\t  var mergeWith = (function mergeWith$(into, from) {\n\t    /* merge-with /Users/jbr/code/sibilant/include/functional.sibilant:110:0 */\n\t  \n\t    return mergeInto(clone(into), from);\n\t  });\n\t  var parser = {  };\n\t  sibilant.parser = parser;\n\t  parser.tokens = {\n\t    \"regex\": \"(\\\\/(\\\\\\\\\\\\\\/|[^\\\\/\\\\n])+\\\\/[glim]*)\",\n\t    \"comment\": \"(;.*)\",\n\t    \"string\": \"(\\\"(([^\\\"]|(\\\\\\\\\\\"))*[^\\\\\\\\])?\\\")\",\n\t    \"number\": \"(-?[0-9][0-9.,]*)\",\n\t    \"literal\": \"(-?[*.$a-zA-Z_][/*.a-zA-Z0-9-_]*(\\\\?|!)?)\",\n\t    \"special\": \"([&'])\",\n\t    \"at\": \"@\",\n\t    \"tick\": \"[`']\",\n\t    \"hat\": \"(\\\\^)\",\n\t    \"dots\": \"(\\\\.+)\",\n\t    \"argPlaceholder\": \"(#[0-9]+)\",\n\t    \"otherChar\": \"([\\\\|#><=!\\\\+\\\\/\\\\*-]+)\",\n\t    \"openExpression\": \"(\\\\(|\\\\{|\\\\[)\",\n\t    \"closeExpression\": \"(\\\\)|\\\\}|\\\\])\",\n\t    \"newline\": \"\\\\n\",\n\t    \"whitespace\": \"\\\\s+\",\n\t    \"ignored\": \".\"\n\t  };\n\t  parser.tokenPrecedence = [ \"regex\", \"comment\", \"string\", \"number\", \"dots\", \"tick\", \"hat\", \"at\", \"special\", \"literal\", \"argPlaceholder\", \"otherChar\", \"openExpression\", \"closeExpression\", \"newline\", \"whitespace\", \"ignored\" ];\n\t  parser.orderedRegexes = parser.tokenPrecedence.map((function(x) {\n\t    /* /Users/jbr/code/sibilant/src/parser.sibilant:41:23 */\n\t  \n\t    return mergeInto((new RegExp((\"^\" + parser.tokens[x]), undefined)), { name: x });\n\t  }));\n\t  var orderedRegexes = parser.orderedRegexes;\n\t  parser.parse = (function parser$parse$(string, context) {\n\t    /* parser.parse /Users/jbr/code/sibilant/src/parser.sibilant:46:0 */\n\t  \n\t    context = (typeof context !== \"undefined\") ? context : {\n\t      position: 0,\n\t      stack: [],\n\t      line: 1,\n\t      lastNewline: 0,\n\t      col: 0\n\t    };\n\t    var match = true,\n\t        regexName = null,\n\t        remainingInput = string;\n\t    (function() {\n\t      var $_symbol5_$ = undefined;\n\t      while (match) {\n\t        $_symbol5_$ = (function() {\n\t          detect(orderedRegexes, (function(r) {\n\t            /* /Users/jbr/code/sibilant/src/parser.sibilant:57:20 */\n\t          \n\t            regexName = r.name;\n\t            return match = r.exec(remainingInput);\n\t          }));\n\t          return (function() {\n\t            if ((typeof match !== \"undefined\" && match !== null)) {\n\t              var matchString = match[0],\n\t                  length = matchString.length;\n\t              context.stack.push({\n\t                dir: sibilant.dir,\n\t                file: sibilant.file,\n\t                token: matchString,\n\t                type: regexName,\n\t                start: context.position,\n\t                line: context.line,\n\t                col: context.col,\n\t                length: length,\n\t                contents: []\n\t              });\n\t              (function() {\n\t                if (\"newline\" === regexName) {\n\t                  ((context.line)++);\n\t                  context.col = 0;\n\t                  return context.lastNewline = context.position;\n\t                } else if ((\"string\" === regexName && matchString.indexOf(\"\\n\") !== -1)) {\n\t                  var stringNewlineCount = (matchString.split(\"\\n\").length - 1);\n\t                  context.line += stringNewlineCount;\n\t                  return context.col = (length - matchString.lastIndexOf(\"\\n\"));\n\t                } else {\n\t                  return context.col += length;\n\t                }\n\t              }).call(this);\n\t              context.position += length;\n\t              return remainingInput = (function() {\n\t                if (remainingInput.length) {\n\t                  return remainingInput.slice(length);\n\t                } else {\n\t                  return \"\";\n\t                }\n\t              }).call(this);\n\t            }\n\t          }).call(this);\n\t        }).call(this);\n\t      };\n\t      return $_symbol5_$;\n\t    }).call(this);\n\t    return context.stack;\n\t  });\n\t  var parse = parser.parse;\n\t  var restructurers = {  },\n\t      acceptablePairs = {\n\t    \"(\": \")\",\n\t    \"[\": \"]\",\n\t    \"{\": \"}\"\n\t  },\n\t      bracketTypes = {\n\t    \"(\": \"expression\",\n\t    \"[\": \"bracket\",\n\t    \"{\": \"brace\"\n\t  };\n\t  var restructure = (function restructure$(input) {\n\t    /* restructure /Users/jbr/code/sibilant/src/restructurer.sibilant:7:0 */\n\t  \n\t    var output = {\n\t      type: \"root\",\n\t      contents: [],\n\t      file: sibilant.file,\n\t      col: 0,\n\t      line: 1\n\t    },\n\t        context = {\n\t      parseStack: [ output ],\n\t      output: output,\n\t      input: input,\n\t      ignoredTokens: [],\n\t      specials: 0\n\t    };\n\t    inject(context, input, (function(context, token, index) {\n\t      /* /Users/jbr/code/sibilant/src/restructurer.sibilant:20:13 */\n\t    \n\t      var restructurer = (restructurers[token.type] || restructurers.default);\n\t      return restructurer(token, context, index);\n\t    }));\n\t    (function() {\n\t      if (!(1 === context.parseStack.length)) {\n\t        var unclosedNode = context.parseStack[0];\n\t        throw (new Error((\"unclosed node at \" + unclosedNode.file + \":\" + unclosedNode.line + \":\" + unclosedNode.col + \"\\n  \" + prettify(unclosedNode, false).slice(0, 100))))\n\t      }\n\t    }).call(this);\n\t    return output;\n\t  });\n\t  sibilant.restructure = restructure;\n\t  restructurers.openExpression = (function restructurers$openExpression$(token, context) {\n\t    /* restructurers.open-expression /Users/jbr/code/sibilant/src/restructurer.sibilant:35:0 */\n\t  \n\t    var first = context.parseStack[0];\n\t    token.contents = [];\n\t    token.type = bracketTypes[token.token];\n\t    acceptIgnoredTokens(token, context);\n\t    acceptSpecials(token, context);\n\t    first.contents.push(token);\n\t    context.parseStack.unshift(token);\n\t    return context;\n\t  });\n\t  restructurers.closeExpression = (function restructurers$closeExpression$(node, context, index) {\n\t    /* restructurers.close-expression /Users/jbr/code/sibilant/src/restructurer.sibilant:47:0 */\n\t  \n\t    var first = context.parseStack[0];\n\t    (function() {\n\t      if (node__QUERY(first, \"root\")) {\n\t        throw (new Error((\"unexpected \" + node.token + \" on \" + node.file + \":\" + node.line + \":\" + node.col)))\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (acceptablePairs[first.token] !== node.token) {\n\t        throw (new Error((\"trying to close \" + yellow(sibilant.prettyPrint(first)) + \"\\n   on \" + first.file + \":\" + first.line + \":\" + first.col + \"\\n   with \" + sibilant.prettyPrint(node) + \"\\n   on \" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\")))\n\t      }\n\t    }).call(this);\n\t    first.end = node.end;\n\t    first.closed = true;\n\t    first.closingIgnored = context.ignoredTokens;\n\t    context.ignoredTokens = [];\n\t    context.parseStack.shift();\n\t    closeSpecials(first, context);\n\t    (function() {\n\t      if (context.parseStack.length === 0) {\n\t        throw (new Error((\"unbalanced parens:\\n\" + inspect(parseStack))))\n\t      }\n\t    }).call(this);\n\t    return context;\n\t  });\n\t  var openSpecial = (function openSpecial$(node, context) {\n\t    /* open-special /Users/jbr/code/sibilant/src/restructurer.sibilant:72:0 */\n\t  \n\t    ((context.specials)++);\n\t    acceptIgnoredTokens(node, context);\n\t    var first = context.parseStack[0];\n\t    node.contents = [];\n\t    first.contents.push(node);\n\t    context.parseStack.unshift(node);\n\t    return context;\n\t  });\n\t  var acceptSpecials = (function acceptSpecials$(node, context) {\n\t    /* accept-specials /Users/jbr/code/sibilant/src/restructurer.sibilant:85:0 */\n\t  \n\t    node.specials = context.specials;\n\t    context.specials = 0;\n\t    return context;\n\t  });\n\t  var acceptIgnoredTokens = (function acceptIgnoredTokens$(node, context) {\n\t    /* accept-ignored-tokens /Users/jbr/code/sibilant/src/restructurer.sibilant:90:0 */\n\t  \n\t    node.precedingIgnored = context.ignoredTokens;\n\t    context.ignoredTokens = [];\n\t    return context;\n\t  });\n\t  var closeSpecials = (function closeSpecials$(node, context) {\n\t    /* close-specials /Users/jbr/code/sibilant/src/restructurer.sibilant:95:0 */\n\t  \n\t    (function() {\n\t      if (node.specials > 0) {\n\t        ((node.specials)--);\n\t        context.parseStack.shift();\n\t        return closeSpecials(node, context);\n\t      }\n\t    }).call(this);\n\t    return context;\n\t  });\n\t  var accumulateIgnoredToken = (function accumulateIgnoredToken$(token, context, index) {\n\t    /* accumulate-ignored-token /Users/jbr/code/sibilant/src/restructurer.sibilant:103:0 */\n\t  \n\t    context.ignoredTokens.push(token);\n\t    return context;\n\t  });\n\t  [ \"hat\", \"dots\", \"tick\", \"at\" ].forEach((function(special) {\n\t    /* /Users/jbr/code/sibilant/src/restructurer.sibilant:107:0 */\n\t  \n\t    return restructurers[special] = openSpecial;\n\t  }));\n\t  [ \"whitespace\", \"newline\", \"ignored\" ].forEach((function(ignored) {\n\t    /* /Users/jbr/code/sibilant/src/restructurer.sibilant:110:0 */\n\t  \n\t    return restructurers[ignored] = accumulateIgnoredToken;\n\t  }));\n\t  restructurers.default = (function restructurers$default$(token, context, index) {\n\t    /* restructurers.default /Users/jbr/code/sibilant/src/restructurer.sibilant:113:0 */\n\t  \n\t    acceptSpecials(token, context);\n\t    acceptIgnoredTokens(token, context);\n\t    context.parseStack[0].contents.push(token);\n\t    return closeSpecials(token, context);\n\t  });\n\t  var coreNamespace = {  },\n\t      macroNamespaces = { core: coreNamespace };\n\t  sibilant.state = {  };\n\t  sibilant.macros = {\n\t    \"namespaces\": macroNamespaces,\n\t    \"defaultSearchPath\": [ \"core\" ],\n\t    \"searchPath\": [ \"core\" ],\n\t    \"namespace\": coreNamespace\n\t  };\n\t  var namespace = sibilant.macros.namespace,\n\t      macros = sibilant.macros.namespace;\n\t  sibilant.macros.currentNamespace = (function sibilant$macros$currentNamespace$() {\n\t    /* sibilant.macros.current-namespace /Users/jbr/code/sibilant/src/macros.sibilant:14:0 */\n\t  \n\t    return sibilant.macros.namespaces[sibilant.macros.searchPath[0]];\n\t  });\n\t  sibilant.resolveMacro = (function sibilant$resolveMacro$(macroName) {\n\t    /* sibilant.resolve-macro /Users/jbr/code/sibilant/src/macros.sibilant:17:0 */\n\t  \n\t    return (function() {\n\t      if ((macroName.indexOf(\"/\") !== -1 && 1 < macroName.length && !(macroName.indexOf(\"\\n\") !== -1))) {\n\t        var pathComponents = macroName.split(\"/\"),\n\t            macro = (sibilant.macros.namespaces.hasOwnProperty(pathComponents[0]) && sibilant.macros.namespaces[pathComponents[0]][pathComponents.slice(1).join(\"/\")]);\n\t        return (function() {\n\t          if (macro) {\n\t            return macro;\n\t          } else {\n\t            return error((\"called namespaced macro \" + macroName + \" but could not find namespace \" + pathComponents[0] + \". you might need to include the file that defines it first.\"));\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        var namespace = detect(sibilant.macros.searchPath, (function(namespace) {\n\t          /* /Users/jbr/code/sibilant/src/macros.sibilant:29:33 */\n\t        \n\t          return sibilant.macros.namespaces[namespace].hasOwnProperty(macroName);\n\t        }));\n\t        return (function() {\n\t          if (namespace) {\n\t            return sibilant.macros.namespaces[namespace][macroName];\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.withDefaultSearchPath = (function sibilant$withDefaultSearchPath$(fn) {\n\t    /* sibilant.with-default-search-path /Users/jbr/code/sibilant/src/macros.sibilant:34:0 */\n\t  \n\t    var searchPathBefore = sibilant.macros.searchPath;\n\t    sibilant.macros.searchPath = sibilant.macros.defaultSearchPath;\n\t    var returnValue = fn();\n\t    sibilant.macros.searchPath = searchPathBefore;\n\t    return returnValue;\n\t  });\n\t  sibilant.macros.namespaces.core.ternary = (function ternary$(cond, ifTrue, ifFalse) {\n\t    /* ternary /Users/jbr/code/sibilant/include/macros.sibilant:9:0 */\n\t  \n\t    return [ \"(\", transpile(cond), \") ? \", transpile(ifTrue), \" : \", transpile(ifFalse) ];\n\t  });\n\t  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n\t    /* set /Users/jbr/code/sibilant/include/macros.sibilant:19:0 */\n\t  \n\t    var kvPairs = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:21:34 */\n\t    \n\t      return asStatement([ \"(\", transpile(arr), \")\", \"[\", transpile(k), \"] = \", transpile(v) ]);\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n\t    /* var /Users/jbr/code/sibilant/include/macros.sibilant:25:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return asStatement([ \"var \", interleave(\",\\n    \", bulkMap(pairs, (function(name, value) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:30:25 */\n\t    \n\t      return [ transpile(name), \" = \", transpile(value) ];\n\t    }))) ]);\n\t  });\n\t  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n\t    /* get /Users/jbr/code/sibilant/include/macros.sibilant:35:0 */\n\t  \n\t    var keys = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(\", transpile(obj), \")\", map(keys, (function(key) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:36:42 */\n\t    \n\t      return [ \"[\", transpile(key), \"]\" ];\n\t    })) ];\n\t  });\n\t  sibilant.macros.namespaces.core.aliasMacro = (function aliasMacro$(currentMacroName, newMacroName) {\n\t    /* alias-macro /Users/jbr/code/sibilant/include/macros.sibilant:47:0 */\n\t  \n\t    var currentMacroName = outputFormatter(transpile(currentMacroName)),\n\t        newMacroName = outputFormatter(transpile(newMacroName));\n\t    sibilant.macros.namespace[newMacroName] = sibilant.macros.namespace[currentMacroName];\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.send = (function send$(object, method, args) {\n\t    /* send /Users/jbr/code/sibilant/include/macros.sibilant:62:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return [ transpile(object), \".\", transpile(method), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.apply = (function apply$(fn, arglist) {\n\t    /* apply /Users/jbr/code/sibilant/include/macros.sibilant:74:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 2119,\n\t      line: 75,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 2120,\n\t        line: 75,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"apply\",\n\t          type: \"literal\",\n\t          start: 2121,\n\t          line: 75,\n\t          col: 10,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, fn, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"this\",\n\t        type: \"literal\",\n\t        start: 2131,\n\t        line: 75,\n\t        col: 20,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 2130,\n\t          line: 75,\n\t          col: 19,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, arglist ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.cons = (function cons$(first, rest) {\n\t    /* cons /Users/jbr/code/sibilant/include/macros.sibilant:86:0 */\n\t  \n\t    return [ \"[ \", transpile(first), \" ].concat(\", transpile(rest), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.append = (function append$(list, additional) {\n\t    /* append /Users/jbr/code/sibilant/include/macros.sibilant:95:0 */\n\t  \n\t    var additional = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 2690,\n\t      line: 96,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 2691,\n\t        line: 96,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"concat\",\n\t          type: \"literal\",\n\t          start: 2692,\n\t          line: 96,\n\t          col: 10,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, list, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 2705,\n\t        line: 96,\n\t        col: 23,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"list\",\n\t          type: \"literal\",\n\t          start: 2706,\n\t          line: 96,\n\t          col: 24,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(additional),\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 2704,\n\t          line: 96,\n\t          col: 22,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.length = (function length$(arr) {\n\t    /* length /Users/jbr/code/sibilant/include/macros.sibilant:102:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 2871,\n\t      line: 103,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 2872,\n\t        line: 103,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":2881,\"line\":103,\"col\":18,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"length\",\"type\":\"literal\",\"start\":2882,\"line\":103,\"col\":19,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":2880,\"line\":103,\"col\":17,\"length\":1,\"contents\":[]}]} ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.scoped = (function scoped$(body) {\n\t    /* scoped /Users/jbr/code/sibilant/include/macros.sibilant:109:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 3126,\n\t      line: 110,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 3127,\n\t        line: 110,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"call\",\n\t          type: \"literal\",\n\t          start: 3128,\n\t          line: 110,\n\t          col: 10,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 3133,\n\t        line: 110,\n\t        col: 15,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"lambda\",\n\t          type: \"literal\",\n\t          start: 3134,\n\t          line: 110,\n\t          col: 16,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          node: this,\n\t          args: []\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3132,\n\t          line: 110,\n\t          col: 14,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"this\",\n\t        type: \"literal\",\n\t        start: 3172,\n\t        line: 110,\n\t        col: 54,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3171,\n\t          line: 110,\n\t          col: 53,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.first = (function first$(arr) {\n\t    /* first /Users/jbr/code/sibilant/include/macros.sibilant:130:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 3954,\n\t      line: 130,\n\t      col: 20,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 3955,\n\t        line: 130,\n\t        col: 21,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 3964,\n\t        line: 130,\n\t        col: 30,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3963,\n\t          line: 130,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.second = (function second$(arr) {\n\t    /* second /Users/jbr/code/sibilant/include/macros.sibilant:131:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 3989,\n\t      line: 131,\n\t      col: 21,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 3990,\n\t        line: 131,\n\t        col: 22,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        start: 3999,\n\t        line: 131,\n\t        col: 31,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 3998,\n\t          line: 131,\n\t          col: 30,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.third = (function third$(arr) {\n\t    /* third /Users/jbr/code/sibilant/include/macros.sibilant:132:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 4023,\n\t      line: 132,\n\t      col: 20,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 4024,\n\t        line: 132,\n\t        col: 21,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"2\",\n\t        type: \"number\",\n\t        start: 4033,\n\t        line: 132,\n\t        col: 30,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 4032,\n\t          line: 132,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.rest = (function rest$(arr) {\n\t    /* rest /Users/jbr/code/sibilant/include/macros.sibilant:138:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 4170,\n\t      line: 138,\n\t      col: 19,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 4171,\n\t        line: 138,\n\t        col: 20,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"slice\",\n\t          type: \"literal\",\n\t          start: 4172,\n\t          line: 138,\n\t          col: 21,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arr, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        start: 4183,\n\t        line: 138,\n\t        col: 32,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 4182,\n\t          line: 138,\n\t          col: 31,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.last = (function last$(arr) {\n\t    /* last /Users/jbr/code/sibilant/include/macros.sibilant:143:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 4330,\n\t      line: 143,\n\t      col: 19,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"first\",\n\t        type: \"literal\",\n\t        start: 4331,\n\t        line: 143,\n\t        col: 20,\n\t        length: 5,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 4337,\n\t        line: 143,\n\t        col: 26,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 4338,\n\t          line: 143,\n\t          col: 27,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"slice\",\n\t            type: \"literal\",\n\t            start: 4339,\n\t            line: 143,\n\t            col: 28,\n\t            length: 5,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, arr, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          start: 4350,\n\t          line: 143,\n\t          col: 39,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 4349,\n\t            line: 143,\n\t            col: 38,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 4336,\n\t          line: 143,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"=\"] = (function $$(a, b) {\n\t    /* = /Users/jbr/code/sibilant/include/macros.sibilant:146:0 */\n\t  \n\t    return [ transpile(a), \" === \", transpile(b) ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"+\"] = (function $$(args) {\n\t    /* + /Users/jbr/code/sibilant/include/macros.sibilant:153:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"-\"] = (function $$(args) {\n\t    /* - /Users/jbr/code/sibilant/include/macros.sibilant:160:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" - \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"_\"] = (function _$(args) {\n\t    /* * /Users/jbr/code/sibilant/include/macros.sibilant:166:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" * \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"/\"] = (function $$(args) {\n\t    /* / /Users/jbr/code/sibilant/include/macros.sibilant:173:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" / \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.or = (function or$(args) {\n\t    /* or /Users/jbr/code/sibilant/include/macros.sibilant:180:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" || \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.and = (function and$(args) {\n\t    /* and /Users/jbr/code/sibilant/include/macros.sibilant:188:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (1 === args.length) ? transpile(args[0]) : [ \"(\", interleave(\" && \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.mod = (function mod$(args) {\n\t    /* mod /Users/jbr/code/sibilant/include/macros.sibilant:195:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" % \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\">\"] = (function $$(args) {\n\t    /* > /Users/jbr/code/sibilant/include/macros.sibilant:230:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \">\";\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7292,\n\t      line: 232,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7293,\n\t        line: 232,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:233:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"<\"] = (function $$(args) {\n\t    /* < /Users/jbr/code/sibilant/include/macros.sibilant:237:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"<\";\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7504,\n\t      line: 239,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7505,\n\t        line: 239,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:240:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"<=\"] = (function $$(args) {\n\t    /* <= /Users/jbr/code/sibilant/include/macros.sibilant:243:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"<=\";\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7717,\n\t      line: 245,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7718,\n\t        line: 245,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:246:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\">=\"] = (function $$(args) {\n\t    /* >= /Users/jbr/code/sibilant/include/macros.sibilant:249:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \">=\";\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 7930,\n\t      line: 251,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 7931,\n\t        line: 251,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:252:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"!=\"] = (function $$(args) {\n\t    /* != /Users/jbr/code/sibilant/include/macros.sibilant:254:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"!==\";\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 8143,\n\t      line: 256,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 8144,\n\t        line: 256,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:257:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"=\"] = (function $$(args) {\n\t    /* = /Users/jbr/code/sibilant/include/macros.sibilant:260:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var jsComparator = \"===\";\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 8356,\n\t      line: 262,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 8357,\n\t        line: 262,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(args.slice(0, -1), (function(item, index) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:263:22 */\n\t      \n\t        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.incrBy = (function incrBy$(item, increment) {\n\t    /* incr-by /Users/jbr/code/sibilant/include/macros.sibilant:270:0 */\n\t  \n\t    return [ transpile(item), \" += \", transpile(increment) ];\n\t  });\n\t  sibilant.macros.namespaces.core.incr = (function incr$(item) {\n\t    /* incr /Users/jbr/code/sibilant/include/macros.sibilant:279:0 */\n\t  \n\t    return [ \"((\", transpile(item), \")++)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.decr = (function decr$(item) {\n\t    /* decr /Users/jbr/code/sibilant/include/macros.sibilant:286:0 */\n\t  \n\t    return [ \"((\", transpile(item), \")--)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.new = (function new$(constructor, args) {\n\t    /* new /Users/jbr/code/sibilant/include/macros.sibilant:293:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(new \", {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9213,\n\t      line: 294,\n\t      col: 17,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"call\",\n\t        type: \"literal\",\n\t        start: 9214,\n\t        line: 294,\n\t        col: 18,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, constructor ].concat(args),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }, \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.regex = (function regex$(pattern, flags) {\n\t    /* regex /Users/jbr/code/sibilant/include/macros.sibilant:301:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9458,\n\t      line: 302,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"new\",\n\t        type: \"literal\",\n\t        start: 9459,\n\t        line: 302,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"RegExp\",\n\t        type: \"literal\",\n\t        start: 9463,\n\t        line: 302,\n\t        col: 13,\n\t        length: 6,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9462,\n\t          line: 302,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, pattern, (flags || \"undefined\") ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"zero__QUERY\"] = (function zero__QUERY$(item) {\n\t    /* zero? /Users/jbr/code/sibilant/include/macros.sibilant:309:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9624,\n\t      line: 309,\n\t      col: 21,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 9625,\n\t        line: 309,\n\t        col: 22,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, item, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 9633,\n\t        line: 309,\n\t        col: 30,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9632,\n\t          line: 309,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"empty__QUERY\"] = (function empty__QUERY$(arr) {\n\t    /* empty? /Users/jbr/code/sibilant/include/macros.sibilant:315:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9788,\n\t      line: 316,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 9789,\n\t        line: 316,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 9791,\n\t        line: 316,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9790,\n\t          line: 316,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 9793,\n\t        line: 316,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"length\",\n\t          type: \"literal\",\n\t          start: 9794,\n\t          line: 316,\n\t          col: 14,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, arr ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9792,\n\t          line: 316,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"odd__QUERY\"] = (function odd__QUERY$(number) {\n\t    /* odd? /Users/jbr/code/sibilant/include/macros.sibilant:322:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 9940,\n\t      line: 323,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 9941,\n\t        line: 323,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"1\",\n\t        type: \"number\",\n\t        start: 9943,\n\t        line: 323,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9942,\n\t          line: 323,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 9945,\n\t        line: 323,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"mod\",\n\t          type: \"literal\",\n\t          start: 9946,\n\t          line: 323,\n\t          col: 14,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, number, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"2\",\n\t          type: \"number\",\n\t          start: 9958,\n\t          line: 323,\n\t          col: 26,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 9957,\n\t            line: 323,\n\t            col: 25,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 9944,\n\t          line: 323,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"even__QUERY\"] = (function even__QUERY$(number) {\n\t    /* even? /Users/jbr/code/sibilant/include/macros.sibilant:329:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 10111,\n\t      line: 330,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 10112,\n\t        line: 330,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"0\",\n\t        type: \"number\",\n\t        start: 10114,\n\t        line: 330,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 10113,\n\t          line: 330,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 10116,\n\t        line: 330,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"mod\",\n\t          type: \"literal\",\n\t          start: 10117,\n\t          line: 330,\n\t          col: 14,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, number, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"2\",\n\t          type: \"number\",\n\t          start: 10129,\n\t          line: 330,\n\t          col: 26,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 10128,\n\t            line: 330,\n\t            col: 25,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 10115,\n\t          line: 330,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.typeof = (function typeof$(thing) {\n\t    /* typeof /Users/jbr/code/sibilant/include/macros.sibilant:337:0 */\n\t  \n\t    return [ \"typeof \", transpile(thing) ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"string__QUERY\"] = (function string__QUERY$(things) {\n\t    /* string? /Users/jbr/code/sibilant/include/macros.sibilant:343:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 10565,\n\t      line: 344,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 10566,\n\t        line: 344,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:344:29 */\n\t      \n\t        return {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 10597,\n\t          line: 344,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 10598,\n\t            line: 344,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 10600,\n\t            line: 344,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 10601,\n\t              line: 344,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 10599,\n\t              line: 344,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10616,\"line\":344,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"string\",\"type\":\"literal\",\"start\":10617,\"line\":344,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10615,\"line\":344,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"function__QUERY\"] = (function function__QUERY$(things) {\n\t    /* function? /Users/jbr/code/sibilant/include/macros.sibilant:350:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 10809,\n\t      line: 351,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 10810,\n\t        line: 351,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:351:29 */\n\t      \n\t        return {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 10841,\n\t          line: 351,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 10842,\n\t            line: 351,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 10844,\n\t            line: 351,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 10845,\n\t              line: 351,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 10843,\n\t              line: 351,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10860,\"line\":351,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"function\",\"type\":\"literal\",\"start\":10861,\"line\":351,\"col\":60,\"length\":8,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10859,\"line\":351,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"undefined__QUERY\"] = (function undefined__QUERY$(things) {\n\t    /* undefined? /Users/jbr/code/sibilant/include/macros.sibilant:360:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11176,\n\t      line: 361,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 11177,\n\t        line: 361,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:361:29 */\n\t      \n\t        return {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 11208,\n\t          line: 361,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 11209,\n\t            line: 361,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 11211,\n\t            line: 361,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 11212,\n\t              line: 361,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 11210,\n\t              line: 361,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11227,\"line\":361,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11228,\"line\":361,\"col\":60,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11226,\"line\":361,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"defined__QUERY\"] = (function defined__QUERY$(things) {\n\t    /* defined? /Users/jbr/code/sibilant/include/macros.sibilant:369:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11503,\n\t      line: 370,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 11504,\n\t        line: 370,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:370:29 */\n\t      \n\t        return {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 11535,\n\t          line: 370,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"!=\",\n\t            type: \"otherChar\",\n\t            start: 11536,\n\t            line: 370,\n\t            col: 41,\n\t            length: 2,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 11539,\n\t            line: 370,\n\t            col: 44,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 11540,\n\t              line: 370,\n\t              col: 45,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 11538,\n\t              line: 370,\n\t              col: 43,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11555,\"line\":370,\"col\":60,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11556,\"line\":370,\"col\":61,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11554,\"line\":370,\"col\":59,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"number__QUERY\"] = (function number__QUERY$(things) {\n\t    /* number? /Users/jbr/code/sibilant/include/macros.sibilant:377:0 */\n\t  \n\t    var things = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11764,\n\t      line: 378,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 11765,\n\t        line: 378,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(map(things, (function(thing) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:378:29 */\n\t      \n\t        return {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 11796,\n\t          line: 378,\n\t          col: 40,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"=\",\n\t            type: \"otherChar\",\n\t            start: 11797,\n\t            line: 378,\n\t            col: 41,\n\t            length: 1,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 11799,\n\t            line: 378,\n\t            col: 43,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"typeof\",\n\t              type: \"literal\",\n\t              start: 11800,\n\t              line: 378,\n\t              col: 44,\n\t              length: 6,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, thing ],\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 11798,\n\t              line: 378,\n\t              col: 42,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11815,\"line\":378,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"number\",\"type\":\"literal\",\"start\":11816,\"line\":378,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11814,\"line\":378,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.if = (function if$(arg, truebody, falsebody) {\n\t    /* if /Users/jbr/code/sibilant/include/macros.sibilant:382:0 */\n\t  \n\t    return [ \"(function() {\", indent([ \"if (\", transpile(arg), \") {\", indent({\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 11976,\n\t      line: 385,\n\t      col: 33,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 11977,\n\t        line: 385,\n\t        col: 34,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(truebody),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"} else {\", indent({\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 12063,\n\t      line: 387,\n\t      col: 33,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 12064,\n\t        line: 387,\n\t        col: 34,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(falsebody),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.pipe = (function pipe$(calls) {\n\t    /* pipe /Users/jbr/code/sibilant/include/macros.sibilant:415:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return inject(undefined, calls, (function(value, item) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:417:15 */\n\t    \n\t      return (function() {\n\t        if (typeof value === \"undefined\") {\n\t          return item;\n\t        } else {\n\t          return (function() {\n\t            /* /Users/jbr/code/sibilant/include/macros.sibilant:419:21 */\n\t          \n\t            var cloned = (function() {\n\t              if (node__QUERY(item, \"literal\", \"dots\")) {\n\t                return {\n\t                  dir: \"/Users/jbr/code/sibilant/include\",\n\t                  file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t                  token: \"(\",\n\t                  type: \"expression\",\n\t                  start: 13169,\n\t                  line: 421,\n\t                  col: 39,\n\t                  length: 1,\n\t                  contents: [ item ],\n\t                  precedingIgnored: [],\n\t                  specials: 0,\n\t                  end: undefined,\n\t                  closed: true,\n\t                  closingIgnored: []\n\t                };\n\t              } else {\n\t                return clone(item);\n\t              }\n\t            }).call(this);\n\t            var placeholder = detect(cloned.contents, (function(node) {\n\t              /* /Users/jbr/code/sibilant/include/macros.sibilant:425:47 */\n\t            \n\t              return (node__QUERY(node, \"otherChar\") && \"#\" === node.token);\n\t            })),\n\t                placeholderIndex = cloned.contents.indexOf(placeholder),\n\t                placeholderBoundaries = (function() {\n\t              if (placeholder) {\n\t                return [ placeholderIndex, (1 + placeholderIndex) ];\n\t              } else {\n\t                return [ 1, 1 ];\n\t              }\n\t            }).call(this);\n\t            return mergeInto(cloned, { contents: cloned.contents.slice(0, placeholderBoundaries[0]).concat([ value ], cloned.contents.slice(placeholderBoundaries[1])) });\n\t          }).call(this);\n\t        }\n\t      }).call(this);\n\t    }));\n\t  });\n\t  sibilant.macros.namespaces.core[\"|>\"] = sibilant.macros.namespaces.core.pipe;\n\t  sibilant.macros.namespaces.core.comment = (function comment$(contents) {\n\t    /* comment /Users/jbr/code/sibilant/include/macros.sibilant:446:0 */\n\t  \n\t    var contents = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return map(contents, (function(content) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:447:21 */\n\t    \n\t      return [ \"// \", recurseMap(transpile(content), (function(item) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:449:36 */\n\t      \n\t        return (item) ? outputFormatter(transpile(item)).replace((new RegExp(\"\\n\", \"g\")), \"\\n// \") : null;\n\t      })) ];\n\t    }));\n\t  });\n\t  sibilant.macros.namespaces.core[\"array__QUERY\"] = (function array__QUERY$(thing) {\n\t    /* array? /Users/jbr/code/sibilant/include/macros.sibilant:469:0 */\n\t  \n\t    var transpiled = transpile(thing);\n\t    return [ \"((\", transpiled, \") && typeof (\", transpiled, \") === \\\"object\\\" && (\", transpiled, \").constructor.name === \\\"Array\\\")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"list__QUERY\"] = sibilant.macros.namespaces.core[\"array__QUERY\"];\n\t  sibilant.macros.namespaces.core[\"hash__QUERY\"] = (function hash__QUERY$(thing) {\n\t    /* hash? /Users/jbr/code/sibilant/include/macros.sibilant:481:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 15707,\n\t      line: 482,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 15708,\n\t        line: 482,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 15712,\n\t        line: 482,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          start: 15713,\n\t          line: 482,\n\t          col: 14,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15715,\"line\":482,\"col\":16,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"start\":15716,\"line\":482,\"col\":17,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15714,\"line\":482,\"col\":15,\"length\":1,\"contents\":[]}]}, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 15723,\n\t          line: 482,\n\t          col: 24,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"typeof\",\n\t            type: \"literal\",\n\t            start: 15724,\n\t            line: 482,\n\t            col: 25,\n\t            length: 6,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 15722,\n\t            line: 482,\n\t            col: 23,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 15711,\n\t          line: 482,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 15753,\n\t        line: 483,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 15754,\n\t          line: 483,\n\t          col: 14,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"null\",\n\t          type: \"literal\",\n\t          start: 15764,\n\t          line: 483,\n\t          col: 24,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 15763,\n\t            line: 483,\n\t            col: 23,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 15739,\n\t          line: 482,\n\t          col: 40,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"             \",\n\t          type: \"whitespace\",\n\t          start: 15740,\n\t          line: 483,\n\t          col: 0,\n\t          length: 13,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 15783,\n\t        line: 484,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 15784,\n\t          line: 484,\n\t          col: 14,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 15787,\n\t          line: 484,\n\t          col: 17,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            start: 15788,\n\t            line: 484,\n\t            col: 18,\n\t            length: 3,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, thing, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15799,\"line\":484,\"col\":29,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"start\":15800,\"line\":484,\"col\":30,\"length\":11,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15798,\"line\":484,\"col\":28,\"length\":1,\"contents\":[]}]}, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15812,\"line\":484,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"start\":15813,\"line\":484,\"col\":43,\"length\":4,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15811,\"line\":484,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 15786,\n\t            line: 484,\n\t            col: 16,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15819,\"line\":484,\"col\":49,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"start\":15820,\"line\":484,\"col\":50,\"length\":5,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15818,\"line\":484,\"col\":48,\"length\":1,\"contents\":[]}]} ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 15769,\n\t          line: 483,\n\t          col: 29,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"             \",\n\t          type: \"whitespace\",\n\t          start: 15770,\n\t          line: 484,\n\t          col: 0,\n\t          length: 13,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"object__QUERY\"] = sibilant.macros.namespaces.core[\"hash__QUERY\"];\n\t  sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"] = (function _scopedWithoutReturn$(body) {\n\t    /* *scoped-without-return /Users/jbr/code/sibilant/include/macros.sibilant:487:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(function() {\", indent.apply(this, body), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"_scopedWithoutSource\"] = (function _scopedWithoutSource$(body) {\n\t    /* *scoped-without-source /Users/jbr/code/sibilant/include/macros.sibilant:491:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 16007,\n\t      line: 492,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"*scoped-without-return\",\n\t        type: \"literal\",\n\t        start: 16008,\n\t        line: 492,\n\t        col: 9,\n\t        length: 22,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 16031,\n\t        line: 492,\n\t        col: 32,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"do\",\n\t          type: \"literal\",\n\t          start: 16032,\n\t          line: 492,\n\t          col: 33,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 16030,\n\t          line: 492,\n\t          col: 31,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.when = (function when$(condition, body) {\n\t    /* when /Users/jbr/code/sibilant/include/macros.sibilant:501:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"](\"if (\", condition, \") {\", indent({\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 16453,\n\t      line: 504,\n\t      col: 18,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 16454,\n\t        line: 504,\n\t        col: 19,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\");\n\t  });\n\t  sibilant.macros.namespaces.core.not = (function not$(exp) {\n\t    /* not /Users/jbr/code/sibilant/include/macros.sibilant:513:0 */\n\t  \n\t    return [ \"!(\", transpile(exp), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.unless = (function unless$(condition, body) {\n\t    /* unless /Users/jbr/code/sibilant/include/macros.sibilant:526:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(function() {\", indent([ \"if (\", {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 17186,\n\t      line: 528,\n\t      col: 25,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"not\",\n\t        type: \"literal\",\n\t        start: 17187,\n\t        line: 528,\n\t        col: 26,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, condition ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }, \") {\", indent({\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 17242,\n\t      line: 529,\n\t      col: 33,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 17243,\n\t        line: 529,\n\t        col: 34,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.assign = (function assign$(args) {\n\t    /* assign /Users/jbr/code/sibilant/include/macros.sibilant:534:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", bulkMap(args, (function(name, value) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:536:28 */\n\t    \n\t      return asStatement([ transpile(name), \" = \", transpile(value) ]);\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.logPretty = (function logPretty$(label, arg) {\n\t    /* log-pretty /Users/jbr/code/sibilant/include/macros.sibilant:548:0 */\n\t  \n\t    var node = this;\n\t    (function() {\n\t      if (typeof arg === \"undefined\") {\n\t        arg = label;\n\t        return label = [ \"\\\"\", prettify(label, false), \"\\\"\" ];\n\t      }\n\t    }).call(this);\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 18065,\n\t      line: 553,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"console.log\",\n\t        type: \"literal\",\n\t        start: 18066,\n\t        line: 553,\n\t        col: 9,\n\t        length: 11,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 18078,\n\t        line: 553,\n\t        col: 21,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"concat\",\n\t          type: \"literal\",\n\t          start: 18079,\n\t          line: 553,\n\t          col: 22,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, [ \"\\\"\", node.file, \":\", node.line, \"\\\"\" ], {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\\" \\\"\",\n\t          type: \"string\",\n\t          start: 18123,\n\t          line: 553,\n\t          col: 66,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 18122,\n\t            line: 553,\n\t            col: 65,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        }, label, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\\" = \\\"\",\n\t          type: \"string\",\n\t          start: 18134,\n\t          line: 553,\n\t          col: 77,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 18133,\n\t            line: 553,\n\t            col: 76,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 18140,\n\t          line: 553,\n\t          col: 83,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"prettify\",\n\t            type: \"literal\",\n\t            start: 18141,\n\t            line: 553,\n\t            col: 84,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, arg ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 18139,\n\t            line: 553,\n\t            col: 82,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 18077,\n\t          line: 553,\n\t          col: 20,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.prettyLog = sibilant.macros.namespaces.core.logPretty;\n\t  sibilant.macros.namespaces.core.each = (function each$(item, array, body) {\n\t    /* each /Users/jbr/code/sibilant/include/macros.sibilant:566:17 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 18935,\n\t      line: 567,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 18936,\n\t        line: 567,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"for-each\",\n\t          type: \"literal\",\n\t          start: 18937,\n\t          line: 567,\n\t          col: 10,\n\t          length: 8,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, array, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 18972,\n\t        line: 568,\n\t        col: 19,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"lambda\",\n\t          type: \"literal\",\n\t          start: 18973,\n\t          line: 568,\n\t          col: 20,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          node: this,\n\t          args: (function() {\n\t            if (node__QUERY(item, \"expression\")) {\n\t              return item;\n\t            } else {\n\t              return [ item ];\n\t            }\n\t          }).call(this)\n\t        } ].concat(body),\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 18952,\n\t          line: 567,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"                   \",\n\t          type: \"whitespace\",\n\t          start: 18953,\n\t          line: 568,\n\t          col: 0,\n\t          length: 19,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.macroExpand = (function macroExpand$(name) {\n\t    /* macro-expand /Users/jbr/code/sibilant/include/macros.sibilant:581:0 */\n\t  \n\t    var macro = macros[outputFormatter(transpile(name))];\n\t    return (function() {\n\t      if (macro) {\n\t        return macro.toString();\n\t      } else {\n\t        return \"undefined\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.throw = (function throw$(error) {\n\t    /* throw /Users/jbr/code/sibilant/include/macros.sibilant:594:0 */\n\t  \n\t    return [ \"throw \", transpile(error) ];\n\t  });\n\t  sibilant.macros.namespaces.core.asBoolean = (function asBoolean$(expr) {\n\t    /* as-boolean /Users/jbr/code/sibilant/include/macros.sibilant:605:0 */\n\t  \n\t    return [ \"(!!(\", transpile(expr), \"))\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.try = (function try$(tryblock, catchblock) {\n\t    /* try /Users/jbr/code/sibilant/include/macros.sibilant:611:0 */\n\t  \n\t    return [ \"(function() {\", indent([ \"try {\", indent({\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 19905,\n\t      line: 614,\n\t      col: 26,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 19906,\n\t        line: 614,\n\t        col: 27,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, tryblock ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"} catch (e) {\", indent({\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 19980,\n\t      line: 616,\n\t      col: 26,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"do\",\n\t        type: \"literal\",\n\t        start: 19981,\n\t        line: 616,\n\t        col: 27,\n\t        length: 2,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, catchblock ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    }), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.state = (function state$(pairs) {\n\t    /* state /Users/jbr/code/sibilant/include/macros.sibilant:628:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (function() {\n\t      if (1 === pairs.length) {\n\t        return sibilant.state[outputFormatter(transpile(pairs[0]))];\n\t      } else {\n\t        bulkMap(pairs, (function(k, v) {\n\t          /* /Users/jbr/code/sibilant/include/macros.sibilant:631:31 */\n\t        \n\t          return sibilant.state[outputFormatter(transpile(k))] = eval(outputFormatter(transpile(v)));\n\t        }));\n\t        return null;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.symbol = (function symbol$() {\n\t    /* symbol /Users/jbr/code/sibilant/include/macros.sibilant:637:0 */\n\t  \n\t    var symbolCount = (sibilant.state.symbolCount || 0),\n\t        newSymbolCount = (1 + symbolCount);\n\t    sibilant.macros.namespaces.core.state(\"symbolCount\", newSymbolCount);\n\t    return [ (\"$_symbol\" + newSymbolCount + \"_$\") ];\n\t  });\n\t  sibilant.macros.namespaces.core.while = (function while$(condition, body) {\n\t    /* while /Users/jbr/code/sibilant/include/macros.sibilant:652:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    var symbol = sibilant.macros.namespaces.core.symbol();\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 21118,\n\t      line: 654,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"*scoped-without-source\",\n\t        type: \"literal\",\n\t        start: 21119,\n\t        line: 654,\n\t        col: 9,\n\t        length: 22,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 21151,\n\t        line: 655,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"var\",\n\t          type: \"literal\",\n\t          start: 21152,\n\t          line: 655,\n\t          col: 10,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, symbol ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 21141,\n\t          line: 654,\n\t          col: 31,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"         \",\n\t          type: \"whitespace\",\n\t          start: 21142,\n\t          line: 655,\n\t          col: 0,\n\t          length: 9,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        type: \"output\",\n\t        contents: [ \"while (\", transpile(condition), \") {\", indent({\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 21288,\n\t          line: 658,\n\t          col: 35,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"assign\",\n\t            type: \"literal\",\n\t            start: 21289,\n\t            line: 658,\n\t            col: 36,\n\t            length: 6,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, symbol, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 21304,\n\t            line: 658,\n\t            col: 51,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"*scoped-without-source\",\n\t              type: \"literal\",\n\t              start: 21305,\n\t              line: 658,\n\t              col: 52,\n\t              length: 22,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ].concat(body),\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 21303,\n\t              line: 658,\n\t              col: 50,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          } ],\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }), \"}\" ]\n\t      }, symbol ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.until = (function until$(condition, body) {\n\t    /* until /Users/jbr/code/sibilant/include/macros.sibilant:671:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 21697,\n\t      line: 672,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"while\",\n\t        type: \"literal\",\n\t        start: 21698,\n\t        line: 672,\n\t        col: 9,\n\t        length: 5,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 21704,\n\t        line: 672,\n\t        col: 15,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"not\",\n\t          type: \"literal\",\n\t          start: 21705,\n\t          line: 672,\n\t          col: 16,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, condition ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 21703,\n\t          line: 672,\n\t          col: 14,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ].concat(body),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"match__QUERY\"] = (function match__QUERY$(regexp, string) {\n\t    /* match? /Users/jbr/code/sibilant/include/macros.sibilant:681:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 21978,\n\t      line: 682,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 21979,\n\t        line: 682,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"match\",\n\t          type: \"literal\",\n\t          start: 21980,\n\t          line: 682,\n\t          col: 10,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, regexp ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"matchRegex__QUERY\"] = (function matchRegex__QUERY$(string, pattern, flags) {\n\t    /* match-regex? /Users/jbr/code/sibilant/include/macros.sibilant:687:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 22214,\n\t      line: 688,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"match?\",\n\t        type: \"literal\",\n\t        start: 22215,\n\t        line: 688,\n\t        col: 9,\n\t        length: 6,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 22222,\n\t        line: 688,\n\t        col: 16,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          start: 22223,\n\t          line: 688,\n\t          col: 17,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern, flags ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 22221,\n\t          line: 688,\n\t          col: 15,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, string ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.replace = (function replace$(string, pattern, replacement) {\n\t    /* replace /Users/jbr/code/sibilant/include/macros.sibilant:694:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 22476,\n\t      line: 695,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 22477,\n\t        line: 695,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"replace\",\n\t          type: \"literal\",\n\t          start: 22478,\n\t          line: 695,\n\t          col: 10,\n\t          length: 7,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 22508,\n\t        line: 696,\n\t        col: 14,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          start: 22509,\n\t          line: 696,\n\t          col: 15,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 22493,\n\t          line: 695,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"              \",\n\t          type: \"whitespace\",\n\t          start: 22494,\n\t          line: 696,\n\t          col: 0,\n\t          length: 14,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, replacement ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.replaceAll = (function replaceAll$(string, pattern, replacement) {\n\t    /* replace-all /Users/jbr/code/sibilant/include/macros.sibilant:702:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 22773,\n\t      line: 703,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 22774,\n\t        line: 703,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"replace\",\n\t          type: \"literal\",\n\t          start: 22775,\n\t          line: 703,\n\t          col: 10,\n\t          length: 7,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, string, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 22791,\n\t        line: 703,\n\t        col: 26,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"regex\",\n\t          type: \"literal\",\n\t          start: 22792,\n\t          line: 703,\n\t          col: 27,\n\t          length: 5,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, pattern, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":22807,\"line\":703,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"g\",\"type\":\"literal\",\"start\":22808,\"line\":703,\"col\":43,\"length\":1,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":22806,\"line\":703,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 22790,\n\t          line: 703,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, replacement ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.thunk = (function thunk$(body) {\n\t    /* thunk /Users/jbr/code/sibilant/include/macros.sibilant:716:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var node = this,\n\t        lambdaOptions = {\n\t      node: node,\n\t      args: []\n\t    };\n\t    (function() {\n\t      if (!(node__QUERY(body[0]))) {\n\t        mergeInto(lambdaOptions, body[0]);\n\t        return body = body.slice(1);\n\t      }\n\t    }).call(this);\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 23396,\n\t      line: 724,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"lambda\",\n\t        type: \"literal\",\n\t        start: 23397,\n\t        line: 724,\n\t        col: 9,\n\t        length: 6,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, lambdaOptions ].concat(mapNode(body, (function(node) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:726:17 */\n\t      \n\t        return (function() {\n\t          if (node__QUERY(node, \"argPlaceholder\")) {\n\t            return {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 23549,\n\t              line: 728,\n\t              col: 24,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"/Users/jbr/code/sibilant/include\",\n\t                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t                token: \"argument\",\n\t                type: \"literal\",\n\t                start: 23550,\n\t                line: 728,\n\t                col: 25,\n\t                length: 8,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, node.token.replace((new RegExp(\"^#\", undefined)), \"\") ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            };\n\t          } else {\n\t            return node;\n\t          }\n\t        }).call(this);\n\t      }))),\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"#>\"] = sibilant.macros.namespaces.core.thunk;\n\t  sibilant.macros.namespaces.core.pipeThunk = (function pipeThunk$(calls) {\n\t    /* pipe-thunk /Users/jbr/code/sibilant/include/macros.sibilant:739:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 23930,\n\t      line: 739,\n\t      col: 30,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"thunk\",\n\t        type: \"literal\",\n\t        start: 23931,\n\t        line: 739,\n\t        col: 31,\n\t        length: 5,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, { node: this }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 23952,\n\t        line: 739,\n\t        col: 52,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"pipe\",\n\t          type: \"literal\",\n\t          start: 23953,\n\t          line: 739,\n\t          col: 53,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"#0\",\n\t          type: \"argPlaceholder\",\n\t          start: 23958,\n\t          line: 739,\n\t          col: 58,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 23957,\n\t            line: 739,\n\t            col: 57,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ].concat(calls),\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 23951,\n\t          line: 739,\n\t          col: 51,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"#->\"] = sibilant.macros.namespaces.core.pipeThunk;\n\t  sibilant.macros.namespaces.core.keys = (function keys$(obj) {\n\t    /* keys /Users/jbr/code/sibilant/include/macros.sibilant:751:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 24264,\n\t      line: 752,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"Object.keys\",\n\t        type: \"literal\",\n\t        start: 24265,\n\t        line: 752,\n\t        col: 9,\n\t        length: 11,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, obj ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.delete = (function delete$(objects) {\n\t    /* delete /Users/jbr/code/sibilant/include/macros.sibilant:764:0 */\n\t  \n\t    var objects = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", map(objects, (function(obj) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:765:37 */\n\t    \n\t      return asStatement([ \"delete \", transpile(obj) ]);\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.deleteMacro = (function deleteMacro$(macroNames) {\n\t    /* delete-macro /Users/jbr/code/sibilant/include/macros.sibilant:776:0 */\n\t  \n\t    var macroNames = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    macroNames.forEach((function(macroName) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:777:7 */\n\t    \n\t      return delete sibilant.macros.namespace[outputFormatter(transpile(macroName))];\n\t    }));\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.delmacro = sibilant.macros.namespaces.core.deleteMacro;\n\t  sibilant.macros.namespaces.core.renameMacro = (function renameMacro$(currentMacroName, newMacroName) {\n\t    /* rename-macro /Users/jbr/code/sibilant/include/macros.sibilant:789:0 */\n\t  \n\t    sibilant.macros.namespaces.core.aliasMacro(currentMacroName, newMacroName);\n\t    sibilant.macros.namespaces.core.deleteMacro(currentMacroName);\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.arguments = (function arguments$() {\n\t    /* arguments /Users/jbr/code/sibilant/include/macros.sibilant:804:0 */\n\t  \n\t    return [ \"(Array.prototype.slice.apply(arguments))\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.argument = (function argument$(index) {\n\t    /* argument /Users/jbr/code/sibilant/include/macros.sibilant:816:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 25850,\n\t      line: 817,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"get\",\n\t        type: \"literal\",\n\t        start: 25851,\n\t        line: 817,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"arguments\",\n\t        type: \"literal\",\n\t        start: 25855,\n\t        line: 817,\n\t        col: 13,\n\t        length: 9,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 25854,\n\t          line: 817,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ]\n\t      }, index ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.eachKey = (function eachKey$(as, obj, body) {\n\t    /* each-key /Users/jbr/code/sibilant/include/macros.sibilant:825:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 26058,\n\t      line: 826,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        start: 26059,\n\t        line: 826,\n\t        col: 9,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, obj, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 26069,\n\t        line: 826,\n\t        col: 19,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"keys\",\n\t          type: \"literal\",\n\t          start: 26070,\n\t          line: 826,\n\t          col: 20,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 26068,\n\t          line: 826,\n\t          col: 18,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 26090,\n\t        line: 827,\n\t        col: 14,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 26091,\n\t          line: 827,\n\t          col: 15,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"for-each\",\n\t            type: \"literal\",\n\t            start: 26092,\n\t            line: 827,\n\t            col: 16,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 26101,\n\t          line: 827,\n\t          col: 25,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"lambda\",\n\t            type: \"literal\",\n\t            start: 26102,\n\t            line: 827,\n\t            col: 26,\n\t            length: 6,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            args: (function() {\n\t              if (node__QUERY(as, \"expression\")) {\n\t                return as;\n\t              } else {\n\t                return [ as ];\n\t              }\n\t            }).call(this),\n\t            node: this\n\t          } ].concat(body),\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 26100,\n\t            line: 827,\n\t            col: 24,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 26075,\n\t          line: 826,\n\t          col: 25,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"              \",\n\t          type: \"whitespace\",\n\t          start: 26076,\n\t          line: 827,\n\t          col: 0,\n\t          length: 14,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.switch = (function switch$(obj, cases) {\n\t    /* switch /Users/jbr/code/sibilant/include/macros.sibilant:848:0 */\n\t  \n\t    var cases = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ \"(function() {\", indent([ \"switch(\", transpile(obj), \") {\", map(cases, (function(caseDef) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:851:30 */\n\t    \n\t      var caseNameNode = caseDef.contents[0],\n\t          caseLabels = (function() {\n\t        if (node__QUERY(caseNameNode, \"expression\", \"bracket\")) {\n\t          return caseNameNode.contents;\n\t        } else {\n\t          return [ caseNameNode ];\n\t        }\n\t      }).call(this),\n\t          caseString = interleave(\"\\n\", map(caseLabels, (function(c) {\n\t        /* /Users/jbr/code/sibilant/include/macros.sibilant:857:78 */\n\t      \n\t        return (function() {\n\t          if (\"default\" === c.token) {\n\t            return \"default:\";\n\t          } else {\n\t            return [ \"case \", transpile(c), \":\" ];\n\t          }\n\t        }).call(this);\n\t      })));\n\t      return [ \"\\n\", caseString, indent({\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 27747,\n\t        line: 861,\n\t        col: 59,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"do\",\n\t          type: \"literal\",\n\t          start: 27748,\n\t          line: 861,\n\t          col: 60,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ].concat(caseDef.contents.slice(1)),\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }) ];\n\t    })), \"}\" ]), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.if = (function if$(alternatingConditionsAndBranches) {\n\t    /* if /Users/jbr/code/sibilant/include/macros.sibilant:893:0 */\n\t  \n\t    var alternatingConditionsAndBranches = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(function() {\", indent(interleave(\" else \", bulkMap(alternatingConditionsAndBranches, (function(cond, val) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:898:25 */\n\t    \n\t      return (function() {\n\t        if (typeof val !== \"undefined\") {\n\t          return [ \"if (\", transpile(cond), \") {\", indent({\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 29023,\n\t            line: 901,\n\t            col: 44,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"do\",\n\t              type: \"literal\",\n\t              start: 29024,\n\t              line: 901,\n\t              col: 45,\n\t              length: 2,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, val ],\n\t            precedingIgnored: [],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }), \"}\" ];\n\t        } else {\n\t          return [ \"{\", indent({\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 29121,\n\t            line: 903,\n\t            col: 47,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"do\",\n\t              type: \"literal\",\n\t              start: 29122,\n\t              line: 903,\n\t              col: 48,\n\t              length: 2,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, cond ],\n\t            precedingIgnored: [],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }), \"}\" ];\n\t        }\n\t      }).call(this);\n\t    })))), \"}).call(this)\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.chain = (function chain$(object, calls) {\n\t    /* chain /Users/jbr/code/sibilant/include/macros.sibilant:922:0 */\n\t  \n\t    var calls = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    console.log(\"DEPRECATION WARNING: DO NOT USE CHAIN\");\n\t    console.log((\"  \" + this.file + \":\" + this.line + \":\" + this.col));\n\t    return (function() {\n\t      if (0 === calls.length) {\n\t        return transpile(object);\n\t      } else if (1 === calls.length) {\n\t        return {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 29664,\n\t          line: 926,\n\t          col: 31,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"send\",\n\t            type: \"literal\",\n\t            start: 29665,\n\t            line: 926,\n\t            col: 32,\n\t            length: 4,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, object ].concat(calls[0].contents),\n\t          precedingIgnored: [],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        };\n\t      } else {\n\t        var lines = map(calls, (function(call, index) {\n\t          /* /Users/jbr/code/sibilant/include/macros.sibilant:928:34 */\n\t        \n\t          return [ \".\", transpile(call.contents[0]), \"(\", interleave(\", \", map(call.contents.slice(1), transpile)), \")\" ];\n\t        }));\n\t        return [ transpile(object), lines[0], \"\\n  \", recurseIndent(interleave(\"\\n\", lines.slice(1))) ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core[\"instanceOf__QUERY\"] = (function instanceOf__QUERY$(item, type) {\n\t    /* instance-of? /Users/jbr/code/sibilant/include/macros.sibilant:947:0 */\n\t  \n\t    return [ \"(\", transpile(item), \" instanceof \", transpile(type), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"includes__QUERY\"] = (function includes__QUERY$(haystack, needle) {\n\t    /* includes? /Users/jbr/code/sibilant/include/macros.sibilant:958:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 30643,\n\t      line: 959,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        start: 30644,\n\t        line: 959,\n\t        col: 9,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, haystack, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 30659,\n\t        line: 959,\n\t        col: 24,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 30660,\n\t          line: 959,\n\t          col: 25,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"index-of\",\n\t            type: \"literal\",\n\t            start: 30661,\n\t            line: 959,\n\t            col: 26,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, needle ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 30658,\n\t          line: 959,\n\t          col: 23,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 30679,\n\t        line: 959,\n\t        col: 44,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 30680,\n\t          line: 959,\n\t          col: 45,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          start: 30683,\n\t          line: 959,\n\t          col: 48,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 30682,\n\t            line: 959,\n\t            col: 47,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 30678,\n\t          line: 959,\n\t          col: 43,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"excludes__QUERY\"] = (function excludes__QUERY$(haystack, needle) {\n\t    /* excludes? /Users/jbr/code/sibilant/include/macros.sibilant:971:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 30956,\n\t      line: 972,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"pipe\",\n\t        type: \"literal\",\n\t        start: 30957,\n\t        line: 972,\n\t        col: 9,\n\t        length: 4,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, haystack, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 30972,\n\t        line: 972,\n\t        col: 24,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 30973,\n\t          line: 972,\n\t          col: 25,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"index-of\",\n\t            type: \"literal\",\n\t            start: 30974,\n\t            line: 972,\n\t            col: 26,\n\t            length: 8,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, needle ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 30971,\n\t          line: 972,\n\t          col: 23,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 30992,\n\t        line: 972,\n\t        col: 44,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"=\",\n\t          type: \"otherChar\",\n\t          start: 30993,\n\t          line: 972,\n\t          col: 45,\n\t          length: 1,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"-1\",\n\t          type: \"number\",\n\t          start: 30995,\n\t          line: 972,\n\t          col: 47,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 30994,\n\t            line: 972,\n\t            col: 46,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 30991,\n\t          line: 972,\n\t          col: 43,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"exists__QUERY\"] = (function exists__QUERY$(thing) {\n\t    /* exists? /Users/jbr/code/sibilant/include/macros.sibilant:982:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 31210,\n\t      line: 983,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"and\",\n\t        type: \"literal\",\n\t        start: 31211,\n\t        line: 983,\n\t        col: 9,\n\t        length: 3,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 31215,\n\t        line: 983,\n\t        col: 13,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"defined?\",\n\t          type: \"literal\",\n\t          start: 31216,\n\t          line: 983,\n\t          col: 14,\n\t          length: 8,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 31214,\n\t          line: 983,\n\t          col: 12,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 31233,\n\t        line: 983,\n\t        col: 31,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"!=\",\n\t          type: \"otherChar\",\n\t          start: 31234,\n\t          line: 983,\n\t          col: 32,\n\t          length: 2,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, thing, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"null\",\n\t          type: \"literal\",\n\t          start: 31244,\n\t          line: 983,\n\t          col: 42,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 31243,\n\t            line: 983,\n\t            col: 41,\n\t            length: 1,\n\t            contents: []\n\t          } ]\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 31232,\n\t          line: 983,\n\t          col: 30,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.withState = (function withState$(k, v, body) {\n\t    /* with-state /Users/jbr/code/sibilant/include/macros.sibilant:989:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var before = sibilant.macros.namespaces.core.state(k);\n\t    sibilant.macros.namespaces.core.state(k, v);\n\t    var returnValue = interleave(\"\\n\", map(body, transpile));\n\t    sibilant.macros.namespaces.core.state(k, before);\n\t    return returnValue;\n\t  });\n\t  sibilant.macros.namespaces.core.join = (function join$(arr, glue) {\n\t    /* join /Users/jbr/code/sibilant/include/macros.sibilant:1011:0 */\n\t  \n\t    (function() {\n\t      if ((typeof glue !== \"undefined\" && typeof arr === \"undefined\")) {\n\t        arr = glue;\n\t        return glue = undefined;\n\t      }\n\t    }).call(this);\n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 31944,\n\t      line: 1014,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 31945,\n\t        line: 1014,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"join\",\n\t          type: \"literal\",\n\t          start: 31946,\n\t          line: 1014,\n\t          col: 10,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arr, (glue || \"\\\"\\\"\") ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"_destructure\"] = (function _destructure$(pairs) {\n\t    /* *destructure /Users/jbr/code/sibilant/include/macros.sibilant:1019:0 */\n\t  \n\t    var destructured = [];\n\t    bulkMap(pairs, (function(lhs, rhs) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:1021:21 */\n\t    \n\t      var transpiledRhs = transpile(rhs);\n\t      return (function() {\n\t        switch(lhs.type) {\n\t        case \"bracket\":\n\t          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n\t              source = (function() {\n\t            if (literalRhs__QUERY) {\n\t              return transpiledRhs;\n\t            } else {\n\t              var symbol = sibilant.macros.namespaces.core.symbol();\n\t              destructured.push([ symbol, transpiledRhs ]);\n\t              return symbol;\n\t            }\n\t          }).call(this);\n\t          lhs.contents.forEach((function(item, index) {\n\t            /* /Users/jbr/code/sibilant/include/macros.sibilant:1031:32 */\n\t          \n\t            return destructured.push([ transpile(item), {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 32902,\n\t              line: 1032,\n\t              col: 76,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"/Users/jbr/code/sibilant/include\",\n\t                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t                token: \"get\",\n\t                type: \"literal\",\n\t                start: 32903,\n\t                line: 1032,\n\t                col: 77,\n\t                length: 3,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, source, index ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ]);\n\t          }));\n\t          return (function() {\n\t            if (!(literalRhs__QUERY)) {\n\t              return destructured.push([ source, \"undefined\" ]);\n\t            }\n\t          }).call(this);\n\t        \n\t        case \"brace\":\n\t          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n\t              source = (function() {\n\t            if (literalRhs__QUERY) {\n\t              return transpiledRhs;\n\t            } else {\n\t              var symbol = sibilant.macros.namespaces.core.symbol();\n\t              destructured.push([ symbol, transpiledRhs ]);\n\t              return symbol;\n\t            }\n\t          }).call(this);\n\t          lhs.contents.forEach((function(item, index) {\n\t            /* /Users/jbr/code/sibilant/include/macros.sibilant:1042:32 */\n\t          \n\t            var trItem = transpile(item);\n\t            return destructured.push([ trItem, {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"(\",\n\t              type: \"expression\",\n\t              start: 33853,\n\t              line: 1044,\n\t              col: 67,\n\t              length: 1,\n\t              contents: [ {\n\t                dir: \"/Users/jbr/code/sibilant/include\",\n\t                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t                token: \"get\",\n\t                type: \"literal\",\n\t                start: 33854,\n\t                line: 1044,\n\t                col: 68,\n\t                length: 3,\n\t                contents: [],\n\t                specials: 0,\n\t                precedingIgnored: []\n\t              }, source, [ \"\\\"\", trItem, \"\\\"\" ] ],\n\t              precedingIgnored: [],\n\t              specials: 0,\n\t              end: undefined,\n\t              closed: true,\n\t              closingIgnored: []\n\t            } ]);\n\t          }));\n\t          return (function() {\n\t            if (!(literalRhs__QUERY)) {\n\t              return destructured.push([ source, \"undefined\" ]);\n\t            }\n\t          }).call(this);\n\t        \n\t        default:\n\t          return destructured.push([ transpile(lhs), (function() {\n\t            if (rhs) {\n\t              return transpiledRhs;\n\t            } else {\n\t              return \"undefined\";\n\t            }\n\t          }).call(this) ]);\n\t        }\n\t      }).call(this);\n\t    }));\n\t    return destructured;\n\t  });\n\t  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n\t    /* var /Users/jbr/code/sibilant/include/macros.sibilant:1063:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return asStatement([ \"var \", interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:1067:25 */\n\t    \n\t      return [ pair[0], \" = \", pair[1] ];\n\t    })), \",\\n    \") ]);\n\t  });\n\t  sibilant.macros.namespaces.core.assign = (function assign$(pairs) {\n\t    /* assign /Users/jbr/code/sibilant/include/macros.sibilant:1085:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:1088:17 */\n\t    \n\t      return asStatement([ pair[0], \" = \", pair[1] ]);\n\t    })), \"\\n\");\n\t  });\n\t  sibilant.macros.namespaces.core.default = (function default$(pairs) {\n\t    /* default /Users/jbr/code/sibilant/include/macros.sibilant:1096:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(\"\\n\", bulkMap(pairs, (function(name, value) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:1097:40 */\n\t    \n\t      return {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 35842,\n\t        line: 1098,\n\t        col: 35,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"assign\",\n\t          type: \"literal\",\n\t          start: 35843,\n\t          line: 1098,\n\t          col: 36,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, name, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 35856,\n\t          line: 1098,\n\t          col: 49,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"ternary\",\n\t            type: \"literal\",\n\t            start: 35857,\n\t            line: 1098,\n\t            col: 50,\n\t            length: 7,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 35865,\n\t            line: 1098,\n\t            col: 58,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"defined?\",\n\t              type: \"literal\",\n\t              start: 35866,\n\t              line: 1098,\n\t              col: 59,\n\t              length: 8,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, name ],\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 35864,\n\t              line: 1098,\n\t              col: 57,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          }, name, value ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 35855,\n\t            line: 1098,\n\t            col: 48,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      };\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core.importNamespace = (function importNamespace$(namespace) {\n\t    /* import-namespace /Users/jbr/code/sibilant/include/macros.sibilant:1101:0 */\n\t  \n\t    var namespaceAsString = outputFormatter(transpile(namespace));\n\t    (function() {\n\t      if (!(sibilant.macros.namespaces.hasOwnProperty(namespaceAsString))) {\n\t        return sibilant.macros.namespaces[namespaceAsString] = {  };\n\t      }\n\t    }).call(this);\n\t    sibilant.macros.searchPath.unshift(namespaceAsString);\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core.namespace = (function namespace$(namespace) {\n\t    /* namespace /Users/jbr/code/sibilant/include/macros.sibilant:1109:0 */\n\t  \n\t    sibilant.macros.namespaces.core.importNamespace(namespace);\n\t    sibilant.macros.namespace = sibilant.macros.namespaces[outputFormatter(transpile(namespace))];\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core[\"hasKey__QUERY\"] = (function hasKey__QUERY$(object, key) {\n\t    /* has-key? /Users/jbr/code/sibilant/include/macros.sibilant:1124:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 36650,\n\t      line: 1125,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 36651,\n\t        line: 1125,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"has-own-property\",\n\t          type: \"literal\",\n\t          start: 36652,\n\t          line: 1125,\n\t          col: 10,\n\t          length: 16,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, object, key ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n\t    /* get /Users/jbr/code/sibilant/include/macros.sibilant:1146:0 */\n\t  \n\t    var keys = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return [ transpile(obj), map(keys, (function(key) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:1148:19 */\n\t    \n\t      var transpiled = transpile(key),\n\t          output = outputFormatter(transpiled);\n\t      return (function() {\n\t        if (output.match((new RegExp(\"^\\\"[a-zA-Z0-9]+\\\"$\", undefined)))) {\n\t          return [ \".\", output.replace((new RegExp(\"\\\"\", \"g\")), \"\") ];\n\t        } else {\n\t          return [ \"[\", transpiled, \"]\" ];\n\t        }\n\t      }).call(this);\n\t    })) ];\n\t  });\n\t  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n\t    /* set /Users/jbr/code/sibilant/include/macros.sibilant:1175:0 */\n\t  \n\t    var kvPairs = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n\t      /* /Users/jbr/code/sibilant/include/macros.sibilant:1176:43 */\n\t    \n\t      return {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 38318,\n\t        line: 1176,\n\t        col: 52,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"assign\",\n\t          type: \"literal\",\n\t          start: 38319,\n\t          line: 1176,\n\t          col: 53,\n\t          length: 6,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 38326,\n\t          line: 1176,\n\t          col: 60,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            start: 38327,\n\t            line: 1176,\n\t            col: 61,\n\t            length: 3,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, arr, k ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 38325,\n\t            line: 1176,\n\t            col: 59,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, v ],\n\t        precedingIgnored: [],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      };\n\t    })));\n\t  });\n\t  sibilant.macros.namespaces.core[\"lowerCase__QUERY\"] = (function lowerCase__QUERY$(str) {\n\t    /* lower-case? /Users/jbr/code/sibilant/include/macros.sibilant:1181:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 38515,\n\t      line: 1182,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 38516,\n\t        line: 1182,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 38518,\n\t        line: 1182,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 38519,\n\t          line: 1182,\n\t          col: 12,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"to-lower-case\",\n\t            type: \"literal\",\n\t            start: 38520,\n\t            line: 1182,\n\t            col: 13,\n\t            length: 13,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 38517,\n\t          line: 1182,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, str ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core[\"upperCase__QUERY\"] = (function upperCase__QUERY$(str) {\n\t    /* upper-case? /Users/jbr/code/sibilant/include/macros.sibilant:1189:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 38716,\n\t      line: 1190,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"=\",\n\t        type: \"otherChar\",\n\t        start: 38717,\n\t        line: 1190,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [],\n\t        specials: 0,\n\t        precedingIgnored: []\n\t      }, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 38719,\n\t        line: 1190,\n\t        col: 11,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 38720,\n\t          line: 1190,\n\t          col: 12,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"to-upper-case\",\n\t            type: \"literal\",\n\t            start: 38721,\n\t            line: 1190,\n\t            col: 13,\n\t            length: 13,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: []\n\t        }, str ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \" \",\n\t          type: \"whitespace\",\n\t          start: 38718,\n\t          line: 1190,\n\t          col: 10,\n\t          length: 1,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      }, str ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  sibilant.macros.namespaces.core.sourceMappingUrl = (function sourceMappingUrl$(url) {\n\t    /* source-mapping-url /Users/jbr/code/sibilant/include/macros.sibilant:1197:0 */\n\t  \n\t    return [ \"//# sourceMappingURL=\", eval(outputFormatter(transpile(url))), \"\\n\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.sortBy = (function sortBy$(arrayOfObjects, attribute) {\n\t    /* sort-by /Users/jbr/code/sibilant/include/macros.sibilant:1206:0 */\n\t  \n\t    return {\n\t      dir: \"/Users/jbr/code/sibilant/include\",\n\t      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t      token: \"(\",\n\t      type: \"expression\",\n\t      start: 39355,\n\t      line: 1207,\n\t      col: 8,\n\t      length: 1,\n\t      contents: [ {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \".\",\n\t        type: \"dots\",\n\t        start: 39356,\n\t        line: 1207,\n\t        col: 9,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"sort\",\n\t          type: \"literal\",\n\t          start: 39357,\n\t          line: 1207,\n\t          col: 10,\n\t          length: 4,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        } ],\n\t        precedingIgnored: []\n\t      }, arrayOfObjects, {\n\t        dir: \"/Users/jbr/code/sibilant/include\",\n\t        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t        token: \"(\",\n\t        type: \"expression\",\n\t        start: 39395,\n\t        line: 1208,\n\t        col: 15,\n\t        length: 1,\n\t        contents: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"#->\",\n\t          type: \"otherChar\",\n\t          start: 39396,\n\t          line: 1208,\n\t          col: 16,\n\t          length: 3,\n\t          contents: [],\n\t          specials: 0,\n\t          precedingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 39400,\n\t          line: 1208,\n\t          col: 20,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"get\",\n\t            type: \"literal\",\n\t            start: 39401,\n\t            line: 1208,\n\t            col: 21,\n\t            length: 3,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          }, attribute ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \" \",\n\t            type: \"whitespace\",\n\t            start: 39399,\n\t            line: 1208,\n\t            col: 19,\n\t            length: 1,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \".\",\n\t          type: \"dots\",\n\t          start: 39437,\n\t          line: 1209,\n\t          col: 20,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"to-string\",\n\t            type: \"literal\",\n\t            start: 39438,\n\t            line: 1209,\n\t            col: 21,\n\t            length: 9,\n\t            contents: [],\n\t            specials: 0,\n\t            precedingIgnored: []\n\t          } ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"\\n\",\n\t            type: \"newline\",\n\t            start: 39416,\n\t            line: 1208,\n\t            col: 36,\n\t            length: 1,\n\t            contents: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"                    \",\n\t            type: \"whitespace\",\n\t            start: 39417,\n\t            line: 1209,\n\t            col: 0,\n\t            length: 20,\n\t            contents: []\n\t          } ]\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"(\",\n\t          type: \"expression\",\n\t          start: 39468,\n\t          line: 1210,\n\t          col: 20,\n\t          length: 1,\n\t          contents: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \".\",\n\t            type: \"dots\",\n\t            start: 39469,\n\t            line: 1210,\n\t            col: 21,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"locale-compare\",\n\t              type: \"literal\",\n\t              start: 39470,\n\t              line: 1210,\n\t              col: 22,\n\t              length: 14,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            } ],\n\t            precedingIgnored: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"(\",\n\t            type: \"expression\",\n\t            start: 39485,\n\t            line: 1210,\n\t            col: 37,\n\t            length: 1,\n\t            contents: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"get\",\n\t              type: \"literal\",\n\t              start: 39486,\n\t              line: 1210,\n\t              col: 38,\n\t              length: 3,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: []\n\t            }, {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \"#1\",\n\t              type: \"argPlaceholder\",\n\t              start: 39490,\n\t              line: 1210,\n\t              col: 42,\n\t              length: 2,\n\t              contents: [],\n\t              specials: 0,\n\t              precedingIgnored: [ {\n\t                dir: \"/Users/jbr/code/sibilant/include\",\n\t                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t                token: \" \",\n\t                type: \"whitespace\",\n\t                start: 39489,\n\t                line: 1210,\n\t                col: 41,\n\t                length: 1,\n\t                contents: []\n\t              } ]\n\t            }, attribute ],\n\t            precedingIgnored: [ {\n\t              dir: \"/Users/jbr/code/sibilant/include\",\n\t              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t              token: \" \",\n\t              type: \"whitespace\",\n\t              start: 39484,\n\t              line: 1210,\n\t              col: 36,\n\t              length: 1,\n\t              contents: []\n\t            } ],\n\t            specials: 0,\n\t            end: undefined,\n\t            closed: true,\n\t            closingIgnored: []\n\t          } ],\n\t          precedingIgnored: [ {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"\\n\",\n\t            type: \"newline\",\n\t            start: 39447,\n\t            line: 1209,\n\t            col: 30,\n\t            length: 1,\n\t            contents: []\n\t          }, {\n\t            dir: \"/Users/jbr/code/sibilant/include\",\n\t            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t            token: \"                    \",\n\t            type: \"whitespace\",\n\t            start: 39448,\n\t            line: 1210,\n\t            col: 0,\n\t            length: 20,\n\t            contents: []\n\t          } ],\n\t          specials: 0,\n\t          end: undefined,\n\t          closed: true,\n\t          closingIgnored: []\n\t        } ],\n\t        precedingIgnored: [ {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"\\n\",\n\t          type: \"newline\",\n\t          start: 39379,\n\t          line: 1207,\n\t          col: 32,\n\t          length: 1,\n\t          contents: []\n\t        }, {\n\t          dir: \"/Users/jbr/code/sibilant/include\",\n\t          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n\t          token: \"               \",\n\t          type: \"whitespace\",\n\t          start: 39380,\n\t          line: 1208,\n\t          col: 0,\n\t          length: 15,\n\t          contents: []\n\t        } ],\n\t        specials: 0,\n\t        end: undefined,\n\t        closed: true,\n\t        closingIgnored: []\n\t      } ],\n\t      precedingIgnored: [],\n\t      specials: 0,\n\t      end: undefined,\n\t      closed: true,\n\t      closingIgnored: []\n\t    };\n\t  });\n\t  var docs = sibilant.docs = {\n\t    definitions: [],\n\t    undocumented: {  }\n\t  };\n\t  docs.record = (function docs$record$(type, namespace, name, node) {\n\t    /* docs.record /Users/jbr/code/sibilant/src/docs.sibilant:4:0 */\n\t  \n\t    var doc = docs.lastDoc;\n\t    (function() {\n\t      if (typeof doc !== \"undefined\") {\n\t        delete sibilant.docs.undocumented[name];\n\t        return sibilant.docs.definitions.push(mergeInto(doc, {\n\t          name: name,\n\t          type: type,\n\t          namespace: namespace,\n\t          definition: node\n\t        }));\n\t      } else {\n\t        return sibilant.docs.undocumented[name] = true;\n\t      }\n\t    }).call(this);\n\t    return delete sibilant.docs.lastDoc;\n\t  });\n\t  docs.tags = (function docs$tags$() {\n\t    /* docs.tags /Users/jbr/code/sibilant/src/docs.sibilant:16:0 */\n\t  \n\t    var tags = flatten(pluck(docs.definitions, \"tags\")),\n\t        counts = {  };\n\t    tags.forEach((function(tag) {\n\t      /* /Users/jbr/code/sibilant/src/docs.sibilant:19:5 */\n\t    \n\t      return counts[tag] = ((counts[tag] || 0) + 1);\n\t    }));\n\t    return counts;\n\t  });\n\t  docs.text = (function docs$text$() {\n\t    /* docs.text /Users/jbr/code/sibilant/src/docs.sibilant:27:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* /Users/jbr/code/sibilant/src/docs.sibilant:29:15 */\n\t    \n\t      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n\t        if (definition.references) {\n\t          return (\"references:\\n  \" + (definition.references.map((function() {\n\t            /* /Users/jbr/code/sibilant/src/docs.sibilant:35:51 */\n\t          \n\t            return eval(outputFormatter(transpile(arguments[0])));\n\t          })).join(\"\\n  \") + \"\\n\"));\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + (function() {\n\t        if (definition.tags) {\n\t          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n\t        /* /Users/jbr/code/sibilant/src/docs.sibilant:46:43 */\n\t      \n\t        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n\t      })).join(\"\\n\\n\") + \"\\n\\n\");\n\t    })).join(\"\");\n\t  });\n\t  docs.textNoColor = (function docs$textNoColor$() {\n\t    /* docs.text-no-color /Users/jbr/code/sibilant/src/docs.sibilant:53:0 */\n\t  \n\t    var stripAnsi = __webpack_require__(559);\n\t    return stripAnsi(docs.text());\n\t  });\n\t  docs.json = (function docs$json$() {\n\t    /* docs.json /Users/jbr/code/sibilant/src/docs.sibilant:57:0 */\n\t  \n\t    return JSON.stringify(docs.data());\n\t  });\n\t  docs.data = (function docs$data$() {\n\t    /* docs.data /Users/jbr/code/sibilant/src/docs.sibilant:60:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* /Users/jbr/code/sibilant/src/docs.sibilant:62:6 */\n\t    \n\t      return {\n\t        name: prettify(definition.name, false),\n\t        namespace: definition.namespace,\n\t        type: definition.type,\n\t        description: definition.docString,\n\t        references: (function() {\n\t          if (definition.references) {\n\t            return definition.references.map((function() {\n\t              /* /Users/jbr/code/sibilant/src/docs.sibilant:68:52 */\n\t            \n\t              return arguments[0].token.slice(1, -1);\n\t            }));\n\t          } else {\n\t            return [];\n\t          }\n\t        }).call(this),\n\t        arguments: definition.definition.contents[2].contents.map((function() {\n\t          /* /Users/jbr/code/sibilant/src/docs.sibilant:73:30 */\n\t        \n\t          return prettify(arguments[0], false);\n\t        })),\n\t        definition: prettify(definition.definition, false),\n\t        examples: (definition.examples || []).map((function() {\n\t          /* /Users/jbr/code/sibilant/src/docs.sibilant:76:29 */\n\t        \n\t          return {\n\t            javascript: outputFormatter(transpile(arguments[0])),\n\t            sibilant: prettify(arguments[0], false)\n\t          };\n\t        })),\n\t        tags: definition.tags\n\t      };\n\t    }));\n\t  });\n\t  var tap = (function tap$(item, fn) {\n\t    /* tap /Users/jbr/code/sibilant/src/helpers.sibilant:3:0 */\n\t  \n\t    fn(item);\n\t    return item;\n\t  });\n\t  var recurseIndent = (function recurseIndent$(args) {\n\t    /* recurse-indent /Users/jbr/code/sibilant/src/helpers.sibilant:7:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return map(args, (function(arg) {\n\t      /* /Users/jbr/code/sibilant/src/helpers.sibilant:9:10 */\n\t    \n\t      return (function() {\n\t        if (node__QUERY(arg)) {\n\t          return mergeInto(arg, { contents: recurseIndent.apply(this, compact(flatten(arg.contents))) });\n\t        } else if (((arg) && typeof (arg) === \"object\" && (arg).constructor.name === \"Array\")) {\n\t          return recurseIndent.apply(this, arg);\n\t        } else if (typeof arg === \"number\") {\n\t          return arg.toString();\n\t        } else if (typeof arg === \"string\") {\n\t          return arg.replace((new RegExp(\"\\\\n\", \"g\")), \"\\n  \").replace((new RegExp(\"\\\\n\\\\s+\\\\n\", \"g\")), \"\\n\\n\");\n\t        } else {\n\t          return arg;\n\t        }\n\t      }).call(this);\n\t    }));\n\t  });\n\t  var indent = (function indent$(args) {\n\t    /* indent /Users/jbr/code/sibilant/src/helpers.sibilant:24:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"\\n  \", recurseIndent(map(args, transpile)), \"\\n\" ];\n\t  });\n\t  var escapeRegex = (function escapeRegex$(string) {\n\t    /* escape-regex /Users/jbr/code/sibilant/src/helpers.sibilant:27:0 */\n\t  \n\t    return string.replace((new RegExp(\"[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\^\\\\$\\\\|]\", \"g\")), \"\\\\$&\");\n\t  });\n\t  var qescape = (function qescape$(content) {\n\t    /* qescape /Users/jbr/code/sibilant/src/helpers.sibilant:30:0 */\n\t  \n\t    return (function() {\n\t      if (!((typeof content !== \"undefined\" && content !== null))) {\n\t        return \"\";\n\t      } else if (typeof content === \"string\") {\n\t        return content.split(\"\\\\\\\\ \"[0]).join(\"\\\\\\\\ \".slice(0, -1)).replace((new RegExp(\"\\\"\", \"g\")), \"\\\\\\\"\").replace((new RegExp(\"\\\\n\", \"g\")), \"\\\\n\\\" +\\n\\\"\");\n\t      } else {\n\t        return content;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var mapNode = (function mapNode$(node, fn) {\n\t    /* map-node /Users/jbr/code/sibilant/src/helpers.sibilant:39:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        var mappedNode = fn(node);\n\t        (function() {\n\t          if (node__QUERY(mappedNode)) {\n\t            return mappedNode.contents = mapNode(mappedNode.contents, fn);\n\t          }\n\t        }).call(this);\n\t        return mappedNode;\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, (function() {\n\t          /* /Users/jbr/code/sibilant/src/helpers.sibilant:48:32 */\n\t        \n\t          return mapNode(arguments[0], fn);\n\t        }));\n\t      } else {\n\t        return fn(node);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var eachNode = (function eachNode$(node, fn) {\n\t    /* each-node /Users/jbr/code/sibilant/src/helpers.sibilant:51:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        return (function() {\n\t          if (fn(node)) {\n\t            return eachNode(node.contents, fn);\n\t          }\n\t        }).call(this);\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return node.forEach((function(c) {\n\t          /* /Users/jbr/code/sibilant/src/helpers.sibilant:53:22 */\n\t        \n\t          return eachNode(c, fn);\n\t        }));\n\t      } else {\n\t        return fn(node);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var statement__QUERY = (function statement__QUERY$(transpiled) {\n\t    /* statement? /Users/jbr/code/sibilant/src/helpers.sibilant:56:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(transpiled)) {\n\t        return statement__QUERY(transpiled.contents);\n\t      } else if (((transpiled) && typeof (transpiled) === \"object\" && (transpiled).constructor.name === \"Array\")) {\n\t        return statement__QUERY(transpiled.slice(-1)[0]);\n\t      } else if (typeof transpiled === \"string\") {\n\t        return \";\" === transpiled.slice(-1)[0];\n\t      } else {\n\t        return false;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var asStatement = (function asStatement$(node) {\n\t    /* as-statement /Users/jbr/code/sibilant/src/helpers.sibilant:62:0 */\n\t  \n\t    var transpiled = transpile(node);\n\t    return (function() {\n\t      if (emptyNode__QUERY(transpiled)) {\n\t        return undefined;\n\t      } else if (statement__QUERY(transpiled)) {\n\t        return transpiled;\n\t      } else {\n\t        return [ transpiled, \";\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var unquote__QUERY = (function unquote__QUERY$(node) {\n\t    /* unquote? /Users/jbr/code/sibilant/src/helpers.sibilant:69:0 */\n\t  \n\t    return node__QUERY(node, \"at\");\n\t  });\n\t  var findUnquotes = (function findUnquotes$(node) {\n\t    /* find-unquotes /Users/jbr/code/sibilant/src/helpers.sibilant:71:0 */\n\t  \n\t    var unquotes = {  };\n\t    eachNode(node, (function(n) {\n\t      /* /Users/jbr/code/sibilant/src/helpers.sibilant:73:21 */\n\t    \n\t      (function() {\n\t        if (unquote__QUERY(n)) {\n\t          return unquotes[n.nodeId] = transpile(n);\n\t        }\n\t      }).call(this);\n\t      return !(node__QUERY(n, \"tick\"));\n\t    }));\n\t    return unquotes;\n\t  });\n\t  var spliceDots = (function spliceDots$(node) {\n\t    /* splice-dots /Users/jbr/code/sibilant/src/helpers.sibilant:79:0 */\n\t  \n\t    (function() {\n\t      if ((node && ((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\"))) {\n\t        var contents = [];\n\t        node.contents.forEach((function(content) {\n\t          /* /Users/jbr/code/sibilant/src/helpers.sibilant:82:11 */\n\t        \n\t          return (function() {\n\t            if ((node__QUERY(content, \"dots\") && ((content.contents) && typeof (content.contents) === \"object\" && (content.contents).constructor.name === \"Array\") && content.contents.length === 1 && ((content.contents[0]) && typeof (content.contents[0]) === \"object\" && (content.contents[0]).constructor.name === \"Array\"))) {\n\t              return contents.push.apply(contents, content.contents[0]);\n\t            } else {\n\t              return contents.push(content);\n\t            }\n\t          }).call(this);\n\t        }));\n\t        return node.contents = contents;\n\t      }\n\t    }).call(this);\n\t    return node;\n\t  });\n\t  var alternatingKeysAndValues = (function alternatingKeysAndValues$(hash) {\n\t    /* alternating-keys-and-values /Users/jbr/code/sibilant/src/helpers.sibilant:94:0 */\n\t  \n\t    return flatten(map(Object.keys(hash), (function(key) {\n\t      /* /Users/jbr/code/sibilant/src/helpers.sibilant:96:19 */\n\t    \n\t      return [ key, hash[key] ];\n\t    })));\n\t  });\n\t  var mapNodeForQuoteExpansion = (function mapNodeForQuoteExpansion$(node, expansions) {\n\t    /* map-node-for-quote-expansion /Users/jbr/code/sibilant/src/helpers.sibilant:99:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(node)) {\n\t        var mappedNode = (function() {\n\t          if (expansions.hasOwnProperty(node.nodeId)) {\n\t            return expansions[node.nodeId];\n\t          } else {\n\t            return clone(node);\n\t          }\n\t        }).call(this);\n\t        (function() {\n\t          if (node__QUERY(mappedNode)) {\n\t            return mappedNode.contents = mapNodeForQuoteExpansion(mappedNode.contents, expansions);\n\t          }\n\t        }).call(this);\n\t        mappedNode = spliceDots(mappedNode);\n\t        return mappedNode;\n\t      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, (function() {\n\t          /* /Users/jbr/code/sibilant/src/helpers.sibilant:110:19 */\n\t        \n\t          return mapNodeForQuoteExpansion(arguments[0], expansions);\n\t        }));\n\t      } else {\n\t        return node;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.return = (function sibilant$macros$namespaces$core$return$(token) {\n\t    /* ^return /Users/jbr/code/sibilant/src/core.sibilant:1:0 */\n\t  \n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(\"returning \", prettify(token));\n\t      }\n\t    }).call(this);\n\t    var defaultReturn = asStatement([ \"return \", transpile(token) ]);\n\t    return (function() {\n\t      if ((token && token.contents && token.contents.length)) {\n\t        return (function() {\n\t          switch(token.contents[0].token) {\n\t          case \"return\":\n\t          case \"throw\":\n\t          case \"do\":\n\t            return transpile(token);\n\t          \n\t          case \"delete\":\n\t            var deleteMacro = macros.delete;\n\t            return (function() {\n\t              if (token.contents.length < 3) {\n\t                return defaultReturn;\n\t              } else {\n\t                return [ asStatement(deleteMacro.apply(this, token.contents.slice(1, -1))), \"\\nreturn \", asStatement(deleteMacro(token.contents.slice(-1)[0])) ];\n\t              }\n\t            }).call(this);\n\t          \n\t          case \"def\":\n\t            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return(token.contents[1]) ];\n\t          \n\t          case \"assign\":\n\t            return (function() {\n\t              if (token.contents.length < 4) {\n\t                return defaultReturn;\n\t              } else {\n\t                var result = clone(transpile(token));\n\t                result.contents = result.contents.slice(0, -4).concat([ \"return \" ], result.contents.slice(-4));\n\t                return result;\n\t              }\n\t            }).call(this);\n\t          \n\t          case \"var\":\n\t            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return((function() {\n\t              if (0 === (token.contents.length % 2)) {\n\t                return token.contents.slice(-1)[0];\n\t              } else {\n\t                return token.contents.slice(-2)[0];\n\t              }\n\t            }).call(this)) ];\n\t          \n\t          case \"set\":\n\t            return (function() {\n\t              if (token.contents.length < 5) {\n\t                return defaultReturn;\n\t              } else {\n\t                var obj = token.contents[1],\n\t                    nonReturnPart = token.contents.slice(2, (token.contents.length - 2)),\n\t                    returnPart = token.contents.slice(-2);\n\t                nonReturnPart.unshift(obj);\n\t                returnPart.unshift(obj);\n\t                return [ sibilant.macros.namespaces.core.set.apply(this, nonReturnPart), \"\\nreturn \", sibilant.macros.namespaces.core.set.apply(this, returnPart) ];\n\t              }\n\t            }).call(this);\n\t          \n\t          default:\n\t            return defaultReturn;\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        return defaultReturn;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.do = (function sibilant$macros$namespaces$core$do$(body) {\n\t    /* ^do /Users/jbr/code/sibilant/src/core.sibilant:48:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return (function() {\n\t      if (1 === body.length) {\n\t        return sibilant.macros.namespaces.core.return(body[0]);\n\t      } else if (body.length) {\n\t        return [ interleave(map(body.slice(0, -1), (function() {\n\t          /* /Users/jbr/code/sibilant/src/core.sibilant:56:19 */\n\t        \n\t          return asStatement(arguments[0]);\n\t        })), \"\\n\"), \"\\n\", sibilant.macros.namespaces.core.return(body.slice(-1)[0]) ];\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.emptyList = (function sibilant$macros$namespaces$core$emptyList$() {\n\t    /* ^empty-list /Users/jbr/code/sibilant/src/core.sibilant:63:0 */\n\t  \n\t    return \"null\";\n\t  });\n\t  sibilant.macros.namespaces.core.def = (function sibilant$macros$namespaces$core$def$(fnName, args, body) {\n\t    /* ^def /Users/jbr/code/sibilant/src/core.sibilant:65:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    (function() {\n\t      if (typeof fnName === \"undefined\") {\n\t        return error(\"invalid function definition. missing name.\");\n\t      } else if (typeof args === \"undefined\") {\n\t        return error(\"invalid function definition. missing arguments or return value.\");\n\t      }\n\t    }).call(this);\n\t    var fnNameTr = transpile(fnName),\n\t        thisNode = this;\n\t    sibilant.docs.record(\"function\", sibilant.macros.searchPath[0], fnName, this);\n\t    return asStatement([ (function() {\n\t      if (outputFormatter(fnNameTr).match((new RegExp(\"\\\\.\", undefined)))) {\n\t        return \"\";\n\t      } else {\n\t        return \"var \";\n\t      }\n\t    }).call(this), fnNameTr, \" = \", sibilant.macros.namespaces.core.lambda.apply(this, [ {\n\t      name: fnName,\n\t      args: args,\n\t      node: thisNode\n\t    } ].concat(body)) ]);\n\t  });\n\t  sibilant.macros.namespaces.core.macro = (function sibilant$macros$namespaces$core$macro$(name, args, body) {\n\t    /* ^macro /Users/jbr/code/sibilant/src/core.sibilant:77:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 2);\n\t  \n\t    var nameTr = outputFormatter(transpile(name)),\n\t        options = {\n\t      name: name,\n\t      args: args,\n\t      node: this\n\t    },\n\t        js = outputFormatter(sibilant.macros.namespaces.core.lambda.apply(this, [ options ].concat(body)));\n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(js);\n\t      }\n\t    }).call(this);\n\t    sibilant.docs.record(\"macro\", sibilant.macros.searchPath[0], name, this);\n\t    var evaledJs = (function() {\n\t      try {\n\t        return eval(js);\n\t      } catch (e) {\n\t        console.log(e.message);\n\t        console.log(red(e.stack.split(\"\\n\")[1]));\n\t        return console.log((\"error in parsing macro \" + sibilant.prettyPrint(name) + \":\\n\" + js));\n\t      }\n\t    }).call(this);\n\t    sibilant.macros.namespace[nameTr] = evaledJs;\n\t    return undefined;\n\t  });\n\t  sibilant.macros.namespaces.core.meta = (function sibilant$macros$namespaces$core$meta$(body) {\n\t    /* ^meta /Users/jbr/code/sibilant/src/core.sibilant:97:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var js = outputFormatter(transpile(sibilant.macros.namespaces.core.scoped.apply(this, body)));\n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(js);\n\t      }\n\t    }).call(this);\n\t    return outputFormatter(eval(js));\n\t  });\n\t  sibilant.macros.namespaces.core.concat = (function sibilant$macros$namespaces$core$concat$(args) {\n\t    /* ^concat /Users/jbr/code/sibilant/src/core.sibilant:103:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n\t  });\n\t  sibilant.macros.namespaces.core.reverse = (function sibilant$macros$namespaces$core$reverse$(arr) {\n\t    /* ^reverse /Users/jbr/code/sibilant/src/core.sibilant:106:0 */\n\t  \n\t    var reversed = [];\n\t    arr.forEach((function(item) {\n\t      /* /Users/jbr/code/sibilant/src/core.sibilant:108:5 */\n\t    \n\t      return reversed.unshift(item);\n\t    }));\n\t    return reversed;\n\t  });\n\t  var reverse = sibilant.macros.namespaces.core.reverse;\n\t  sibilant.macros.namespaces.core.lambda = (function sibilant$macros$namespaces$core$lambda$(argsOrOptions, body) {\n\t    /* ^lambda /Users/jbr/code/sibilant/src/core.sibilant:113:0 */\n\t  \n\t    var body = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    (function() {\n\t      if (sibilant.debug) {\n\t        return console.log(argsOrOptions);\n\t      }\n\t    }).call(this);\n\t    var args = (argsOrOptions.args || argsOrOptions),\n\t        body = (argsOrOptions.body || body),\n\t        args = (function() {\n\t      if (node__QUERY(args, \"expression\")) {\n\t        return args.contents;\n\t      } else if ((node__QUERY(args) && 0 === body.length)) {\n\t        body = [ args ];\n\t        return [];\n\t      } else {\n\t        return args;\n\t      }\n\t    }).call(this),\n\t        name = (function() {\n\t      if (argsOrOptions.name) {\n\t        return outputFormatter(transpile(argsOrOptions.name)).replace((new RegExp(\"\\\\W+\", \"g\")), \"$\").concat(\"$\");\n\t      }\n\t    }).call(this),\n\t        rest = detect(args, (function() {\n\t      /* /Users/jbr/code/sibilant/src/core.sibilant:128:23 */\n\t    \n\t      return node__QUERY(arguments[0], \"dots\");\n\t    }));\n\t    var thisNode = this,\n\t        node = detect([ argsOrOptions.node, thisNode, argsOrOptions.name, args, body[0] ], (function(n) {\n\t      /* /Users/jbr/code/sibilant/src/core.sibilant:133:16 */\n\t    \n\t      return (node__QUERY(n) && n.file);\n\t    }));\n\t    return [ \"(function\", (function() {\n\t      if (name) {\n\t        return (\" \" + name);\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this), \"(\", interleave(\", \", map(args, transpile)), \") {\", (function() {\n\t      if ((argsOrOptions.name || node)) {\n\t        return indent([ \"/*\", (function() {\n\t          if (argsOrOptions.name) {\n\t            return (\" \" + sibilant.prettyPrint(argsOrOptions.name, false));\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this), (function() {\n\t          if (node) {\n\t            return (\" \" + node.file + \":\" + node.line + \":\" + node.col);\n\t          } else {\n\t            return \"\";\n\t          }\n\t        }).call(this), \" */\" ]);\n\t      } else {\n\t        return \"\";\n\t      }\n\t    }).call(this), (function() {\n\t      if ((typeof rest !== \"undefined\" && rest !== null)) {\n\t        return indent(asStatement([ \"var \", transpile(rest), \" = Array.prototype.slice.call(arguments, \", (args.length - 1), \")\" ]));\n\t      }\n\t    }).call(this), indent(sibilant.macros.namespaces.core.do.apply(this, body)), \"})\" ];\n\t  });\n\t  sibilant.macros.namespaces.core[\"#\"] = sibilant.macros.namespaces.core.lambda;\n\t  sibilant.macros.namespaces.core.quotedHash = (function sibilant$macros$namespaces$core$quotedHash$(pairs) {\n\t    /* ^quoted-hash /Users/jbr/code/sibilant/src/core.sibilant:151:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var cachedQuoteValue = sibilant.quoteHashKeys;\n\t    sibilant.quoteHashKeys = true;\n\t    var value = sibilant.macros.namespaces.core.hash.apply(this, pairs);\n\t    sibilant.quoteHashKeys = cachedQuoteValue;\n\t    return value;\n\t  });\n\t  sibilant.macros.namespaces.core.hash = (function sibilant$macros$namespaces$core$hash$(pairs) {\n\t    /* ^hash /Users/jbr/code/sibilant/src/core.sibilant:158:0 */\n\t  \n\t    var pairs = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    (function() {\n\t      if (1 === (pairs.length % 2)) {\n\t        return error((\"odd number of key-value pairs in hash: \" + inspect(pairs)));\n\t      }\n\t    }).call(this);\n\t    var quoteKeys = sibilant.quoteHashKeys,\n\t        pairStrings = bulkMap(pairs, (function(key, value) {\n\t      /* /Users/jbr/code/sibilant/src/core.sibilant:164:39 */\n\t    \n\t      return [ (function() {\n\t        if ((quoteKeys && !(node__QUERY(key, \"string\")))) {\n\t          return [ \"\\\"\", transpile(key), \"\\\"\" ];\n\t        } else {\n\t          return transpile(key);\n\t        }\n\t      }).call(this), \": \", transpile(value) ];\n\t    }));\n\t    return (function() {\n\t      if (1 >= pairStrings.length) {\n\t        return [ \"{ \", interleave(\", \", pairStrings), \" }\" ];\n\t      } else {\n\t        return [ \"{\", indent(interleave(\",\\n\", pairStrings)), \"}\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  var replace__BANG = (function replace__BANG$(content) {\n\t    /* replace! /Users/jbr/code/sibilant/src/core.sibilant:174:0 */\n\t  \n\t    return (function() {\n\t      if ((node__QUERY(content, \"dots\") && 3 === content.token.length && node__QUERY(content.contents[0], \"at\"))) {\n\t        return mergeInto(clone(content), { contents: [ transpile(content.contents[0]) ] });\n\t      } else if (node__QUERY(content, \"at\")) {\n\t        return transpile(content.contents[0]);\n\t      } else if (node__QUERY(content, \"tick\")) {\n\t        return JSON.stringify(content);\n\t      } else if ((\"object\" === typeof content && content !== null && content.constructor.name !== \"Array\")) {\n\t        return sibilant.macros.namespaces.core.hash.apply(this, Object.keys(content).reduce((function() {\n\t          /* /Users/jbr/code/sibilant/src/core.sibilant:191:21 */\n\t        \n\t          return arguments[0].concat([ arguments[1], replace__BANG(content[arguments[1]]) ]);\n\t        }), []));\n\t      } else if (((content) && typeof (content) === \"object\" && (content).constructor.name === \"Array\")) {\n\t        return sibilant.macros.namespaces.core.list.apply(this, map(content, replace__BANG));\n\t      } else if (typeof content === \"undefined\") {\n\t        return \"undefined\";\n\t      } else if (typeof content === \"number\") {\n\t        return content.toString();\n\t      } else {\n\t        return JSON.stringify(content);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var prettyLogAndReturn = (function prettyLogAndReturn$(content) {\n\t    /* pretty-log-and-return /Users/jbr/code/sibilant/src/core.sibilant:206:0 */\n\t  \n\t    console.log(sibilant.prettyPrint(content));\n\t    return content;\n\t  });\n\t  sibilant.macros.namespaces.core.quote = (function sibilant$macros$namespaces$core$quote$(content) {\n\t    /* ^quote /Users/jbr/code/sibilant/src/core.sibilant:210:0 */\n\t  \n\t    var unquotes = findUnquotes(content);\n\t    return (function() {\n\t      if (typeof content === \"string\") {\n\t        return (\"\\\"\" + qescape(content) + \"\\\"\");\n\t      } else if (typeof content === \"number\") {\n\t        return sibilant.macros.namespaces.core.quote(content.toString());\n\t      } else if (node__QUERY(content, \"literal\", \"otherChar\")) {\n\t        return [ \"\\\"\", transpile(content), \"\\\"\" ];\n\t      } else if (Object.keys(unquotes).length) {\n\t        return replace__BANG(content, unquotes);\n\t      } else if (node__QUERY(content, \"expression\")) {\n\t        return [ \"\\\"\", mapNode(transpile(content), qescape), \"\\\"\" ];\n\t      } else if (node__QUERY(content, \"bracket\")) {\n\t        return sibilant.macros.namespaces.core.list.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n\t      } else if (node__QUERY(content, \"brace\")) {\n\t        return sibilant.macros.namespaces.core.hash.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n\t      } else {\n\t        console.log((\"unknown content\" + inspect(content)));\n\t        return content;\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.debug = (function sibilant$macros$namespaces$core$debug$(val) {\n\t    /* ^debug /Users/jbr/code/sibilant/src/core.sibilant:233:0 */\n\t  \n\t    sibilant.debug = eval(outputFormatter(transpile(val)));\n\t    return null;\n\t  });\n\t  sibilant.macros.namespaces.core.expandQuote = (function sibilant$macros$namespaces$core$expandQuote$(node, expansions) {\n\t    /* ^expand-quote /Users/jbr/code/sibilant/src/core.sibilant:236:0 */\n\t  \n\t    return transpile(mapNodeForQuoteExpansion((function() {\n\t      if (node__QUERY(node)) {\n\t        return node;\n\t      } else {\n\t        return sibilant.nodeCache[node];\n\t      }\n\t    }).call(this), expansions));\n\t  });\n\t  sibilant.macros.namespaces.core.list = (function sibilant$macros$namespaces$core$list$(args) {\n\t    /* ^list /Users/jbr/code/sibilant/src/core.sibilant:242:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var argSegments = [];\n\t    return (function() {\n\t      if (0 === args.length) {\n\t        return \"[]\";\n\t      } else {\n\t        var simpleList = (function simpleList$(args) {\n\t          /* simple-list /Users/jbr/code/sibilant/src/core.sibilant:246:12 */\n\t        \n\t          return [ \"[ \", interleave(\", \", map(args, (function(arg) {\n\t            /* /Users/jbr/code/sibilant/src/core.sibilant:247:50 */\n\t          \n\t            return arg.transpiled;\n\t          }))), \" ]\" ];\n\t        });\n\t        args.forEach((function(arg) {\n\t          /* /Users/jbr/code/sibilant/src/core.sibilant:249:27 */\n\t        \n\t          return (function() {\n\t            if (node__QUERY(arg, \"dots\")) {\n\t              return argSegments.push({ transpiled: transpile(arg) });\n\t            } else if (((argSegments.slice(-1)[0]) && typeof (argSegments.slice(-1)[0]) === \"object\" && (argSegments.slice(-1)[0]).constructor.name === \"Array\")) {\n\t              return argSegments.slice(-1)[0].push({ transpiled: transpile(arg) });\n\t            } else {\n\t              return argSegments.push([ { transpiled: transpile(arg) } ]);\n\t            }\n\t          }).call(this);\n\t        }));\n\t        argSegments = map(argSegments, (function(segment) {\n\t          /* /Users/jbr/code/sibilant/src/core.sibilant:255:38 */\n\t        \n\t          return (function() {\n\t            if (((segment) && typeof (segment) === \"object\" && (segment).constructor.name === \"Array\")) {\n\t              return simpleList(segment);\n\t            } else {\n\t              return segment.transpiled;\n\t            }\n\t          }).call(this);\n\t        }));\n\t        return (function() {\n\t          if (1 === argSegments.length) {\n\t            return argSegments[0];\n\t          } else {\n\t            return [ argSegments[0], \".concat(\", interleave(\", \", argSegments.slice(1)), \")\" ];\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.call = (function sibilant$macros$namespaces$core$call$(fnName, args) {\n\t    /* ^call /Users/jbr/code/sibilant/src/core.sibilant:265:0 */\n\t  \n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return (function() {\n\t      if (any__QUERY(args, (function() {\n\t        /* /Users/jbr/code/sibilant/src/core.sibilant:266:20 */\n\t      \n\t        return node__QUERY(arguments[0], \"dots\");\n\t      }))) {\n\t        return macros.apply(fnName, macros.list.apply(this, args));\n\t      } else {\n\t        return [ transpile(fnName), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.macros.namespaces.core.dots = (function sibilant$macros$namespaces$core$dots$(contents) {\n\t    /* ^dots /Users/jbr/code/sibilant/src/core.sibilant:271:0 */\n\t  \n\t    var contents = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return transpile(contents);\n\t  });\n\t  sibilant.macros.namespaces.core.include = (function sibilant$macros$namespaces$core$include$(files) {\n\t    /* ^include /Users/jbr/code/sibilant/src/core.sibilant:274:0 */\n\t  \n\t    var files = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    return interleave(files.map((function(file) {\n\t      /* /Users/jbr/code/sibilant/src/core.sibilant:276:17 */\n\t    \n\t      return sibilant.withDefaultSearchPath((function() {\n\t        /* /Users/jbr/code/sibilant/src/core.sibilant:278:20 */\n\t      \n\t        return sibilant.include(eval(outputFormatter(transpile(file))));\n\t      }));\n\t    })), \"\\n\");\n\t  });\n\t  sibilant.macros.namespaces.core.docs = (function sibilant$macros$namespaces$core$docs$(options) {\n\t    /* ^docs /Users/jbr/code/sibilant/src/core.sibilant:285:0 */\n\t  \n\t    var options = Array.prototype.slice.call(arguments, 0);\n\t  \n\t    var optionsString = undefined,\n\t        optionsHash = {  };\n\t    (function() {\n\t      if (1 === (options.length % 2)) {\n\t        return (function() {\n\t          if ((node__QUERY(options[0], \"string\") || typeof options[0] === \"string\")) {\n\t            return optionsString = options.shift();\n\t          } else if ((node__QUERY(options.slice(-1)[0], \"string\") || typeof options.slice(-1)[0] === \"string\")) {\n\t            return optionsString = options.pop();\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t    bulkMap(options, (function(key, value) {\n\t      /* /Users/jbr/code/sibilant/src/core.sibilant:296:23 */\n\t    \n\t      return optionsHash[outputFormatter(transpile(key))] = value;\n\t    }));\n\t    [ \"examples\", \"references\" ].forEach((function(listAttribute) {\n\t      /* /Users/jbr/code/sibilant/src/core.sibilant:299:5 */\n\t    \n\t      return (function() {\n\t        if ((optionsHash.hasOwnProperty(listAttribute) && node__QUERY(optionsHash[listAttribute], \"bracket\"))) {\n\t          return optionsHash[listAttribute] = optionsHash[listAttribute].contents;\n\t        }\n\t      }).call(this);\n\t    }));\n\t    (function() {\n\t      if (optionsHash.hasOwnProperty(\"example\")) {\n\t        (function() {\n\t          if (optionsHash.hasOwnProperty(\"examples\")) {\n\t            return error(\"please provide example OR examples, not both\");\n\t          }\n\t        }).call(this);\n\t        optionsHash.examples = [ optionsHash.example ];\n\t        return delete optionsHash.example;\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (optionsHash.hasOwnProperty(\"tags\")) {\n\t        return optionsHash.tags = eval(outputFormatter(transpile(sibilant.macros.namespaces.core.quote(optionsHash.tags))));\n\t      }\n\t    }).call(this);\n\t    (function() {\n\t      if (node__QUERY(optionsString, \"string\")) {\n\t        return optionsHash.docString = eval(outputFormatter(transpile(optionsString)));\n\t      } else if (typeof optionsString === \"string\") {\n\t        return optionsHash.docString = optionsString;\n\t      }\n\t    }).call(this);\n\t    sibilant.docs.lastDoc = optionsHash;\n\t    return null;\n\t  });\n\t  var node__QUERY = (function node__QUERY$(thing, types) {\n\t    /* node? /Users/jbr/code/sibilant/src/transpiler.sibilant:1:0 */\n\t  \n\t    var types = Array.prototype.slice.call(arguments, 1);\n\t  \n\t    return ((typeof thing !== \"undefined\" && thing !== null) && \"object\" === typeof thing && typeof thing.type === \"string\" && (0 === types.length || types.indexOf(thing.type) !== -1) && thing.hasOwnProperty(\"contents\"));\n\t  });\n\t  var emptyNode__QUERY = (function emptyNode__QUERY$(item) {\n\t    /* empty-node? /Users/jbr/code/sibilant/src/transpiler.sibilant:9:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(item)) {\n\t        return emptyNode__QUERY(item.contents);\n\t      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        return all__QUERY(item, emptyNode__QUERY);\n\t      } else if (typeof item === \"string\") {\n\t        return item.match((new RegExp(\"^\\\\s*$\", undefined)));\n\t      } else {\n\t        return (null === item || typeof item === \"undefined\" || false === item);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var compactNode = (function compactNode$(item) {\n\t    /* compact-node /Users/jbr/code/sibilant/src/transpiler.sibilant:17:0 */\n\t  \n\t    return (function() {\n\t      if (node__QUERY(item)) {\n\t        item.contents = compactNode(item.contents);\n\t        return (function() {\n\t          if ((item.contents && item.contents.length)) {\n\t            return item;\n\t          } else {\n\t            return null;\n\t          }\n\t        }).call(this);\n\t      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n\t        var compacted = compact(map(item, compactNode));\n\t        return (function() {\n\t          if ((compacted && compacted.length)) {\n\t            return compacted;\n\t          } else {\n\t            return null;\n\t          }\n\t        }).call(this);\n\t      } else {\n\t        return (function() {\n\t          if ((item === \"\" || item === false)) {\n\t            return null;\n\t          } else {\n\t            return item;\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  var recurseTranspile = (function recurseTranspile$(node) {\n\t    /* recurse-transpile /Users/jbr/code/sibilant/src/transpiler.sibilant:26:0 */\n\t  \n\t    return (function() {\n\t      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return map(node, recurseTranspile);\n\t      } else if (node__QUERY(node, \"output\")) {\n\t        return mergeInto(node, { contents: recurseTranspile(node.contents) });\n\t      } else if (node__QUERY(node)) {\n\t        return transpile(node);\n\t      } else {\n\t        return node;\n\t      }\n\t    }).call(this);\n\t  });\n\t  var transpile = (function transpile$(node, preprocessor) {\n\t    /* transpile /Users/jbr/code/sibilant/src/transpiler.sibilant:38:0 */\n\t  \n\t    (function() {\n\t      if (typeof node === \"string\") {\n\t        return node = {\n\t          type: \"js\",\n\t          token: node,\n\t          contents: []\n\t        };\n\t      } else if (typeof node === \"number\") {\n\t        return node = {\n\t          type: \"number\",\n\t          token: node.toString(),\n\t          contents: []\n\t        };\n\t      }\n\t    }).call(this);\n\t    return (function() {\n\t      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n\t        return node;\n\t      } else if ((typeof node !== \"undefined\" && node !== null)) {\n\t        var transpiler = (transpile[node.type] || transpile.default),\n\t            result = transpiler(node),\n\t            resultNode = recurseTranspile((function() {\n\t          if (node__QUERY(result)) {\n\t            return result;\n\t          } else {\n\t            return {\n\t              contents: result,\n\t              type: \"output\"\n\t            };\n\t          }\n\t        }).call(this));\n\t        (function() {\n\t          if (typeof resultNode === \"undefined\") {\n\t            console.log((\"\" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\" + prettify(node) + \"\"));\n\t            console.log(prettify(result));\n\t            console.log(prettify(transpile(result)));\n\t            throw (new Error((\"Encountered an undefined return from recursive transpile.\\n\" + \"Please report this bug at \" + \"https://github.com/jbr/sibilant/issues/new\")))\n\t          }\n\t        }).call(this);\n\t        resultNode.contents = compact(flatten(resultNode.contents));\n\t        resultNode.source = node;\n\t        (function() {\n\t          if (5 > sibilant.debug) {\n\t            return console.log(prettify(node), red(\"->\"), prettify(resultNode));\n\t          }\n\t        }).call(this);\n\t        return (function() {\n\t          if (emptyNode__QUERY(resultNode)) {\n\t            return undefined;\n\t          } else {\n\t            return resultNode;\n\t          }\n\t        }).call(this);\n\t      }\n\t    }).call(this);\n\t  });\n\t  sibilant.transpile = transpile;\n\t  var readerMacros = {  };\n\t  transpile.hat = (function transpile$hat$(node) {\n\t    /* transpile.hat /Users/jbr/code/sibilant/src/transpiler.sibilant:85:0 */\n\t  \n\t    var token = node.contents[0].token,\n\t        $_symbol6_$ = (function() {\n\t      if (token.match((new RegExp(\"\\/\", undefined)))) {\n\t        return token.split(\"/\");\n\t      } else {\n\t        return [ sibilant.macros.searchPath[0], token ];\n\t      }\n\t    }).call(this),\n\t        namespace = $_symbol6_$[0],\n\t        macro = $_symbol6_$[1],\n\t        $_symbol6_$ = undefined;\n\t    return sibilant.macros.namespaces.core.get.call(node, \"sibilant.macros.namespaces\", sibilant.macros.namespaces.core.quote(transpile.literal({ token: namespace })), sibilant.macros.namespaces.core.quote(transpile.literal({ token: macro })));\n\t  });\n\t  transpile.tick = (function transpile$tick$(node) {\n\t    /* transpile.tick /Users/jbr/code/sibilant/src/transpiler.sibilant:96:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.quote.apply(node, node.contents);\n\t  });\n\t  transpile.at = (function transpile$at$(node) {\n\t    /* transpile.at /Users/jbr/code/sibilant/src/transpiler.sibilant:99:0 */\n\t  \n\t    return transpile(node.contents[0]);\n\t  });\n\t  transpile.dots = (function transpile$dots$(node) {\n\t    /* transpile.dots /Users/jbr/code/sibilant/src/transpiler.sibilant:102:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.dots.apply(node, node.contents);\n\t  });\n\t  transpile.default = (function transpile$default$(node) {\n\t    /* transpile.default /Users/jbr/code/sibilant/src/transpiler.sibilant:105:0 */\n\t  \n\t    return node.token;\n\t  });\n\t  transpile.output = (function transpile$output$(node) {\n\t    /* transpile.output /Users/jbr/code/sibilant/src/transpiler.sibilant:108:0 */\n\t  \n\t    return node;\n\t  });\n\t  transpile.number = (function transpile$number$(node) {\n\t    /* transpile.number /Users/jbr/code/sibilant/src/transpiler.sibilant:111:0 */\n\t  \n\t    return parseFloat(node.token.replace((new RegExp(\",\", \"g\")), \"\")).toString();\n\t  });\n\t  transpile.root = (function transpile$root$(node) {\n\t    /* transpile.root /Users/jbr/code/sibilant/src/transpiler.sibilant:117:0 */\n\t  \n\t    return (function() {\n\t      if (1 === node.contents.length) {\n\t        return transpile(node.contents[0]);\n\t      } else {\n\t        return interleave(compact(map(node.contents, asStatement)), \"\\n\");\n\t      }\n\t    }).call(this);\n\t  });\n\t  transpile.expression = (function transpile$expression$(node, preprocessor) {\n\t    /* transpile.expression /Users/jbr/code/sibilant/src/transpiler.sibilant:126:0 */\n\t  \n\t    return (function() {\n\t      if (node.contents.length) {\n\t        var head = node.contents[0],\n\t            args = node.contents,\n\t            macro = sibilant.resolveMacro(\"call\");\n\t        (function() {\n\t          if (node__QUERY(head, \"string\")) {\n\t            return macro = sibilant.resolveMacro(\"concat\");\n\t          } else if (node__QUERY(head, \"dots\")) {\n\t            macro = sibilant.resolveMacro(\"send\");\n\t            return args = [ node.contents[1], head.contents[0] ].concat(node.contents.slice(2));\n\t          } else if (node__QUERY(head, \"literal\", \"otherChar\")) {\n\t            var resolvedMacro = sibilant.resolveMacro(outputFormatter(transpile(head)));\n\t            return (function() {\n\t              if (resolvedMacro) {\n\t                head.hint = \"macro\";\n\t                macro = resolvedMacro;\n\t                return args = node.contents.slice(1);\n\t              }\n\t            }).call(this);\n\t          }\n\t        }).call(this);\n\t        return macro.apply(node, args);\n\t      } else {\n\t        return \"null\";\n\t      }\n\t    }).call(this);\n\t  });\n\t  transpile.bracket = (function transpile$bracket$(node) {\n\t    /* transpile.bracket /Users/jbr/code/sibilant/src/transpiler.sibilant:152:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.list.apply(this, node.contents);\n\t  });\n\t  transpile.brace = (function transpile$brace$(node) {\n\t    /* transpile.brace /Users/jbr/code/sibilant/src/transpiler.sibilant:155:0 */\n\t  \n\t    return sibilant.macros.namespaces.core.hash.apply(this, node.contents);\n\t  });\n\t  transpile.literal = (function transpile$literal$(node) {\n\t    /* transpile.literal /Users/jbr/code/sibilant/src/transpiler.sibilant:157:0 */\n\t  \n\t    var string = node.token;\n\t    return inject(string.replace((new RegExp(\"\\\\*\", \"g\")), \"_\").replace((new RegExp(\"\\\\?$\", undefined)), \"__QUERY\").replace((new RegExp(\"!$\", undefined)), \"__BANG\"), string.match((new RegExp(\"-(.)\", \"g\"))), (function(returnString, match) {\n\t      /* /Users/jbr/code/sibilant/src/transpiler.sibilant:164:13 */\n\t    \n\t      return returnString.replace(match, match[1].toUpperCase());\n\t    }));\n\t  });\n\t  transpile.string = (function transpile$string$(node) {\n\t    /* transpile.string /Users/jbr/code/sibilant/src/transpiler.sibilant:168:0 */\n\t  \n\t    return node.token.split(\"\\n\").join(\"\\\\n\\\" +\\n\\\"\");\n\t  });\n\t  transpile.comment = (function transpile$comment$(node) {\n\t    /* transpile.comment /Users/jbr/code/sibilant/src/transpiler.sibilant:173:0 */\n\t  \n\t    return null;\n\t  });\n\t  var docs = sibilant.docs = {\n\t    definitions: [],\n\t    undocumented: {  }\n\t  };\n\t  docs.record = (function docs$record$(type, namespace, name, node) {\n\t    /* docs.record /Users/jbr/code/sibilant/src/docs.sibilant:4:0 */\n\t  \n\t    var doc = docs.lastDoc;\n\t    (function() {\n\t      if (typeof doc !== \"undefined\") {\n\t        delete sibilant.docs.undocumented[name];\n\t        return sibilant.docs.definitions.push(mergeInto(doc, {\n\t          name: name,\n\t          type: type,\n\t          namespace: namespace,\n\t          definition: node\n\t        }));\n\t      } else {\n\t        return sibilant.docs.undocumented[name] = true;\n\t      }\n\t    }).call(this);\n\t    return delete sibilant.docs.lastDoc;\n\t  });\n\t  docs.tags = (function docs$tags$() {\n\t    /* docs.tags /Users/jbr/code/sibilant/src/docs.sibilant:16:0 */\n\t  \n\t    var tags = flatten(pluck(docs.definitions, \"tags\")),\n\t        counts = {  };\n\t    tags.forEach((function(tag) {\n\t      /* /Users/jbr/code/sibilant/src/docs.sibilant:19:5 */\n\t    \n\t      return counts[tag] = ((counts[tag] || 0) + 1);\n\t    }));\n\t    return counts;\n\t  });\n\t  docs.text = (function docs$text$() {\n\t    /* docs.text /Users/jbr/code/sibilant/src/docs.sibilant:27:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* /Users/jbr/code/sibilant/src/docs.sibilant:29:15 */\n\t    \n\t      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n\t        if (definition.references) {\n\t          return (\"references:\\n  \" + (definition.references.map((function() {\n\t            /* /Users/jbr/code/sibilant/src/docs.sibilant:35:51 */\n\t          \n\t            return eval(outputFormatter(transpile(arguments[0])));\n\t          })).join(\"\\n  \") + \"\\n\"));\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + (function() {\n\t        if (definition.tags) {\n\t          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n\t        } else {\n\t          return \"\";\n\t        }\n\t      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n\t        /* /Users/jbr/code/sibilant/src/docs.sibilant:46:43 */\n\t      \n\t        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n\t      })).join(\"\\n\\n\") + \"\\n\\n\");\n\t    })).join(\"\");\n\t  });\n\t  docs.textNoColor = (function docs$textNoColor$() {\n\t    /* docs.text-no-color /Users/jbr/code/sibilant/src/docs.sibilant:53:0 */\n\t  \n\t    var stripAnsi = __webpack_require__(559);\n\t    return stripAnsi(docs.text());\n\t  });\n\t  docs.json = (function docs$json$() {\n\t    /* docs.json /Users/jbr/code/sibilant/src/docs.sibilant:57:0 */\n\t  \n\t    return JSON.stringify(docs.data());\n\t  });\n\t  docs.data = (function docs$data$() {\n\t    /* docs.data /Users/jbr/code/sibilant/src/docs.sibilant:60:0 */\n\t  \n\t    return docs.definitions.map((function(definition) {\n\t      /* /Users/jbr/code/sibilant/src/docs.sibilant:62:6 */\n\t    \n\t      return {\n\t        name: prettify(definition.name, false),\n\t        namespace: definition.namespace,\n\t        type: definition.type,\n\t        description: definition.docString,\n\t        references: (function() {\n\t          if (definition.references) {\n\t            return definition.references.map((function() {\n\t              /* /Users/jbr/code/sibilant/src/docs.sibilant:68:52 */\n\t            \n\t              return arguments[0].token.slice(1, -1);\n\t            }));\n\t          } else {\n\t            return [];\n\t          }\n\t        }).call(this),\n\t        arguments: definition.definition.contents[2].contents.map((function() {\n\t          /* /Users/jbr/code/sibilant/src/docs.sibilant:73:30 */\n\t        \n\t          return prettify(arguments[0], false);\n\t        })),\n\t        definition: prettify(definition.definition, false),\n\t        examples: (definition.examples || []).map((function() {\n\t          /* /Users/jbr/code/sibilant/src/docs.sibilant:76:29 */\n\t        \n\t          return {\n\t            javascript: outputFormatter(transpile(arguments[0])),\n\t            sibilant: prettify(arguments[0], false)\n\t          };\n\t        })),\n\t        tags: definition.tags\n\t      };\n\t    }));\n\t  });\n\t  var sibilize = (function sibilize$(input) {\n\t    /* sibilize /Users/jbr/code/sibilant/src/require-and-include.sibilant:1:0 */\n\t  \n\t    sibilant.initialize();\n\t    var result = outputFormatter(transpile(restructure(parse(input))));\n\t    return result;\n\t  });\n\t  var sourcemap = (function sourcemap$(input) {\n\t    /* sourcemap /Users/jbr/code/sibilant/src/require-and-include.sibilant:10:0 */\n\t  \n\t    sibilant.initialize();\n\t    return sourcemapper(transpile(restructure(parse(input))));\n\t  });\n\t  sibilant.sibilize = sibilize;\n\t  sibilant.version = (function sibilant$version$() {\n\t    /* sibilant.version /Users/jbr/code/sibilant/src/require-and-include.sibilant:16:0 */\n\t  \n\t    return sibilant.packageInfo().version;\n\t  });\n\t  sibilant.stripShebang = (function sibilant$stripShebang$(data) {\n\t    /* sibilant.strip-shebang /Users/jbr/code/sibilant/src/require-and-include.sibilant:19:0 */\n\t  \n\t    return data.replace((new RegExp(\"^#!.*\\\\n\", undefined)), \"\\n\");\n\t  });\n\t  sibilant.file = \"eval.sibilant\";\n\t  var withDirAndFile = (function withDirAndFile$(dir, file, fn) {\n\t    /* with-dir-and-file /Users/jbr/code/sibilant/src/require-and-include.sibilant:24:0 */\n\t  \n\t    var before = {\n\t      dir: sibilant.dir,\n\t      file: sibilant.file\n\t    };\n\t    sibilant.dir = dir;\n\t    sibilant.file = file;\n\t    var retval = fn();\n\t    sibilant.dir = before.dir;\n\t    sibilant.file = before.file;\n\t    return retval;\n\t  });\n\t  sibilant.sourceCache = {  };\n\t  sibilant.sibilizeFile = (function sibilant$sibilizeFile$(fileName) {\n\t    /* sibilant.sibilize-file /Users/jbr/code/sibilant/src/require-and-include.sibilant:41:0 */\n\t  \n\t    return outputFormatter(sibilant.transpileFile(fileName));\n\t  });\n\t  sibilant.sibilizeJson = (function sibilant$sibilizeJson$(fileName) {\n\t    /* sibilant.sibilize-json /Users/jbr/code/sibilant/src/require-and-include.sibilant:46:0 */\n\t  \n\t    sibilant.initialize();\n\t    var before = sibilant.quoteHashKeys;\n\t    sibilant.quoteHashKeys = true;\n\t    var content = sibilant.sibilizeFile(fileName);\n\t    sibilant.quoteHashKeys = before;\n\t    return content;\n\t  });\n\t  var package = {\n\t    name: \"sibilant\",\n\t    version: \"0.4.0\",\n\t    keywords: [ \"lisp\", \"javascript\", \"language\" ],\n\t    description: \"javascript with a lisp\",\n\t    contributors: [ \"Jacob Rothstein <hi@jbr.me> (http://jbr.me)\", \"Matthew Phillips (http://www.matthewphillips.info/)\", \"Yuest Wang (http://yue.st/)\", \"Lyndon Tremblay (http://www.hoovy.org)\", \"David Sargeant (https://github.com/dubiousdavid)\" ],\n\t    repository: {\n\t      type: \"git\",\n\t      url: \"http://github.com/jbr/sibilant.git\"\n\t    },\n\t    bugs: {\n\t      mail: \"sibilant@librelist.com\",\n\t      url: \"http://github.com/jbr/sibilant/issues\"\n\t    },\n\t    bin: { sibilant: \"./bin/sibilant\" },\n\t    main: \"./lib/sibilant.js\",\n\t    license: \"MIT\",\n\t    devDependencies: {\n\t      stool: \">=0.0.7\",\n\t      diff: \">=2.2.1\",\n\t      colors: \">=1.1.2\",\n\t      cardinal: \">=0.6.0\"\n\t    },\n\t    dependencies: {\n\t      \"source-map\": \">=0.5.3\",\n\t      \"source-map-support\": \">=0.3.3\"\n\t    },\n\t    scripts: { test: \"bin/sibilant -x stool.sibilant -- test\" }\n\t  };\n\t  sibilant.packageInfo = (function sibilant$packageInfo$() {\n\t    /* sibilant.package-info /Users/jbr/code/sibilant/src/browser.sibilant:25:6 */\n\t  \n\t    return package;\n\t  });\n\t  sibilant.versionString = (function sibilant$versionString$() {\n\t    /* sibilant.version-string /Users/jbr/code/sibilant/src/browser.sibilant:27:6 */\n\t  \n\t    return (package.name + \" browser version \" + package.version);\n\t  });\n\t  sibilant.dir = \"browser\";\n\t  sibilant.initialize = (function sibilant$initialize$() {\n\t    /* sibilant.initialize /Users/jbr/code/sibilant/src/browser.sibilant:32:6 */\n\t  \n\t    return false;\n\t  });\n\t  var evalCode = (function evalCode$(js) {\n\t    /* eval-code /Users/jbr/code/sibilant/src/browser.sibilant:33:13 */\n\t  \n\t    return (new Function(js))();\n\t  });\n\t  sibilant.include = (function sibilant$include$(url) {\n\t    /* sibilant.include /Users/jbr/code/sibilant/src/browser.sibilant:36:6 */\n\t  \n\t    return $.get(url).done((function() {\n\t      /* /Users/jbr/code/sibilant/src/browser.sibilant:37:32 */\n\t    \n\t      return evalCode(sibilize(arguments[0]));\n\t    }));\n\t  });\n\t  (function() {\n\t    if (typeof $ === \"function\") {\n\t      return $((function() {\n\t        /* /Users/jbr/code/sibilant/src/browser.sibilant:40:15 */\n\t      \n\t        return map($.makeArray($(\"script[type=\\\"application/sibilant\\\"][src]\").map((function() {\n\t          /* /Users/jbr/code/sibilant/src/browser.sibilant:43:26 */\n\t        \n\t          return this.src;\n\t        }))), sibilant.include);\n\t      }));\n\t    }\n\t  }).call(this);\n\t  return sibilant;\n\t}).call(this);\n\n/***/ },\n\n/***/ 559:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ansiRegex = __webpack_require__(560)();\n\t\n\tmodule.exports = function (str) {\n\t\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n\t};\n\n\n/***/ },\n\n/***/ 560:\n/***/ function(module, exports) {\n\n\t'use strict';\n\tmodule.exports = function () {\n\t\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n\t};\n\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** worker.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 967dcac8ae31b0ccde69\n **/","(var commands {}\n     {sibilant} (require \"sibilant/lib/browser\"))\n\n(def commands.sibilize (sibilant-code)\n     (sibilant.sibilize sibilant-code))\n\n(def on-message (e)\n     (var [ identifier command data ] e.data\n          command-fn (get commands command)\n          return-value { })\n\n     (try (set return-value 'result (apply command-fn data))\n          (set return-value 'error e.message))\n                  \n     (post-message [ identifier return-value ]))\n\n(assign onmessage on-message)\n          \n\n\n\n/** WEBPACK FOOTER **\n ** ./worker.sibilant\n **/","null\n\n\n/** WEBPACK FOOTER **\n ** ../sibilant/include/macros.sibilant\n **/","//# sourceMappingURL=../maps/browser.map\n;\nthis.sibilant = (function() {\n  /* /Users/jbr/code/sibilant/src/browser.sibilant:4:5 */\n\n  var sibilant = {  },\n      exports = sibilant;\n  var error = (function error$(str) {\n    /* error /Users/jbr/code/sibilant/src/browser.sibilant:6:6 */\n  \n    throw str\n  });\n  var inspect = (function inspect$(item) {\n    /* inspect /Users/jbr/code/sibilant/src/browser.sibilant:7:6 */\n  \n    return (function() {\n      if (item.toSource) {\n        return item.toSource();\n      } else {\n        return item.toString();\n      }\n    }).call(this);\n  });\n  var bulkMap = (function bulkMap$(arr, fn) {\n    /* bulk-map /Users/jbr/code/sibilant/include/functional.sibilant:1:0 */\n  \n    var index = 0,\n        groupSize = fn.length,\n        retArr = [];\n    (function() {\n      var $_symbol1_$ = undefined;\n      while (index < arr.length) {\n        $_symbol1_$ = (function() {\n          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n          return index += groupSize;\n        }).call(this);\n      };\n      return $_symbol1_$;\n    }).call(this);\n    return retArr;\n  });\n  var inject = (function inject$(start, items, fn) {\n    /* inject /Users/jbr/code/sibilant/include/functional.sibilant:13:0 */\n  \n    var value = start;\n    (function() {\n      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n        return items.forEach((function(item, index) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:16:4 */\n        \n          return value = fn(value, item, index);\n        }));\n      }\n    }).call(this);\n    return value;\n  });\n  var map = (function map$(items, fn) {\n    /* map /Users/jbr/code/sibilant/include/functional.sibilant:20:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:22:10 */\n    \n      collector.push(fn(item, index));\n      return collector;\n    }));\n  });\n  var select = (function select$(items, fn) {\n    /* select /Users/jbr/code/sibilant/include/functional.sibilant:26:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:28:10 */\n    \n      (function() {\n        if (fn(item, index)) {\n          return collector.push(item);\n        }\n      }).call(this);\n      return collector;\n    }));\n  });\n  var detect = (function detect$(items, fn) {\n    /* detect /Users/jbr/code/sibilant/include/functional.sibilant:33:0 */\n  \n    var returnItem = undefined,\n        index = 0,\n        items = (items || []);\n    (function() {\n      var $_symbol2_$ = undefined;\n      while (!((items.length === index || returnItem))) {\n        $_symbol2_$ = (function() {\n          (function() {\n            if (fn(items[index], index)) {\n              return returnItem = items[index];\n            }\n          }).call(this);\n          return ((index)++);\n        }).call(this);\n      };\n      return $_symbol2_$;\n    }).call(this);\n    return returnItem;\n  });\n  var all__QUERY = (function all__QUERY$(items, fn) {\n    /* all? /Users/jbr/code/sibilant/include/functional.sibilant:45:0 */\n  \n    return typeof detect(items, (function(item, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:46:31 */\n    \n      return !(fn(item, index));\n    })) === \"undefined\";\n  });\n  var none__QUERY = (function none__QUERY$(items, fn) {\n    /* none? /Users/jbr/code/sibilant/include/functional.sibilant:48:0 */\n  \n    return typeof detect(items, fn) === \"undefined\";\n  });\n  var any__QUERY = (function any__QUERY$(items, fn) {\n    /* any? /Users/jbr/code/sibilant/include/functional.sibilant:51:0 */\n  \n    return typeof detect(items, fn) !== \"undefined\";\n  });\n  var reject = (function reject$(items, fn) {\n    /* reject /Users/jbr/code/sibilant/include/functional.sibilant:54:0 */\n  \n    var args = [ items, fn ];\n    return select(items, (function() {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:56:16 */\n    \n      return !(fn.apply(this, arguments));\n    }));\n  });\n  var compact = (function compact$(arr) {\n    /* compact /Users/jbr/code/sibilant/include/functional.sibilant:58:0 */\n  \n    return select(arr, (function(item) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:59:17 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var interleave = (function interleave$(glue, arr) {\n    /* interleave /Users/jbr/code/sibilant/include/functional.sibilant:65:0 */\n  \n    (function() {\n      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n        var temp = glue;\n        glue = arr;\n        return arr = temp;\n      }\n    }).call(this);\n    return (function() {\n      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n        return inject([], arr, (function(collector, item, index) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:71:13 */\n        \n          return collector.concat([ item, glue[index] ]);\n        }));\n      } else {\n        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:75:13 */\n        \n          return collector.concat([ glue, item ]);\n        }));\n      }\n    }).call(this);\n  });\n  var flatten = (function flatten$(items) {\n    /* flatten /Users/jbr/code/sibilant/include/functional.sibilant:78:0 */\n  \n    var items = Array.prototype.slice.call(arguments, 0);\n  \n    return inject([], items, (function(collector, item) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:80:10 */\n    \n      return collector.concat((function() {\n        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n          return flatten.apply(this, item);\n        } else {\n          return item;\n        }\n      }).call(this));\n    }));\n  });\n  var recurseMap = (function recurseMap$(item, fn) {\n    /* recurse-map /Users/jbr/code/sibilant/include/functional.sibilant:87:0 */\n  \n    return (function() {\n      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        return map(item, (function(subitem) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:88:32 */\n        \n          return recurseMap(subitem, fn);\n        }));\n      } else {\n        return fn(item);\n      }\n    }).call(this);\n  });\n  var pluck = (function pluck$(items, attribute) {\n    /* pluck /Users/jbr/code/sibilant/include/functional.sibilant:91:0 */\n  \n    return map(items, (function(item) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:92:16 */\n    \n      return item[attribute];\n    }));\n  });\n  var mergeInto = (function mergeInto$(into, from) {\n    /* merge-into /Users/jbr/code/sibilant/include/functional.sibilant:94:0 */\n  \n    Object.keys(from).forEach((function(key) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:95:5 */\n    \n      return into[key] = from[key];\n    }));\n    return into;\n  });\n  var clone = (function clone$(object) {\n    /* clone /Users/jbr/code/sibilant/include/functional.sibilant:98:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:100:13 */\n    \n      collector[key] = object[key];\n      return collector;\n    }));\n  });\n  var mapValues = (function mapValues$(object, fn) {\n    /* map-values /Users/jbr/code/sibilant/include/functional.sibilant:104:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:106:13 */\n    \n      collector[key] = fn(object[key], key);\n      return collector;\n    }));\n  });\n  var mergeWith = (function mergeWith$(into, from) {\n    /* merge-with /Users/jbr/code/sibilant/include/functional.sibilant:110:0 */\n  \n    return mergeInto(clone(into), from);\n  });\n  var log__BANG = (function log__BANG$(args) {\n    /* log! /Users/jbr/code/sibilant/src/colors.sibilant:1:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return inspect__BANG.apply(this, args).forEach((function() {\n      /* /Users/jbr/code/sibilant/src/colors.sibilant:2:35 */\n    \n      return console.log(arguments[0]);\n    }));\n  });\n  var inspect__BANG = (function inspect__BANG$(args) {\n    /* inspect! /Users/jbr/code/sibilant/src/colors.sibilant:4:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return args.map((function() {\n      /* /Users/jbr/code/sibilant/src/colors.sibilant:5:15 */\n    \n      return util.inspect(arguments[0], {\n        colors: false,\n        depth: 3\n      });\n    }));\n  });\n  var color = (function color$(code, items, depth) {\n    /* color /Users/jbr/code/sibilant/src/colors.sibilant:7:0 */\n  \n    return (code + items.join(\"\") + \"\\033[0m\");\n  });\n  var black = (function black$(args) {\n    /* black /Users/jbr/code/sibilant/src/colors.sibilant:10:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;30m\", args);\n  });\n  var red = (function red$(args) {\n    /* red /Users/jbr/code/sibilant/src/colors.sibilant:11:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;31m\", args);\n  });\n  var green = (function green$(args) {\n    /* green /Users/jbr/code/sibilant/src/colors.sibilant:12:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;32m\", args);\n  });\n  var brown = (function brown$(args) {\n    /* brown /Users/jbr/code/sibilant/src/colors.sibilant:13:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;33m\", args);\n  });\n  var blue = (function blue$(args) {\n    /* blue /Users/jbr/code/sibilant/src/colors.sibilant:14:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;34m\", args);\n  });\n  var purple = (function purple$(args) {\n    /* purple /Users/jbr/code/sibilant/src/colors.sibilant:15:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;35m\", args);\n  });\n  var cyan = (function cyan$(args) {\n    /* cyan /Users/jbr/code/sibilant/src/colors.sibilant:16:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;36m\", args);\n  });\n  var gray = (function gray$(args) {\n    /* gray /Users/jbr/code/sibilant/src/colors.sibilant:17:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[0;37m\", args);\n  });\n  var boldGray = (function boldGray$(args) {\n    /* bold-gray /Users/jbr/code/sibilant/src/colors.sibilant:18:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;30m\", args);\n  });\n  var boldRed = (function boldRed$(args) {\n    /* bold-red /Users/jbr/code/sibilant/src/colors.sibilant:19:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;31m\", args);\n  });\n  var boldGreen = (function boldGreen$(args) {\n    /* bold-green /Users/jbr/code/sibilant/src/colors.sibilant:20:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;32m\", args);\n  });\n  var yellow = (function yellow$(args) {\n    /* yellow /Users/jbr/code/sibilant/src/colors.sibilant:21:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;33m\", args);\n  });\n  var boldBlue = (function boldBlue$(args) {\n    /* bold-blue /Users/jbr/code/sibilant/src/colors.sibilant:22:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;34m\", args);\n  });\n  var boldPurple = (function boldPurple$(args) {\n    /* bold-purple /Users/jbr/code/sibilant/src/colors.sibilant:23:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;35m\", args);\n  });\n  var boldCyan = (function boldCyan$(args) {\n    /* bold-cyan /Users/jbr/code/sibilant/src/colors.sibilant:24:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;36m\", args);\n  });\n  var white = (function white$(args) {\n    /* white /Users/jbr/code/sibilant/src/colors.sibilant:25:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return color(\"\\033[1;37m\", args);\n  });\n  sibilant.prettyPrint = (function sibilant$prettyPrint$(node, color, entry) {\n    /* sibilant.pretty-print /Users/jbr/code/sibilant/src/pretty-printer.sibilant:3:0 */\n  \n    entry = (typeof entry !== \"undefined\") ? entry : true;\n    color = (typeof color !== \"undefined\") ? color : true;\n    return realNewlines((function() {\n      if (node__QUERY(node)) {\n        var prettyPrinter = (sibilant.prettyPrint[node.type] || sibilant.prettyPrint.default);\n        return prettyPrinter(node, color, entry);\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return ((function() {\n          if (color) {\n            return black(\"[\");\n          } else {\n            return \"\";\n          }\n        }).call(this) + map(node, (function() {\n          /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:14:28 */\n        \n          return prettify(arguments[0], color, false);\n        })).join((function() {\n          if (color) {\n            return black(\",\");\n          } else {\n            return \"\";\n          }\n        }).call(this)) + (function() {\n          if (color) {\n            return black(\"]\");\n          } else {\n            return \"\";\n          }\n        }).call(this));\n      } else if (color) {\n        return red(inspect(node));\n      } else {\n        return realNewlines(inspect(node));\n      }\n    }).call(this));\n  });\n  var prettify = sibilant.prettyPrint;\n  sibilant.prettyPrint.default = (function sibilant$prettyPrint$default$(node, color, entry) {\n    /* sibilant.pretty-print.default /Users/jbr/code/sibilant/src/pretty-printer.sibilant:23:0 */\n  \n    var mapPretty = (function mapPretty$(attr) {\n      /* map-pretty /Users/jbr/code/sibilant/src/pretty-printer.sibilant:24:5 */\n    \n      var arr = node[attr];\n      return (function() {\n        if ((arr && arr.length)) {\n          return map(arr, (function() {\n            /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:27:27 */\n          \n            return prettify(arguments[0], color, false);\n          })).join(\"\");\n        } else {\n          return \"\";\n        }\n      }).call(this);\n    });\n    return realNewlines(sibilant.prettyPrint.colorize(node, color, ((function() {\n      if (entry) {\n        return \"\";\n      } else {\n        return mapPretty(\"precedingIgnored\");\n      }\n    }).call(this) + mapPretty(\"modifiers\") + node.token + mapPretty(\"contents\") + mapPretty(\"closingIgnored\") + ((node.closed && acceptablePairs[node.token]) || \"\"))));\n  });\n  sibilant.prettyPrint.root = (function sibilant$prettyPrint$root$(node, color, entry) {\n    /* sibilant.pretty-print.root /Users/jbr/code/sibilant/src/pretty-printer.sibilant:39:0 */\n  \n    return map(node.contents, (function() {\n      /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:41:16 */\n    \n      return prettify(arguments[0], color, false);\n    })).join(\"\\n\");\n  });\n  sibilant.prettyPrint.output = (function sibilant$prettyPrint$output$(node, color) {\n    /* sibilant.pretty-print.output /Users/jbr/code/sibilant/src/pretty-printer.sibilant:44:0 */\n  \n    return ((function() {\n      if (color) {\n        return black(\"{\");\n      } else {\n        return \"\";\n      }\n    }).call(this) + (function() {\n      if (((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\")) {\n        return map(node.contents, (function() {\n          /* /Users/jbr/code/sibilant/src/pretty-printer.sibilant:48:28 */\n        \n          return sibilant.prettyPrint.colorize(node, color, prettify(arguments[0], color, false));\n        })).join((function() {\n          if (color) {\n            return black(\",\");\n          } else {\n            return \"\";\n          }\n        }).call(this));\n      } else {\n        return sibilant.prettyPrint.colorize(node, color, node.contents);\n      }\n    }).call(this) + (function() {\n      if (color) {\n        return black(\"}\");\n      } else {\n        return \"\";\n      }\n    }).call(this));\n  });\n  var realNewlines = (function realNewlines$(node) {\n    /* real-newlines /Users/jbr/code/sibilant/src/pretty-printer.sibilant:54:0 */\n  \n    return node.split(\"\\\\n\").join(\"\\n\");\n  });\n  sibilant.prettyPrint.colorize = (function sibilant$prettyPrint$colorize$(node, color, string) {\n    /* sibilant.pretty-print.colorize /Users/jbr/code/sibilant/src/pretty-printer.sibilant:59:0 */\n  \n    return (function() {\n      if (!(color)) {\n        return string;\n      } else if (node.hint === \"macro\") {\n        return yellow(string);\n      } else if (node__QUERY(node, \"output\")) {\n        return purple(string);\n      } else {\n        return green(string);\n      }\n    }).call(this);\n  });\n  var outputFormatter = (function outputFormatter$(node) {\n    /* output-formatter /Users/jbr/code/sibilant/src/output-formatter.sibilant:1:0 */\n  \n    return (function() {\n      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, outputFormatter).join(\"\");\n      } else if (node__QUERY(node, \"output\")) {\n        return outputFormatter(node.contents);\n      } else if ((typeof node === \"string\" || typeof node === \"number\")) {\n        return node;\n      } else if (!((typeof node !== \"undefined\" && node !== null))) {\n        return \"\";\n      } else if (node__QUERY(node)) {\n        console.log(\"WE SHOULD NOT BE HERE\");\n        console.log(\"node\");\n        console.log(prettify(node));\n        return outputFormatter(transpile(node));\n      }\n    }).call(this);\n  });\n  sibilant.outputFormatter = outputFormatter;\n  var bulkMap = (function bulkMap$(arr, fn) {\n    /* bulk-map /Users/jbr/code/sibilant/include/functional.sibilant:1:0 */\n  \n    var index = 0,\n        groupSize = fn.length,\n        retArr = [];\n    (function() {\n      var $_symbol3_$ = undefined;\n      while (index < arr.length) {\n        $_symbol3_$ = (function() {\n          retArr.push(fn.apply(this, arr.slice(index, (index + groupSize))));\n          return index += groupSize;\n        }).call(this);\n      };\n      return $_symbol3_$;\n    }).call(this);\n    return retArr;\n  });\n  var inject = (function inject$(start, items, fn) {\n    /* inject /Users/jbr/code/sibilant/include/functional.sibilant:13:0 */\n  \n    var value = start;\n    (function() {\n      if (((items) && typeof (items) === \"object\" && (items).constructor.name === \"Array\")) {\n        return items.forEach((function(item, index) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:16:4 */\n        \n          return value = fn(value, item, index);\n        }));\n      }\n    }).call(this);\n    return value;\n  });\n  var map = (function map$(items, fn) {\n    /* map /Users/jbr/code/sibilant/include/functional.sibilant:20:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:22:10 */\n    \n      collector.push(fn(item, index));\n      return collector;\n    }));\n  });\n  var select = (function select$(items, fn) {\n    /* select /Users/jbr/code/sibilant/include/functional.sibilant:26:0 */\n  \n    return inject([], items, (function(collector, item, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:28:10 */\n    \n      (function() {\n        if (fn(item, index)) {\n          return collector.push(item);\n        }\n      }).call(this);\n      return collector;\n    }));\n  });\n  var detect = (function detect$(items, fn) {\n    /* detect /Users/jbr/code/sibilant/include/functional.sibilant:33:0 */\n  \n    var returnItem = undefined,\n        index = 0,\n        items = (items || []);\n    (function() {\n      var $_symbol4_$ = undefined;\n      while (!((items.length === index || returnItem))) {\n        $_symbol4_$ = (function() {\n          (function() {\n            if (fn(items[index], index)) {\n              return returnItem = items[index];\n            }\n          }).call(this);\n          return ((index)++);\n        }).call(this);\n      };\n      return $_symbol4_$;\n    }).call(this);\n    return returnItem;\n  });\n  var all__QUERY = (function all__QUERY$(items, fn) {\n    /* all? /Users/jbr/code/sibilant/include/functional.sibilant:45:0 */\n  \n    return typeof detect(items, (function(item, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:46:31 */\n    \n      return !(fn(item, index));\n    })) === \"undefined\";\n  });\n  var none__QUERY = (function none__QUERY$(items, fn) {\n    /* none? /Users/jbr/code/sibilant/include/functional.sibilant:48:0 */\n  \n    return typeof detect(items, fn) === \"undefined\";\n  });\n  var any__QUERY = (function any__QUERY$(items, fn) {\n    /* any? /Users/jbr/code/sibilant/include/functional.sibilant:51:0 */\n  \n    return typeof detect(items, fn) !== \"undefined\";\n  });\n  var reject = (function reject$(items, fn) {\n    /* reject /Users/jbr/code/sibilant/include/functional.sibilant:54:0 */\n  \n    var args = [ items, fn ];\n    return select(items, (function() {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:56:16 */\n    \n      return !(fn.apply(this, arguments));\n    }));\n  });\n  var compact = (function compact$(arr) {\n    /* compact /Users/jbr/code/sibilant/include/functional.sibilant:58:0 */\n  \n    return select(arr, (function(item) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:59:17 */\n    \n      return (null !== item && false !== item && typeof item !== \"undefined\");\n    }));\n  });\n  var interleave = (function interleave$(glue, arr) {\n    /* interleave /Users/jbr/code/sibilant/include/functional.sibilant:65:0 */\n  \n    (function() {\n      if ((typeof arr === \"string\" && ((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\"))) {\n        var temp = glue;\n        glue = arr;\n        return arr = temp;\n      }\n    }).call(this);\n    return (function() {\n      if (((glue) && typeof (glue) === \"object\" && (glue).constructor.name === \"Array\")) {\n        return inject([], arr, (function(collector, item, index) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:71:13 */\n        \n          return collector.concat([ item, glue[index] ]);\n        }));\n      } else {\n        return inject([ arr[0] ], arr.slice(1), (function(collector, item, index) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:75:13 */\n        \n          return collector.concat([ glue, item ]);\n        }));\n      }\n    }).call(this);\n  });\n  var flatten = (function flatten$(items) {\n    /* flatten /Users/jbr/code/sibilant/include/functional.sibilant:78:0 */\n  \n    var items = Array.prototype.slice.call(arguments, 0);\n  \n    return inject([], items, (function(collector, item) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:80:10 */\n    \n      return collector.concat((function() {\n        if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n          return flatten.apply(this, item);\n        } else {\n          return item;\n        }\n      }).call(this));\n    }));\n  });\n  var recurseMap = (function recurseMap$(item, fn) {\n    /* recurse-map /Users/jbr/code/sibilant/include/functional.sibilant:87:0 */\n  \n    return (function() {\n      if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        return map(item, (function(subitem) {\n          /* /Users/jbr/code/sibilant/include/functional.sibilant:88:32 */\n        \n          return recurseMap(subitem, fn);\n        }));\n      } else {\n        return fn(item);\n      }\n    }).call(this);\n  });\n  var pluck = (function pluck$(items, attribute) {\n    /* pluck /Users/jbr/code/sibilant/include/functional.sibilant:91:0 */\n  \n    return map(items, (function(item) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:92:16 */\n    \n      return item[attribute];\n    }));\n  });\n  var mergeInto = (function mergeInto$(into, from) {\n    /* merge-into /Users/jbr/code/sibilant/include/functional.sibilant:94:0 */\n  \n    Object.keys(from).forEach((function(key) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:95:5 */\n    \n      return into[key] = from[key];\n    }));\n    return into;\n  });\n  var clone = (function clone$(object) {\n    /* clone /Users/jbr/code/sibilant/include/functional.sibilant:98:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:100:13 */\n    \n      collector[key] = object[key];\n      return collector;\n    }));\n  });\n  var mapValues = (function mapValues$(object, fn) {\n    /* map-values /Users/jbr/code/sibilant/include/functional.sibilant:104:0 */\n  \n    return inject({  }, Object.keys(object), (function(collector, key, index) {\n      /* /Users/jbr/code/sibilant/include/functional.sibilant:106:13 */\n    \n      collector[key] = fn(object[key], key);\n      return collector;\n    }));\n  });\n  var mergeWith = (function mergeWith$(into, from) {\n    /* merge-with /Users/jbr/code/sibilant/include/functional.sibilant:110:0 */\n  \n    return mergeInto(clone(into), from);\n  });\n  var parser = {  };\n  sibilant.parser = parser;\n  parser.tokens = {\n    \"regex\": \"(\\\\/(\\\\\\\\\\\\\\/|[^\\\\/\\\\n])+\\\\/[glim]*)\",\n    \"comment\": \"(;.*)\",\n    \"string\": \"(\\\"(([^\\\"]|(\\\\\\\\\\\"))*[^\\\\\\\\])?\\\")\",\n    \"number\": \"(-?[0-9][0-9.,]*)\",\n    \"literal\": \"(-?[*.$a-zA-Z_][/*.a-zA-Z0-9-_]*(\\\\?|!)?)\",\n    \"special\": \"([&'])\",\n    \"at\": \"@\",\n    \"tick\": \"[`']\",\n    \"hat\": \"(\\\\^)\",\n    \"dots\": \"(\\\\.+)\",\n    \"argPlaceholder\": \"(#[0-9]+)\",\n    \"otherChar\": \"([\\\\|#><=!\\\\+\\\\/\\\\*-]+)\",\n    \"openExpression\": \"(\\\\(|\\\\{|\\\\[)\",\n    \"closeExpression\": \"(\\\\)|\\\\}|\\\\])\",\n    \"newline\": \"\\\\n\",\n    \"whitespace\": \"\\\\s+\",\n    \"ignored\": \".\"\n  };\n  parser.tokenPrecedence = [ \"regex\", \"comment\", \"string\", \"number\", \"dots\", \"tick\", \"hat\", \"at\", \"special\", \"literal\", \"argPlaceholder\", \"otherChar\", \"openExpression\", \"closeExpression\", \"newline\", \"whitespace\", \"ignored\" ];\n  parser.orderedRegexes = parser.tokenPrecedence.map((function(x) {\n    /* /Users/jbr/code/sibilant/src/parser.sibilant:41:23 */\n  \n    return mergeInto((new RegExp((\"^\" + parser.tokens[x]), undefined)), { name: x });\n  }));\n  var orderedRegexes = parser.orderedRegexes;\n  parser.parse = (function parser$parse$(string, context) {\n    /* parser.parse /Users/jbr/code/sibilant/src/parser.sibilant:46:0 */\n  \n    context = (typeof context !== \"undefined\") ? context : {\n      position: 0,\n      stack: [],\n      line: 1,\n      lastNewline: 0,\n      col: 0\n    };\n    var match = true,\n        regexName = null,\n        remainingInput = string;\n    (function() {\n      var $_symbol5_$ = undefined;\n      while (match) {\n        $_symbol5_$ = (function() {\n          detect(orderedRegexes, (function(r) {\n            /* /Users/jbr/code/sibilant/src/parser.sibilant:57:20 */\n          \n            regexName = r.name;\n            return match = r.exec(remainingInput);\n          }));\n          return (function() {\n            if ((typeof match !== \"undefined\" && match !== null)) {\n              var matchString = match[0],\n                  length = matchString.length;\n              context.stack.push({\n                dir: sibilant.dir,\n                file: sibilant.file,\n                token: matchString,\n                type: regexName,\n                start: context.position,\n                line: context.line,\n                col: context.col,\n                length: length,\n                contents: []\n              });\n              (function() {\n                if (\"newline\" === regexName) {\n                  ((context.line)++);\n                  context.col = 0;\n                  return context.lastNewline = context.position;\n                } else if ((\"string\" === regexName && matchString.indexOf(\"\\n\") !== -1)) {\n                  var stringNewlineCount = (matchString.split(\"\\n\").length - 1);\n                  context.line += stringNewlineCount;\n                  return context.col = (length - matchString.lastIndexOf(\"\\n\"));\n                } else {\n                  return context.col += length;\n                }\n              }).call(this);\n              context.position += length;\n              return remainingInput = (function() {\n                if (remainingInput.length) {\n                  return remainingInput.slice(length);\n                } else {\n                  return \"\";\n                }\n              }).call(this);\n            }\n          }).call(this);\n        }).call(this);\n      };\n      return $_symbol5_$;\n    }).call(this);\n    return context.stack;\n  });\n  var parse = parser.parse;\n  var restructurers = {  },\n      acceptablePairs = {\n    \"(\": \")\",\n    \"[\": \"]\",\n    \"{\": \"}\"\n  },\n      bracketTypes = {\n    \"(\": \"expression\",\n    \"[\": \"bracket\",\n    \"{\": \"brace\"\n  };\n  var restructure = (function restructure$(input) {\n    /* restructure /Users/jbr/code/sibilant/src/restructurer.sibilant:7:0 */\n  \n    var output = {\n      type: \"root\",\n      contents: [],\n      file: sibilant.file,\n      col: 0,\n      line: 1\n    },\n        context = {\n      parseStack: [ output ],\n      output: output,\n      input: input,\n      ignoredTokens: [],\n      specials: 0\n    };\n    inject(context, input, (function(context, token, index) {\n      /* /Users/jbr/code/sibilant/src/restructurer.sibilant:20:13 */\n    \n      var restructurer = (restructurers[token.type] || restructurers.default);\n      return restructurer(token, context, index);\n    }));\n    (function() {\n      if (!(1 === context.parseStack.length)) {\n        var unclosedNode = context.parseStack[0];\n        throw (new Error((\"unclosed node at \" + unclosedNode.file + \":\" + unclosedNode.line + \":\" + unclosedNode.col + \"\\n  \" + prettify(unclosedNode, false).slice(0, 100))))\n      }\n    }).call(this);\n    return output;\n  });\n  sibilant.restructure = restructure;\n  restructurers.openExpression = (function restructurers$openExpression$(token, context) {\n    /* restructurers.open-expression /Users/jbr/code/sibilant/src/restructurer.sibilant:35:0 */\n  \n    var first = context.parseStack[0];\n    token.contents = [];\n    token.type = bracketTypes[token.token];\n    acceptIgnoredTokens(token, context);\n    acceptSpecials(token, context);\n    first.contents.push(token);\n    context.parseStack.unshift(token);\n    return context;\n  });\n  restructurers.closeExpression = (function restructurers$closeExpression$(node, context, index) {\n    /* restructurers.close-expression /Users/jbr/code/sibilant/src/restructurer.sibilant:47:0 */\n  \n    var first = context.parseStack[0];\n    (function() {\n      if (node__QUERY(first, \"root\")) {\n        throw (new Error((\"unexpected \" + node.token + \" on \" + node.file + \":\" + node.line + \":\" + node.col)))\n      }\n    }).call(this);\n    (function() {\n      if (acceptablePairs[first.token] !== node.token) {\n        throw (new Error((\"trying to close \" + yellow(sibilant.prettyPrint(first)) + \"\\n   on \" + first.file + \":\" + first.line + \":\" + first.col + \"\\n   with \" + sibilant.prettyPrint(node) + \"\\n   on \" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\")))\n      }\n    }).call(this);\n    first.end = node.end;\n    first.closed = true;\n    first.closingIgnored = context.ignoredTokens;\n    context.ignoredTokens = [];\n    context.parseStack.shift();\n    closeSpecials(first, context);\n    (function() {\n      if (context.parseStack.length === 0) {\n        throw (new Error((\"unbalanced parens:\\n\" + inspect(parseStack))))\n      }\n    }).call(this);\n    return context;\n  });\n  var openSpecial = (function openSpecial$(node, context) {\n    /* open-special /Users/jbr/code/sibilant/src/restructurer.sibilant:72:0 */\n  \n    ((context.specials)++);\n    acceptIgnoredTokens(node, context);\n    var first = context.parseStack[0];\n    node.contents = [];\n    first.contents.push(node);\n    context.parseStack.unshift(node);\n    return context;\n  });\n  var acceptSpecials = (function acceptSpecials$(node, context) {\n    /* accept-specials /Users/jbr/code/sibilant/src/restructurer.sibilant:85:0 */\n  \n    node.specials = context.specials;\n    context.specials = 0;\n    return context;\n  });\n  var acceptIgnoredTokens = (function acceptIgnoredTokens$(node, context) {\n    /* accept-ignored-tokens /Users/jbr/code/sibilant/src/restructurer.sibilant:90:0 */\n  \n    node.precedingIgnored = context.ignoredTokens;\n    context.ignoredTokens = [];\n    return context;\n  });\n  var closeSpecials = (function closeSpecials$(node, context) {\n    /* close-specials /Users/jbr/code/sibilant/src/restructurer.sibilant:95:0 */\n  \n    (function() {\n      if (node.specials > 0) {\n        ((node.specials)--);\n        context.parseStack.shift();\n        return closeSpecials(node, context);\n      }\n    }).call(this);\n    return context;\n  });\n  var accumulateIgnoredToken = (function accumulateIgnoredToken$(token, context, index) {\n    /* accumulate-ignored-token /Users/jbr/code/sibilant/src/restructurer.sibilant:103:0 */\n  \n    context.ignoredTokens.push(token);\n    return context;\n  });\n  [ \"hat\", \"dots\", \"tick\", \"at\" ].forEach((function(special) {\n    /* /Users/jbr/code/sibilant/src/restructurer.sibilant:107:0 */\n  \n    return restructurers[special] = openSpecial;\n  }));\n  [ \"whitespace\", \"newline\", \"ignored\" ].forEach((function(ignored) {\n    /* /Users/jbr/code/sibilant/src/restructurer.sibilant:110:0 */\n  \n    return restructurers[ignored] = accumulateIgnoredToken;\n  }));\n  restructurers.default = (function restructurers$default$(token, context, index) {\n    /* restructurers.default /Users/jbr/code/sibilant/src/restructurer.sibilant:113:0 */\n  \n    acceptSpecials(token, context);\n    acceptIgnoredTokens(token, context);\n    context.parseStack[0].contents.push(token);\n    return closeSpecials(token, context);\n  });\n  var coreNamespace = {  },\n      macroNamespaces = { core: coreNamespace };\n  sibilant.state = {  };\n  sibilant.macros = {\n    \"namespaces\": macroNamespaces,\n    \"defaultSearchPath\": [ \"core\" ],\n    \"searchPath\": [ \"core\" ],\n    \"namespace\": coreNamespace\n  };\n  var namespace = sibilant.macros.namespace,\n      macros = sibilant.macros.namespace;\n  sibilant.macros.currentNamespace = (function sibilant$macros$currentNamespace$() {\n    /* sibilant.macros.current-namespace /Users/jbr/code/sibilant/src/macros.sibilant:14:0 */\n  \n    return sibilant.macros.namespaces[sibilant.macros.searchPath[0]];\n  });\n  sibilant.resolveMacro = (function sibilant$resolveMacro$(macroName) {\n    /* sibilant.resolve-macro /Users/jbr/code/sibilant/src/macros.sibilant:17:0 */\n  \n    return (function() {\n      if ((macroName.indexOf(\"/\") !== -1 && 1 < macroName.length && !(macroName.indexOf(\"\\n\") !== -1))) {\n        var pathComponents = macroName.split(\"/\"),\n            macro = (sibilant.macros.namespaces.hasOwnProperty(pathComponents[0]) && sibilant.macros.namespaces[pathComponents[0]][pathComponents.slice(1).join(\"/\")]);\n        return (function() {\n          if (macro) {\n            return macro;\n          } else {\n            return error((\"called namespaced macro \" + macroName + \" but could not find namespace \" + pathComponents[0] + \". you might need to include the file that defines it first.\"));\n          }\n        }).call(this);\n      } else {\n        var namespace = detect(sibilant.macros.searchPath, (function(namespace) {\n          /* /Users/jbr/code/sibilant/src/macros.sibilant:29:33 */\n        \n          return sibilant.macros.namespaces[namespace].hasOwnProperty(macroName);\n        }));\n        return (function() {\n          if (namespace) {\n            return sibilant.macros.namespaces[namespace][macroName];\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.withDefaultSearchPath = (function sibilant$withDefaultSearchPath$(fn) {\n    /* sibilant.with-default-search-path /Users/jbr/code/sibilant/src/macros.sibilant:34:0 */\n  \n    var searchPathBefore = sibilant.macros.searchPath;\n    sibilant.macros.searchPath = sibilant.macros.defaultSearchPath;\n    var returnValue = fn();\n    sibilant.macros.searchPath = searchPathBefore;\n    return returnValue;\n  });\n  sibilant.macros.namespaces.core.ternary = (function ternary$(cond, ifTrue, ifFalse) {\n    /* ternary /Users/jbr/code/sibilant/include/macros.sibilant:9:0 */\n  \n    return [ \"(\", transpile(cond), \") ? \", transpile(ifTrue), \" : \", transpile(ifFalse) ];\n  });\n  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n    /* set /Users/jbr/code/sibilant/include/macros.sibilant:19:0 */\n  \n    var kvPairs = Array.prototype.slice.call(arguments, 1);\n  \n    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:21:34 */\n    \n      return asStatement([ \"(\", transpile(arr), \")\", \"[\", transpile(k), \"] = \", transpile(v) ]);\n    })));\n  });\n  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n    /* var /Users/jbr/code/sibilant/include/macros.sibilant:25:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return asStatement([ \"var \", interleave(\",\\n    \", bulkMap(pairs, (function(name, value) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:30:25 */\n    \n      return [ transpile(name), \" = \", transpile(value) ];\n    }))) ]);\n  });\n  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n    /* get /Users/jbr/code/sibilant/include/macros.sibilant:35:0 */\n  \n    var keys = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(\", transpile(obj), \")\", map(keys, (function(key) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:36:42 */\n    \n      return [ \"[\", transpile(key), \"]\" ];\n    })) ];\n  });\n  sibilant.macros.namespaces.core.aliasMacro = (function aliasMacro$(currentMacroName, newMacroName) {\n    /* alias-macro /Users/jbr/code/sibilant/include/macros.sibilant:47:0 */\n  \n    var currentMacroName = outputFormatter(transpile(currentMacroName)),\n        newMacroName = outputFormatter(transpile(newMacroName));\n    sibilant.macros.namespace[newMacroName] = sibilant.macros.namespace[currentMacroName];\n    return null;\n  });\n  sibilant.macros.namespaces.core.send = (function send$(object, method, args) {\n    /* send /Users/jbr/code/sibilant/include/macros.sibilant:62:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 2);\n  \n    return [ transpile(object), \".\", transpile(method), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.apply = (function apply$(fn, arglist) {\n    /* apply /Users/jbr/code/sibilant/include/macros.sibilant:74:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 2119,\n      line: 75,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 2120,\n        line: 75,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"apply\",\n          type: \"literal\",\n          start: 2121,\n          line: 75,\n          col: 10,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, fn, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"this\",\n        type: \"literal\",\n        start: 2131,\n        line: 75,\n        col: 20,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 2130,\n          line: 75,\n          col: 19,\n          length: 1,\n          contents: []\n        } ]\n      }, arglist ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.cons = (function cons$(first, rest) {\n    /* cons /Users/jbr/code/sibilant/include/macros.sibilant:86:0 */\n  \n    return [ \"[ \", transpile(first), \" ].concat(\", transpile(rest), \")\" ];\n  });\n  sibilant.macros.namespaces.core.append = (function append$(list, additional) {\n    /* append /Users/jbr/code/sibilant/include/macros.sibilant:95:0 */\n  \n    var additional = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 2690,\n      line: 96,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 2691,\n        line: 96,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"concat\",\n          type: \"literal\",\n          start: 2692,\n          line: 96,\n          col: 10,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, list, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 2705,\n        line: 96,\n        col: 23,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"list\",\n          type: \"literal\",\n          start: 2706,\n          line: 96,\n          col: 24,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(additional),\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 2704,\n          line: 96,\n          col: 22,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.length = (function length$(arr) {\n    /* length /Users/jbr/code/sibilant/include/macros.sibilant:102:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 2871,\n      line: 103,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 2872,\n        line: 103,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":2881,\"line\":103,\"col\":18,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"length\",\"type\":\"literal\",\"start\":2882,\"line\":103,\"col\":19,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":2880,\"line\":103,\"col\":17,\"length\":1,\"contents\":[]}]} ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.scoped = (function scoped$(body) {\n    /* scoped /Users/jbr/code/sibilant/include/macros.sibilant:109:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 3126,\n      line: 110,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 3127,\n        line: 110,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"call\",\n          type: \"literal\",\n          start: 3128,\n          line: 110,\n          col: 10,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 3133,\n        line: 110,\n        col: 15,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"lambda\",\n          type: \"literal\",\n          start: 3134,\n          line: 110,\n          col: 16,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          node: this,\n          args: []\n        } ].concat(body),\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3132,\n          line: 110,\n          col: 14,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"this\",\n        type: \"literal\",\n        start: 3172,\n        line: 110,\n        col: 54,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3171,\n          line: 110,\n          col: 53,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.first = (function first$(arr) {\n    /* first /Users/jbr/code/sibilant/include/macros.sibilant:130:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 3954,\n      line: 130,\n      col: 20,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 3955,\n        line: 130,\n        col: 21,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 3964,\n        line: 130,\n        col: 30,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3963,\n          line: 130,\n          col: 29,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.second = (function second$(arr) {\n    /* second /Users/jbr/code/sibilant/include/macros.sibilant:131:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 3989,\n      line: 131,\n      col: 21,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 3990,\n        line: 131,\n        col: 22,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        start: 3999,\n        line: 131,\n        col: 31,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 3998,\n          line: 131,\n          col: 30,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.third = (function third$(arr) {\n    /* third /Users/jbr/code/sibilant/include/macros.sibilant:132:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 4023,\n      line: 132,\n      col: 20,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 4024,\n        line: 132,\n        col: 21,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, arr, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"2\",\n        type: \"number\",\n        start: 4033,\n        line: 132,\n        col: 30,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 4032,\n          line: 132,\n          col: 29,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.rest = (function rest$(arr) {\n    /* rest /Users/jbr/code/sibilant/include/macros.sibilant:138:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 4170,\n      line: 138,\n      col: 19,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 4171,\n        line: 138,\n        col: 20,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"slice\",\n          type: \"literal\",\n          start: 4172,\n          line: 138,\n          col: 21,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arr, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        start: 4183,\n        line: 138,\n        col: 32,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 4182,\n          line: 138,\n          col: 31,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.last = (function last$(arr) {\n    /* last /Users/jbr/code/sibilant/include/macros.sibilant:143:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 4330,\n      line: 143,\n      col: 19,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"first\",\n        type: \"literal\",\n        start: 4331,\n        line: 143,\n        col: 20,\n        length: 5,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 4337,\n        line: 143,\n        col: 26,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 4338,\n          line: 143,\n          col: 27,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"slice\",\n            type: \"literal\",\n            start: 4339,\n            line: 143,\n            col: 28,\n            length: 5,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, arr, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          start: 4350,\n          line: 143,\n          col: 39,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 4349,\n            line: 143,\n            col: 38,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 4336,\n          line: 143,\n          col: 25,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"=\"] = (function $$(a, b) {\n    /* = /Users/jbr/code/sibilant/include/macros.sibilant:146:0 */\n  \n    return [ transpile(a), \" === \", transpile(b) ];\n  });\n  sibilant.macros.namespaces.core[\"+\"] = (function $$(args) {\n    /* + /Users/jbr/code/sibilant/include/macros.sibilant:153:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"-\"] = (function $$(args) {\n    /* - /Users/jbr/code/sibilant/include/macros.sibilant:160:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" - \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"_\"] = (function _$(args) {\n    /* * /Users/jbr/code/sibilant/include/macros.sibilant:166:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" * \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"/\"] = (function $$(args) {\n    /* / /Users/jbr/code/sibilant/include/macros.sibilant:173:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" / \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.or = (function or$(args) {\n    /* or /Users/jbr/code/sibilant/include/macros.sibilant:180:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" || \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.and = (function and$(args) {\n    /* and /Users/jbr/code/sibilant/include/macros.sibilant:188:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return (1 === args.length) ? transpile(args[0]) : [ \"(\", interleave(\" && \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.mod = (function mod$(args) {\n    /* mod /Users/jbr/code/sibilant/include/macros.sibilant:195:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" % \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\">\"] = (function $$(args) {\n    /* > /Users/jbr/code/sibilant/include/macros.sibilant:230:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \">\";\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7292,\n      line: 232,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7293,\n        line: 232,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:233:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"<\"] = (function $$(args) {\n    /* < /Users/jbr/code/sibilant/include/macros.sibilant:237:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"<\";\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7504,\n      line: 239,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7505,\n        line: 239,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:240:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"<=\"] = (function $$(args) {\n    /* <= /Users/jbr/code/sibilant/include/macros.sibilant:243:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"<=\";\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7717,\n      line: 245,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7718,\n        line: 245,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:246:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\">=\"] = (function $$(args) {\n    /* >= /Users/jbr/code/sibilant/include/macros.sibilant:249:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \">=\";\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 7930,\n      line: 251,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 7931,\n        line: 251,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:252:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"!=\"] = (function $$(args) {\n    /* != /Users/jbr/code/sibilant/include/macros.sibilant:254:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"!==\";\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 8143,\n      line: 256,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 8144,\n        line: 256,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:257:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"=\"] = (function $$(args) {\n    /* = /Users/jbr/code/sibilant/include/macros.sibilant:260:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var jsComparator = \"===\";\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 8356,\n      line: 262,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 8357,\n        line: 262,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(args.slice(0, -1), (function(item, index) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:263:22 */\n      \n        return [ item, \" \", jsComparator, \" \", args[(1 + index)] ];\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.incrBy = (function incrBy$(item, increment) {\n    /* incr-by /Users/jbr/code/sibilant/include/macros.sibilant:270:0 */\n  \n    return [ transpile(item), \" += \", transpile(increment) ];\n  });\n  sibilant.macros.namespaces.core.incr = (function incr$(item) {\n    /* incr /Users/jbr/code/sibilant/include/macros.sibilant:279:0 */\n  \n    return [ \"((\", transpile(item), \")++)\" ];\n  });\n  sibilant.macros.namespaces.core.decr = (function decr$(item) {\n    /* decr /Users/jbr/code/sibilant/include/macros.sibilant:286:0 */\n  \n    return [ \"((\", transpile(item), \")--)\" ];\n  });\n  sibilant.macros.namespaces.core.new = (function new$(constructor, args) {\n    /* new /Users/jbr/code/sibilant/include/macros.sibilant:293:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(new \", {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9213,\n      line: 294,\n      col: 17,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"call\",\n        type: \"literal\",\n        start: 9214,\n        line: 294,\n        col: 18,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, constructor ].concat(args),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }, \")\" ];\n  });\n  sibilant.macros.namespaces.core.regex = (function regex$(pattern, flags) {\n    /* regex /Users/jbr/code/sibilant/include/macros.sibilant:301:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9458,\n      line: 302,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"new\",\n        type: \"literal\",\n        start: 9459,\n        line: 302,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"RegExp\",\n        type: \"literal\",\n        start: 9463,\n        line: 302,\n        col: 13,\n        length: 6,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9462,\n          line: 302,\n          col: 12,\n          length: 1,\n          contents: []\n        } ]\n      }, pattern, (flags || \"undefined\") ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"zero__QUERY\"] = (function zero__QUERY$(item) {\n    /* zero? /Users/jbr/code/sibilant/include/macros.sibilant:309:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9624,\n      line: 309,\n      col: 21,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 9625,\n        line: 309,\n        col: 22,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, item, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 9633,\n        line: 309,\n        col: 30,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9632,\n          line: 309,\n          col: 29,\n          length: 1,\n          contents: []\n        } ]\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"empty__QUERY\"] = (function empty__QUERY$(arr) {\n    /* empty? /Users/jbr/code/sibilant/include/macros.sibilant:315:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9788,\n      line: 316,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 9789,\n        line: 316,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 9791,\n        line: 316,\n        col: 11,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9790,\n          line: 316,\n          col: 10,\n          length: 1,\n          contents: []\n        } ]\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 9793,\n        line: 316,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"length\",\n          type: \"literal\",\n          start: 9794,\n          line: 316,\n          col: 14,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, arr ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9792,\n          line: 316,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"odd__QUERY\"] = (function odd__QUERY$(number) {\n    /* odd? /Users/jbr/code/sibilant/include/macros.sibilant:322:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 9940,\n      line: 323,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 9941,\n        line: 323,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"1\",\n        type: \"number\",\n        start: 9943,\n        line: 323,\n        col: 11,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9942,\n          line: 323,\n          col: 10,\n          length: 1,\n          contents: []\n        } ]\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 9945,\n        line: 323,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"mod\",\n          type: \"literal\",\n          start: 9946,\n          line: 323,\n          col: 14,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, number, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"2\",\n          type: \"number\",\n          start: 9958,\n          line: 323,\n          col: 26,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 9957,\n            line: 323,\n            col: 25,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 9944,\n          line: 323,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"even__QUERY\"] = (function even__QUERY$(number) {\n    /* even? /Users/jbr/code/sibilant/include/macros.sibilant:329:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 10111,\n      line: 330,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 10112,\n        line: 330,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"0\",\n        type: \"number\",\n        start: 10114,\n        line: 330,\n        col: 11,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 10113,\n          line: 330,\n          col: 10,\n          length: 1,\n          contents: []\n        } ]\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 10116,\n        line: 330,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"mod\",\n          type: \"literal\",\n          start: 10117,\n          line: 330,\n          col: 14,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, number, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"2\",\n          type: \"number\",\n          start: 10129,\n          line: 330,\n          col: 26,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 10128,\n            line: 330,\n            col: 25,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 10115,\n          line: 330,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.typeof = (function typeof$(thing) {\n    /* typeof /Users/jbr/code/sibilant/include/macros.sibilant:337:0 */\n  \n    return [ \"typeof \", transpile(thing) ];\n  });\n  sibilant.macros.namespaces.core[\"string__QUERY\"] = (function string__QUERY$(things) {\n    /* string? /Users/jbr/code/sibilant/include/macros.sibilant:343:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 10565,\n      line: 344,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 10566,\n        line: 344,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:344:29 */\n      \n        return {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 10597,\n          line: 344,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 10598,\n            line: 344,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 10600,\n            line: 344,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 10601,\n              line: 344,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 10599,\n              line: 344,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10616,\"line\":344,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"string\",\"type\":\"literal\",\"start\":10617,\"line\":344,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10615,\"line\":344,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"function__QUERY\"] = (function function__QUERY$(things) {\n    /* function? /Users/jbr/code/sibilant/include/macros.sibilant:350:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 10809,\n      line: 351,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 10810,\n        line: 351,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:351:29 */\n      \n        return {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 10841,\n          line: 351,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 10842,\n            line: 351,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 10844,\n            line: 351,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 10845,\n              line: 351,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 10843,\n              line: 351,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":10860,\"line\":351,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"function\",\"type\":\"literal\",\"start\":10861,\"line\":351,\"col\":60,\"length\":8,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":10859,\"line\":351,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"undefined__QUERY\"] = (function undefined__QUERY$(things) {\n    /* undefined? /Users/jbr/code/sibilant/include/macros.sibilant:360:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11176,\n      line: 361,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 11177,\n        line: 361,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:361:29 */\n      \n        return {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 11208,\n          line: 361,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 11209,\n            line: 361,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 11211,\n            line: 361,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 11212,\n              line: 361,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 11210,\n              line: 361,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11227,\"line\":361,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11228,\"line\":361,\"col\":60,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11226,\"line\":361,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"defined__QUERY\"] = (function defined__QUERY$(things) {\n    /* defined? /Users/jbr/code/sibilant/include/macros.sibilant:369:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11503,\n      line: 370,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 11504,\n        line: 370,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:370:29 */\n      \n        return {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 11535,\n          line: 370,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"!=\",\n            type: \"otherChar\",\n            start: 11536,\n            line: 370,\n            col: 41,\n            length: 2,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 11539,\n            line: 370,\n            col: 44,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 11540,\n              line: 370,\n              col: 45,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 11538,\n              line: 370,\n              col: 43,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11555,\"line\":370,\"col\":60,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"undefined\",\"type\":\"literal\",\"start\":11556,\"line\":370,\"col\":61,\"length\":9,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11554,\"line\":370,\"col\":59,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"number__QUERY\"] = (function number__QUERY$(things) {\n    /* number? /Users/jbr/code/sibilant/include/macros.sibilant:377:0 */\n  \n    var things = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11764,\n      line: 378,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 11765,\n        line: 378,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(map(things, (function(thing) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:378:29 */\n      \n        return {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 11796,\n          line: 378,\n          col: 40,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"=\",\n            type: \"otherChar\",\n            start: 11797,\n            line: 378,\n            col: 41,\n            length: 1,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 11799,\n            line: 378,\n            col: 43,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"typeof\",\n              type: \"literal\",\n              start: 11800,\n              line: 378,\n              col: 44,\n              length: 6,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, thing ],\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 11798,\n              line: 378,\n              col: 42,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":11815,\"line\":378,\"col\":59,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"number\",\"type\":\"literal\",\"start\":11816,\"line\":378,\"col\":60,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":11814,\"line\":378,\"col\":58,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.if = (function if$(arg, truebody, falsebody) {\n    /* if /Users/jbr/code/sibilant/include/macros.sibilant:382:0 */\n  \n    return [ \"(function() {\", indent([ \"if (\", transpile(arg), \") {\", indent({\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 11976,\n      line: 385,\n      col: 33,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 11977,\n        line: 385,\n        col: 34,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(truebody),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"} else {\", indent({\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 12063,\n      line: 387,\n      col: 33,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 12064,\n        line: 387,\n        col: 34,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(falsebody),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.pipe = (function pipe$(calls) {\n    /* pipe /Users/jbr/code/sibilant/include/macros.sibilant:415:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 0);\n  \n    return inject(undefined, calls, (function(value, item) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:417:15 */\n    \n      return (function() {\n        if (typeof value === \"undefined\") {\n          return item;\n        } else {\n          return (function() {\n            /* /Users/jbr/code/sibilant/include/macros.sibilant:419:21 */\n          \n            var cloned = (function() {\n              if (node__QUERY(item, \"literal\", \"dots\")) {\n                return {\n                  dir: \"/Users/jbr/code/sibilant/include\",\n                  file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n                  token: \"(\",\n                  type: \"expression\",\n                  start: 13169,\n                  line: 421,\n                  col: 39,\n                  length: 1,\n                  contents: [ item ],\n                  precedingIgnored: [],\n                  specials: 0,\n                  end: undefined,\n                  closed: true,\n                  closingIgnored: []\n                };\n              } else {\n                return clone(item);\n              }\n            }).call(this);\n            var placeholder = detect(cloned.contents, (function(node) {\n              /* /Users/jbr/code/sibilant/include/macros.sibilant:425:47 */\n            \n              return (node__QUERY(node, \"otherChar\") && \"#\" === node.token);\n            })),\n                placeholderIndex = cloned.contents.indexOf(placeholder),\n                placeholderBoundaries = (function() {\n              if (placeholder) {\n                return [ placeholderIndex, (1 + placeholderIndex) ];\n              } else {\n                return [ 1, 1 ];\n              }\n            }).call(this);\n            return mergeInto(cloned, { contents: cloned.contents.slice(0, placeholderBoundaries[0]).concat([ value ], cloned.contents.slice(placeholderBoundaries[1])) });\n          }).call(this);\n        }\n      }).call(this);\n    }));\n  });\n  sibilant.macros.namespaces.core[\"|>\"] = sibilant.macros.namespaces.core.pipe;\n  sibilant.macros.namespaces.core.comment = (function comment$(contents) {\n    /* comment /Users/jbr/code/sibilant/include/macros.sibilant:446:0 */\n  \n    var contents = Array.prototype.slice.call(arguments, 0);\n  \n    return map(contents, (function(content) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:447:21 */\n    \n      return [ \"// \", recurseMap(transpile(content), (function(item) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:449:36 */\n      \n        return (item) ? outputFormatter(transpile(item)).replace((new RegExp(\"\\n\", \"g\")), \"\\n// \") : null;\n      })) ];\n    }));\n  });\n  sibilant.macros.namespaces.core[\"array__QUERY\"] = (function array__QUERY$(thing) {\n    /* array? /Users/jbr/code/sibilant/include/macros.sibilant:469:0 */\n  \n    var transpiled = transpile(thing);\n    return [ \"((\", transpiled, \") && typeof (\", transpiled, \") === \\\"object\\\" && (\", transpiled, \").constructor.name === \\\"Array\\\")\" ];\n  });\n  sibilant.macros.namespaces.core[\"list__QUERY\"] = sibilant.macros.namespaces.core[\"array__QUERY\"];\n  sibilant.macros.namespaces.core[\"hash__QUERY\"] = (function hash__QUERY$(thing) {\n    /* hash? /Users/jbr/code/sibilant/include/macros.sibilant:481:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 15707,\n      line: 482,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 15708,\n        line: 482,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 15712,\n        line: 482,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          start: 15713,\n          line: 482,\n          col: 14,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15715,\"line\":482,\"col\":16,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"object\",\"type\":\"literal\",\"start\":15716,\"line\":482,\"col\":17,\"length\":6,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15714,\"line\":482,\"col\":15,\"length\":1,\"contents\":[]}]}, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 15723,\n          line: 482,\n          col: 24,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"typeof\",\n            type: \"literal\",\n            start: 15724,\n            line: 482,\n            col: 25,\n            length: 6,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 15722,\n            line: 482,\n            col: 23,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 15711,\n          line: 482,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 15753,\n        line: 483,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 15754,\n          line: 483,\n          col: 14,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"null\",\n          type: \"literal\",\n          start: 15764,\n          line: 483,\n          col: 24,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 15763,\n            line: 483,\n            col: 23,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 15739,\n          line: 482,\n          col: 40,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"             \",\n          type: \"whitespace\",\n          start: 15740,\n          line: 483,\n          col: 0,\n          length: 13,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 15783,\n        line: 484,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 15784,\n          line: 484,\n          col: 14,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 15787,\n          line: 484,\n          col: 17,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            start: 15788,\n            line: 484,\n            col: 18,\n            length: 3,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, thing, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15799,\"line\":484,\"col\":29,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"constructor\",\"type\":\"literal\",\"start\":15800,\"line\":484,\"col\":30,\"length\":11,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15798,\"line\":484,\"col\":28,\"length\":1,\"contents\":[]}]}, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15812,\"line\":484,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"name\",\"type\":\"literal\",\"start\":15813,\"line\":484,\"col\":43,\"length\":4,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15811,\"line\":484,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 15786,\n            line: 484,\n            col: 16,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":15819,\"line\":484,\"col\":49,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"Array\",\"type\":\"literal\",\"start\":15820,\"line\":484,\"col\":50,\"length\":5,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":15818,\"line\":484,\"col\":48,\"length\":1,\"contents\":[]}]} ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 15769,\n          line: 483,\n          col: 29,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"             \",\n          type: \"whitespace\",\n          start: 15770,\n          line: 484,\n          col: 0,\n          length: 13,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"object__QUERY\"] = sibilant.macros.namespaces.core[\"hash__QUERY\"];\n  sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"] = (function _scopedWithoutReturn$(body) {\n    /* *scoped-without-return /Users/jbr/code/sibilant/include/macros.sibilant:487:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(function() {\", indent.apply(this, body), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core[\"_scopedWithoutSource\"] = (function _scopedWithoutSource$(body) {\n    /* *scoped-without-source /Users/jbr/code/sibilant/include/macros.sibilant:491:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 16007,\n      line: 492,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"*scoped-without-return\",\n        type: \"literal\",\n        start: 16008,\n        line: 492,\n        col: 9,\n        length: 22,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 16031,\n        line: 492,\n        col: 32,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"do\",\n          type: \"literal\",\n          start: 16032,\n          line: 492,\n          col: 33,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(body),\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 16030,\n          line: 492,\n          col: 31,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.when = (function when$(condition, body) {\n    /* when /Users/jbr/code/sibilant/include/macros.sibilant:501:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return sibilant.macros.namespaces.core[\"_scopedWithoutReturn\"](\"if (\", condition, \") {\", indent({\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 16453,\n      line: 504,\n      col: 18,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 16454,\n        line: 504,\n        col: 19,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\");\n  });\n  sibilant.macros.namespaces.core.not = (function not$(exp) {\n    /* not /Users/jbr/code/sibilant/include/macros.sibilant:513:0 */\n  \n    return [ \"!(\", transpile(exp), \")\" ];\n  });\n  sibilant.macros.namespaces.core.unless = (function unless$(condition, body) {\n    /* unless /Users/jbr/code/sibilant/include/macros.sibilant:526:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(function() {\", indent([ \"if (\", {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 17186,\n      line: 528,\n      col: 25,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"not\",\n        type: \"literal\",\n        start: 17187,\n        line: 528,\n        col: 26,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, condition ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }, \") {\", indent({\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 17242,\n      line: 529,\n      col: 33,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 17243,\n        line: 529,\n        col: 34,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.assign = (function assign$(args) {\n    /* assign /Users/jbr/code/sibilant/include/macros.sibilant:534:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", bulkMap(args, (function(name, value) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:536:28 */\n    \n      return asStatement([ transpile(name), \" = \", transpile(value) ]);\n    })));\n  });\n  sibilant.macros.namespaces.core.logPretty = (function logPretty$(label, arg) {\n    /* log-pretty /Users/jbr/code/sibilant/include/macros.sibilant:548:0 */\n  \n    var node = this;\n    (function() {\n      if (typeof arg === \"undefined\") {\n        arg = label;\n        return label = [ \"\\\"\", prettify(label, false), \"\\\"\" ];\n      }\n    }).call(this);\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 18065,\n      line: 553,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"console.log\",\n        type: \"literal\",\n        start: 18066,\n        line: 553,\n        col: 9,\n        length: 11,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 18078,\n        line: 553,\n        col: 21,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"concat\",\n          type: \"literal\",\n          start: 18079,\n          line: 553,\n          col: 22,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, [ \"\\\"\", node.file, \":\", node.line, \"\\\"\" ], {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\\" \\\"\",\n          type: \"string\",\n          start: 18123,\n          line: 553,\n          col: 66,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 18122,\n            line: 553,\n            col: 65,\n            length: 1,\n            contents: []\n          } ]\n        }, label, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\\" = \\\"\",\n          type: \"string\",\n          start: 18134,\n          line: 553,\n          col: 77,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 18133,\n            line: 553,\n            col: 76,\n            length: 1,\n            contents: []\n          } ]\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 18140,\n          line: 553,\n          col: 83,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"prettify\",\n            type: \"literal\",\n            start: 18141,\n            line: 553,\n            col: 84,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, arg ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 18139,\n            line: 553,\n            col: 82,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 18077,\n          line: 553,\n          col: 20,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.prettyLog = sibilant.macros.namespaces.core.logPretty;\n  sibilant.macros.namespaces.core.each = (function each$(item, array, body) {\n    /* each /Users/jbr/code/sibilant/include/macros.sibilant:566:17 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 18935,\n      line: 567,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 18936,\n        line: 567,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"for-each\",\n          type: \"literal\",\n          start: 18937,\n          line: 567,\n          col: 10,\n          length: 8,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, array, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 18972,\n        line: 568,\n        col: 19,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"lambda\",\n          type: \"literal\",\n          start: 18973,\n          line: 568,\n          col: 20,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          node: this,\n          args: (function() {\n            if (node__QUERY(item, \"expression\")) {\n              return item;\n            } else {\n              return [ item ];\n            }\n          }).call(this)\n        } ].concat(body),\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 18952,\n          line: 567,\n          col: 25,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"                   \",\n          type: \"whitespace\",\n          start: 18953,\n          line: 568,\n          col: 0,\n          length: 19,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.macroExpand = (function macroExpand$(name) {\n    /* macro-expand /Users/jbr/code/sibilant/include/macros.sibilant:581:0 */\n  \n    var macro = macros[outputFormatter(transpile(name))];\n    return (function() {\n      if (macro) {\n        return macro.toString();\n      } else {\n        return \"undefined\";\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.throw = (function throw$(error) {\n    /* throw /Users/jbr/code/sibilant/include/macros.sibilant:594:0 */\n  \n    return [ \"throw \", transpile(error) ];\n  });\n  sibilant.macros.namespaces.core.asBoolean = (function asBoolean$(expr) {\n    /* as-boolean /Users/jbr/code/sibilant/include/macros.sibilant:605:0 */\n  \n    return [ \"(!!(\", transpile(expr), \"))\" ];\n  });\n  sibilant.macros.namespaces.core.try = (function try$(tryblock, catchblock) {\n    /* try /Users/jbr/code/sibilant/include/macros.sibilant:611:0 */\n  \n    return [ \"(function() {\", indent([ \"try {\", indent({\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 19905,\n      line: 614,\n      col: 26,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 19906,\n        line: 614,\n        col: 27,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, tryblock ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"} catch (e) {\", indent({\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 19980,\n      line: 616,\n      col: 26,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"do\",\n        type: \"literal\",\n        start: 19981,\n        line: 616,\n        col: 27,\n        length: 2,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, catchblock ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    }), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.state = (function state$(pairs) {\n    /* state /Users/jbr/code/sibilant/include/macros.sibilant:628:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return (function() {\n      if (1 === pairs.length) {\n        return sibilant.state[outputFormatter(transpile(pairs[0]))];\n      } else {\n        bulkMap(pairs, (function(k, v) {\n          /* /Users/jbr/code/sibilant/include/macros.sibilant:631:31 */\n        \n          return sibilant.state[outputFormatter(transpile(k))] = eval(outputFormatter(transpile(v)));\n        }));\n        return null;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.symbol = (function symbol$() {\n    /* symbol /Users/jbr/code/sibilant/include/macros.sibilant:637:0 */\n  \n    var symbolCount = (sibilant.state.symbolCount || 0),\n        newSymbolCount = (1 + symbolCount);\n    sibilant.macros.namespaces.core.state(\"symbolCount\", newSymbolCount);\n    return [ (\"$_symbol\" + newSymbolCount + \"_$\") ];\n  });\n  sibilant.macros.namespaces.core.while = (function while$(condition, body) {\n    /* while /Users/jbr/code/sibilant/include/macros.sibilant:652:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    var symbol = sibilant.macros.namespaces.core.symbol();\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 21118,\n      line: 654,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"*scoped-without-source\",\n        type: \"literal\",\n        start: 21119,\n        line: 654,\n        col: 9,\n        length: 22,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 21151,\n        line: 655,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"var\",\n          type: \"literal\",\n          start: 21152,\n          line: 655,\n          col: 10,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, symbol ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 21141,\n          line: 654,\n          col: 31,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"         \",\n          type: \"whitespace\",\n          start: 21142,\n          line: 655,\n          col: 0,\n          length: 9,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        type: \"output\",\n        contents: [ \"while (\", transpile(condition), \") {\", indent({\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 21288,\n          line: 658,\n          col: 35,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"assign\",\n            type: \"literal\",\n            start: 21289,\n            line: 658,\n            col: 36,\n            length: 6,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, symbol, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 21304,\n            line: 658,\n            col: 51,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"*scoped-without-source\",\n              type: \"literal\",\n              start: 21305,\n              line: 658,\n              col: 52,\n              length: 22,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ].concat(body),\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 21303,\n              line: 658,\n              col: 50,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          } ],\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }), \"}\" ]\n      }, symbol ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.until = (function until$(condition, body) {\n    /* until /Users/jbr/code/sibilant/include/macros.sibilant:671:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 21697,\n      line: 672,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"while\",\n        type: \"literal\",\n        start: 21698,\n        line: 672,\n        col: 9,\n        length: 5,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 21704,\n        line: 672,\n        col: 15,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"not\",\n          type: \"literal\",\n          start: 21705,\n          line: 672,\n          col: 16,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, condition ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 21703,\n          line: 672,\n          col: 14,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ].concat(body),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"match__QUERY\"] = (function match__QUERY$(regexp, string) {\n    /* match? /Users/jbr/code/sibilant/include/macros.sibilant:681:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 21978,\n      line: 682,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 21979,\n        line: 682,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"match\",\n          type: \"literal\",\n          start: 21980,\n          line: 682,\n          col: 10,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, regexp ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"matchRegex__QUERY\"] = (function matchRegex__QUERY$(string, pattern, flags) {\n    /* match-regex? /Users/jbr/code/sibilant/include/macros.sibilant:687:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 22214,\n      line: 688,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"match?\",\n        type: \"literal\",\n        start: 22215,\n        line: 688,\n        col: 9,\n        length: 6,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 22222,\n        line: 688,\n        col: 16,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          start: 22223,\n          line: 688,\n          col: 17,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern, flags ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 22221,\n          line: 688,\n          col: 15,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, string ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.replace = (function replace$(string, pattern, replacement) {\n    /* replace /Users/jbr/code/sibilant/include/macros.sibilant:694:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 22476,\n      line: 695,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 22477,\n        line: 695,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"replace\",\n          type: \"literal\",\n          start: 22478,\n          line: 695,\n          col: 10,\n          length: 7,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 22508,\n        line: 696,\n        col: 14,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          start: 22509,\n          line: 696,\n          col: 15,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 22493,\n          line: 695,\n          col: 25,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"              \",\n          type: \"whitespace\",\n          start: 22494,\n          line: 696,\n          col: 0,\n          length: 14,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, replacement ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.replaceAll = (function replaceAll$(string, pattern, replacement) {\n    /* replace-all /Users/jbr/code/sibilant/include/macros.sibilant:702:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 22773,\n      line: 703,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 22774,\n        line: 703,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"replace\",\n          type: \"literal\",\n          start: 22775,\n          line: 703,\n          col: 10,\n          length: 7,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, string, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 22791,\n        line: 703,\n        col: 26,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"regex\",\n          type: \"literal\",\n          start: 22792,\n          line: 703,\n          col: 27,\n          length: 5,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, pattern, {\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"'\",\"type\":\"tick\",\"start\":22807,\"line\":703,\"col\":42,\"length\":1,\"contents\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\"g\",\"type\":\"literal\",\"start\":22808,\"line\":703,\"col\":43,\"length\":1,\"contents\":[],\"specials\":0,\"precedingIgnored\":[]}],\"precedingIgnored\":[{\"dir\":\"/Users/jbr/code/sibilant/include\",\"file\":\"/Users/jbr/code/sibilant/include/macros.sibilant\",\"token\":\" \",\"type\":\"whitespace\",\"start\":22806,\"line\":703,\"col\":41,\"length\":1,\"contents\":[]}]} ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 22790,\n          line: 703,\n          col: 25,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, replacement ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.thunk = (function thunk$(body) {\n    /* thunk /Users/jbr/code/sibilant/include/macros.sibilant:716:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    var node = this,\n        lambdaOptions = {\n      node: node,\n      args: []\n    };\n    (function() {\n      if (!(node__QUERY(body[0]))) {\n        mergeInto(lambdaOptions, body[0]);\n        return body = body.slice(1);\n      }\n    }).call(this);\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 23396,\n      line: 724,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"lambda\",\n        type: \"literal\",\n        start: 23397,\n        line: 724,\n        col: 9,\n        length: 6,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, lambdaOptions ].concat(mapNode(body, (function(node) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:726:17 */\n      \n        return (function() {\n          if (node__QUERY(node, \"argPlaceholder\")) {\n            return {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 23549,\n              line: 728,\n              col: 24,\n              length: 1,\n              contents: [ {\n                dir: \"/Users/jbr/code/sibilant/include\",\n                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n                token: \"argument\",\n                type: \"literal\",\n                start: 23550,\n                line: 728,\n                col: 25,\n                length: 8,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, node.token.replace((new RegExp(\"^#\", undefined)), \"\") ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            };\n          } else {\n            return node;\n          }\n        }).call(this);\n      }))),\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"#>\"] = sibilant.macros.namespaces.core.thunk;\n  sibilant.macros.namespaces.core.pipeThunk = (function pipeThunk$(calls) {\n    /* pipe-thunk /Users/jbr/code/sibilant/include/macros.sibilant:739:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 0);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 23930,\n      line: 739,\n      col: 30,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"thunk\",\n        type: \"literal\",\n        start: 23931,\n        line: 739,\n        col: 31,\n        length: 5,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, { node: this }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 23952,\n        line: 739,\n        col: 52,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"pipe\",\n          type: \"literal\",\n          start: 23953,\n          line: 739,\n          col: 53,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"#0\",\n          type: \"argPlaceholder\",\n          start: 23958,\n          line: 739,\n          col: 58,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 23957,\n            line: 739,\n            col: 57,\n            length: 1,\n            contents: []\n          } ]\n        } ].concat(calls),\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 23951,\n          line: 739,\n          col: 51,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"#->\"] = sibilant.macros.namespaces.core.pipeThunk;\n  sibilant.macros.namespaces.core.keys = (function keys$(obj) {\n    /* keys /Users/jbr/code/sibilant/include/macros.sibilant:751:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 24264,\n      line: 752,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"Object.keys\",\n        type: \"literal\",\n        start: 24265,\n        line: 752,\n        col: 9,\n        length: 11,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, obj ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.delete = (function delete$(objects) {\n    /* delete /Users/jbr/code/sibilant/include/macros.sibilant:764:0 */\n  \n    var objects = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", map(objects, (function(obj) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:765:37 */\n    \n      return asStatement([ \"delete \", transpile(obj) ]);\n    })));\n  });\n  sibilant.macros.namespaces.core.deleteMacro = (function deleteMacro$(macroNames) {\n    /* delete-macro /Users/jbr/code/sibilant/include/macros.sibilant:776:0 */\n  \n    var macroNames = Array.prototype.slice.call(arguments, 0);\n  \n    macroNames.forEach((function(macroName) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:777:7 */\n    \n      return delete sibilant.macros.namespace[outputFormatter(transpile(macroName))];\n    }));\n    return null;\n  });\n  sibilant.macros.namespaces.core.delmacro = sibilant.macros.namespaces.core.deleteMacro;\n  sibilant.macros.namespaces.core.renameMacro = (function renameMacro$(currentMacroName, newMacroName) {\n    /* rename-macro /Users/jbr/code/sibilant/include/macros.sibilant:789:0 */\n  \n    sibilant.macros.namespaces.core.aliasMacro(currentMacroName, newMacroName);\n    sibilant.macros.namespaces.core.deleteMacro(currentMacroName);\n    return null;\n  });\n  sibilant.macros.namespaces.core.arguments = (function arguments$() {\n    /* arguments /Users/jbr/code/sibilant/include/macros.sibilant:804:0 */\n  \n    return [ \"(Array.prototype.slice.apply(arguments))\" ];\n  });\n  sibilant.macros.namespaces.core.argument = (function argument$(index) {\n    /* argument /Users/jbr/code/sibilant/include/macros.sibilant:816:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 25850,\n      line: 817,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"get\",\n        type: \"literal\",\n        start: 25851,\n        line: 817,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"arguments\",\n        type: \"literal\",\n        start: 25855,\n        line: 817,\n        col: 13,\n        length: 9,\n        contents: [],\n        specials: 0,\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 25854,\n          line: 817,\n          col: 12,\n          length: 1,\n          contents: []\n        } ]\n      }, index ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.eachKey = (function eachKey$(as, obj, body) {\n    /* each-key /Users/jbr/code/sibilant/include/macros.sibilant:825:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 26058,\n      line: 826,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        start: 26059,\n        line: 826,\n        col: 9,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, obj, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 26069,\n        line: 826,\n        col: 19,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"keys\",\n          type: \"literal\",\n          start: 26070,\n          line: 826,\n          col: 20,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 26068,\n          line: 826,\n          col: 18,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 26090,\n        line: 827,\n        col: 14,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 26091,\n          line: 827,\n          col: 15,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"for-each\",\n            type: \"literal\",\n            start: 26092,\n            line: 827,\n            col: 16,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 26101,\n          line: 827,\n          col: 25,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"lambda\",\n            type: \"literal\",\n            start: 26102,\n            line: 827,\n            col: 26,\n            length: 6,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            args: (function() {\n              if (node__QUERY(as, \"expression\")) {\n                return as;\n              } else {\n                return [ as ];\n              }\n            }).call(this),\n            node: this\n          } ].concat(body),\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 26100,\n            line: 827,\n            col: 24,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 26075,\n          line: 826,\n          col: 25,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"              \",\n          type: \"whitespace\",\n          start: 26076,\n          line: 827,\n          col: 0,\n          length: 14,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.switch = (function switch$(obj, cases) {\n    /* switch /Users/jbr/code/sibilant/include/macros.sibilant:848:0 */\n  \n    var cases = Array.prototype.slice.call(arguments, 1);\n  \n    return [ \"(function() {\", indent([ \"switch(\", transpile(obj), \") {\", map(cases, (function(caseDef) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:851:30 */\n    \n      var caseNameNode = caseDef.contents[0],\n          caseLabels = (function() {\n        if (node__QUERY(caseNameNode, \"expression\", \"bracket\")) {\n          return caseNameNode.contents;\n        } else {\n          return [ caseNameNode ];\n        }\n      }).call(this),\n          caseString = interleave(\"\\n\", map(caseLabels, (function(c) {\n        /* /Users/jbr/code/sibilant/include/macros.sibilant:857:78 */\n      \n        return (function() {\n          if (\"default\" === c.token) {\n            return \"default:\";\n          } else {\n            return [ \"case \", transpile(c), \":\" ];\n          }\n        }).call(this);\n      })));\n      return [ \"\\n\", caseString, indent({\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 27747,\n        line: 861,\n        col: 59,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"do\",\n          type: \"literal\",\n          start: 27748,\n          line: 861,\n          col: 60,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ].concat(caseDef.contents.slice(1)),\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }) ];\n    })), \"}\" ]), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.if = (function if$(alternatingConditionsAndBranches) {\n    /* if /Users/jbr/code/sibilant/include/macros.sibilant:893:0 */\n  \n    var alternatingConditionsAndBranches = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(function() {\", indent(interleave(\" else \", bulkMap(alternatingConditionsAndBranches, (function(cond, val) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:898:25 */\n    \n      return (function() {\n        if (typeof val !== \"undefined\") {\n          return [ \"if (\", transpile(cond), \") {\", indent({\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 29023,\n            line: 901,\n            col: 44,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"do\",\n              type: \"literal\",\n              start: 29024,\n              line: 901,\n              col: 45,\n              length: 2,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, val ],\n            precedingIgnored: [],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }), \"}\" ];\n        } else {\n          return [ \"{\", indent({\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 29121,\n            line: 903,\n            col: 47,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"do\",\n              type: \"literal\",\n              start: 29122,\n              line: 903,\n              col: 48,\n              length: 2,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, cond ],\n            precedingIgnored: [],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }), \"}\" ];\n        }\n      }).call(this);\n    })))), \"}).call(this)\" ];\n  });\n  sibilant.macros.namespaces.core.chain = (function chain$(object, calls) {\n    /* chain /Users/jbr/code/sibilant/include/macros.sibilant:922:0 */\n  \n    var calls = Array.prototype.slice.call(arguments, 1);\n  \n    console.log(\"DEPRECATION WARNING: DO NOT USE CHAIN\");\n    console.log((\"  \" + this.file + \":\" + this.line + \":\" + this.col));\n    return (function() {\n      if (0 === calls.length) {\n        return transpile(object);\n      } else if (1 === calls.length) {\n        return {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 29664,\n          line: 926,\n          col: 31,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"send\",\n            type: \"literal\",\n            start: 29665,\n            line: 926,\n            col: 32,\n            length: 4,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, object ].concat(calls[0].contents),\n          precedingIgnored: [],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        };\n      } else {\n        var lines = map(calls, (function(call, index) {\n          /* /Users/jbr/code/sibilant/include/macros.sibilant:928:34 */\n        \n          return [ \".\", transpile(call.contents[0]), \"(\", interleave(\", \", map(call.contents.slice(1), transpile)), \")\" ];\n        }));\n        return [ transpile(object), lines[0], \"\\n  \", recurseIndent(interleave(\"\\n\", lines.slice(1))) ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core[\"instanceOf__QUERY\"] = (function instanceOf__QUERY$(item, type) {\n    /* instance-of? /Users/jbr/code/sibilant/include/macros.sibilant:947:0 */\n  \n    return [ \"(\", transpile(item), \" instanceof \", transpile(type), \")\" ];\n  });\n  sibilant.macros.namespaces.core[\"includes__QUERY\"] = (function includes__QUERY$(haystack, needle) {\n    /* includes? /Users/jbr/code/sibilant/include/macros.sibilant:958:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 30643,\n      line: 959,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        start: 30644,\n        line: 959,\n        col: 9,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, haystack, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 30659,\n        line: 959,\n        col: 24,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 30660,\n          line: 959,\n          col: 25,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"index-of\",\n            type: \"literal\",\n            start: 30661,\n            line: 959,\n            col: 26,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, needle ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 30658,\n          line: 959,\n          col: 23,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 30679,\n        line: 959,\n        col: 44,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 30680,\n          line: 959,\n          col: 45,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          start: 30683,\n          line: 959,\n          col: 48,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 30682,\n            line: 959,\n            col: 47,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 30678,\n          line: 959,\n          col: 43,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"excludes__QUERY\"] = (function excludes__QUERY$(haystack, needle) {\n    /* excludes? /Users/jbr/code/sibilant/include/macros.sibilant:971:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 30956,\n      line: 972,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"pipe\",\n        type: \"literal\",\n        start: 30957,\n        line: 972,\n        col: 9,\n        length: 4,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, haystack, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 30972,\n        line: 972,\n        col: 24,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 30973,\n          line: 972,\n          col: 25,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"index-of\",\n            type: \"literal\",\n            start: 30974,\n            line: 972,\n            col: 26,\n            length: 8,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, needle ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 30971,\n          line: 972,\n          col: 23,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 30992,\n        line: 972,\n        col: 44,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"=\",\n          type: \"otherChar\",\n          start: 30993,\n          line: 972,\n          col: 45,\n          length: 1,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"-1\",\n          type: \"number\",\n          start: 30995,\n          line: 972,\n          col: 47,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 30994,\n            line: 972,\n            col: 46,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 30991,\n          line: 972,\n          col: 43,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"exists__QUERY\"] = (function exists__QUERY$(thing) {\n    /* exists? /Users/jbr/code/sibilant/include/macros.sibilant:982:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 31210,\n      line: 983,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"and\",\n        type: \"literal\",\n        start: 31211,\n        line: 983,\n        col: 9,\n        length: 3,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 31215,\n        line: 983,\n        col: 13,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"defined?\",\n          type: \"literal\",\n          start: 31216,\n          line: 983,\n          col: 14,\n          length: 8,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 31214,\n          line: 983,\n          col: 12,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 31233,\n        line: 983,\n        col: 31,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"!=\",\n          type: \"otherChar\",\n          start: 31234,\n          line: 983,\n          col: 32,\n          length: 2,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, thing, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"null\",\n          type: \"literal\",\n          start: 31244,\n          line: 983,\n          col: 42,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 31243,\n            line: 983,\n            col: 41,\n            length: 1,\n            contents: []\n          } ]\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 31232,\n          line: 983,\n          col: 30,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.withState = (function withState$(k, v, body) {\n    /* with-state /Users/jbr/code/sibilant/include/macros.sibilant:989:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var before = sibilant.macros.namespaces.core.state(k);\n    sibilant.macros.namespaces.core.state(k, v);\n    var returnValue = interleave(\"\\n\", map(body, transpile));\n    sibilant.macros.namespaces.core.state(k, before);\n    return returnValue;\n  });\n  sibilant.macros.namespaces.core.join = (function join$(arr, glue) {\n    /* join /Users/jbr/code/sibilant/include/macros.sibilant:1011:0 */\n  \n    (function() {\n      if ((typeof glue !== \"undefined\" && typeof arr === \"undefined\")) {\n        arr = glue;\n        return glue = undefined;\n      }\n    }).call(this);\n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 31944,\n      line: 1014,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 31945,\n        line: 1014,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"join\",\n          type: \"literal\",\n          start: 31946,\n          line: 1014,\n          col: 10,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arr, (glue || \"\\\"\\\"\") ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"_destructure\"] = (function _destructure$(pairs) {\n    /* *destructure /Users/jbr/code/sibilant/include/macros.sibilant:1019:0 */\n  \n    var destructured = [];\n    bulkMap(pairs, (function(lhs, rhs) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:1021:21 */\n    \n      var transpiledRhs = transpile(rhs);\n      return (function() {\n        switch(lhs.type) {\n        case \"bracket\":\n          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n              source = (function() {\n            if (literalRhs__QUERY) {\n              return transpiledRhs;\n            } else {\n              var symbol = sibilant.macros.namespaces.core.symbol();\n              destructured.push([ symbol, transpiledRhs ]);\n              return symbol;\n            }\n          }).call(this);\n          lhs.contents.forEach((function(item, index) {\n            /* /Users/jbr/code/sibilant/include/macros.sibilant:1031:32 */\n          \n            return destructured.push([ transpile(item), {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 32902,\n              line: 1032,\n              col: 76,\n              length: 1,\n              contents: [ {\n                dir: \"/Users/jbr/code/sibilant/include\",\n                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n                token: \"get\",\n                type: \"literal\",\n                start: 32903,\n                line: 1032,\n                col: 77,\n                length: 3,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, source, index ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ]);\n          }));\n          return (function() {\n            if (!(literalRhs__QUERY)) {\n              return destructured.push([ source, \"undefined\" ]);\n            }\n          }).call(this);\n        \n        case \"brace\":\n          var literalRhs__QUERY = outputFormatter(transpiledRhs).match((new RegExp(\"^[\\._a-zA-Z0-9]+$\", undefined))),\n              source = (function() {\n            if (literalRhs__QUERY) {\n              return transpiledRhs;\n            } else {\n              var symbol = sibilant.macros.namespaces.core.symbol();\n              destructured.push([ symbol, transpiledRhs ]);\n              return symbol;\n            }\n          }).call(this);\n          lhs.contents.forEach((function(item, index) {\n            /* /Users/jbr/code/sibilant/include/macros.sibilant:1042:32 */\n          \n            var trItem = transpile(item);\n            return destructured.push([ trItem, {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"(\",\n              type: \"expression\",\n              start: 33853,\n              line: 1044,\n              col: 67,\n              length: 1,\n              contents: [ {\n                dir: \"/Users/jbr/code/sibilant/include\",\n                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n                token: \"get\",\n                type: \"literal\",\n                start: 33854,\n                line: 1044,\n                col: 68,\n                length: 3,\n                contents: [],\n                specials: 0,\n                precedingIgnored: []\n              }, source, [ \"\\\"\", trItem, \"\\\"\" ] ],\n              precedingIgnored: [],\n              specials: 0,\n              end: undefined,\n              closed: true,\n              closingIgnored: []\n            } ]);\n          }));\n          return (function() {\n            if (!(literalRhs__QUERY)) {\n              return destructured.push([ source, \"undefined\" ]);\n            }\n          }).call(this);\n        \n        default:\n          return destructured.push([ transpile(lhs), (function() {\n            if (rhs) {\n              return transpiledRhs;\n            } else {\n              return \"undefined\";\n            }\n          }).call(this) ]);\n        }\n      }).call(this);\n    }));\n    return destructured;\n  });\n  sibilant.macros.namespaces.core.var = (function var$(pairs) {\n    /* var /Users/jbr/code/sibilant/include/macros.sibilant:1063:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return asStatement([ \"var \", interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:1067:25 */\n    \n      return [ pair[0], \" = \", pair[1] ];\n    })), \",\\n    \") ]);\n  });\n  sibilant.macros.namespaces.core.assign = (function assign$(pairs) {\n    /* assign /Users/jbr/code/sibilant/include/macros.sibilant:1085:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(map(sibilant.macros.namespaces.core[\"_destructure\"](pairs), (function(pair) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:1088:17 */\n    \n      return asStatement([ pair[0], \" = \", pair[1] ]);\n    })), \"\\n\");\n  });\n  sibilant.macros.namespaces.core.default = (function default$(pairs) {\n    /* default /Users/jbr/code/sibilant/include/macros.sibilant:1096:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(\"\\n\", bulkMap(pairs, (function(name, value) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:1097:40 */\n    \n      return {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 35842,\n        line: 1098,\n        col: 35,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"assign\",\n          type: \"literal\",\n          start: 35843,\n          line: 1098,\n          col: 36,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, name, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 35856,\n          line: 1098,\n          col: 49,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"ternary\",\n            type: \"literal\",\n            start: 35857,\n            line: 1098,\n            col: 50,\n            length: 7,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 35865,\n            line: 1098,\n            col: 58,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"defined?\",\n              type: \"literal\",\n              start: 35866,\n              line: 1098,\n              col: 59,\n              length: 8,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, name ],\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 35864,\n              line: 1098,\n              col: 57,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          }, name, value ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 35855,\n            line: 1098,\n            col: 48,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      };\n    })));\n  });\n  sibilant.macros.namespaces.core.importNamespace = (function importNamespace$(namespace) {\n    /* import-namespace /Users/jbr/code/sibilant/include/macros.sibilant:1101:0 */\n  \n    var namespaceAsString = outputFormatter(transpile(namespace));\n    (function() {\n      if (!(sibilant.macros.namespaces.hasOwnProperty(namespaceAsString))) {\n        return sibilant.macros.namespaces[namespaceAsString] = {  };\n      }\n    }).call(this);\n    sibilant.macros.searchPath.unshift(namespaceAsString);\n    return undefined;\n  });\n  sibilant.macros.namespaces.core.namespace = (function namespace$(namespace) {\n    /* namespace /Users/jbr/code/sibilant/include/macros.sibilant:1109:0 */\n  \n    sibilant.macros.namespaces.core.importNamespace(namespace);\n    sibilant.macros.namespace = sibilant.macros.namespaces[outputFormatter(transpile(namespace))];\n    return undefined;\n  });\n  sibilant.macros.namespaces.core[\"hasKey__QUERY\"] = (function hasKey__QUERY$(object, key) {\n    /* has-key? /Users/jbr/code/sibilant/include/macros.sibilant:1124:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 36650,\n      line: 1125,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 36651,\n        line: 1125,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"has-own-property\",\n          type: \"literal\",\n          start: 36652,\n          line: 1125,\n          col: 10,\n          length: 16,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, object, key ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.get = (function get$(obj, keys) {\n    /* get /Users/jbr/code/sibilant/include/macros.sibilant:1146:0 */\n  \n    var keys = Array.prototype.slice.call(arguments, 1);\n  \n    return [ transpile(obj), map(keys, (function(key) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:1148:19 */\n    \n      var transpiled = transpile(key),\n          output = outputFormatter(transpiled);\n      return (function() {\n        if (output.match((new RegExp(\"^\\\"[a-zA-Z0-9]+\\\"$\", undefined)))) {\n          return [ \".\", output.replace((new RegExp(\"\\\"\", \"g\")), \"\") ];\n        } else {\n          return [ \"[\", transpiled, \"]\" ];\n        }\n      }).call(this);\n    })) ];\n  });\n  sibilant.macros.namespaces.core.set = (function set$(arr, kvPairs) {\n    /* set /Users/jbr/code/sibilant/include/macros.sibilant:1175:0 */\n  \n    var kvPairs = Array.prototype.slice.call(arguments, 1);\n  \n    return interleave(\"\\n\", bulkMap(kvPairs, (function(k, v) {\n      /* /Users/jbr/code/sibilant/include/macros.sibilant:1176:43 */\n    \n      return {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 38318,\n        line: 1176,\n        col: 52,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"assign\",\n          type: \"literal\",\n          start: 38319,\n          line: 1176,\n          col: 53,\n          length: 6,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 38326,\n          line: 1176,\n          col: 60,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            start: 38327,\n            line: 1176,\n            col: 61,\n            length: 3,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, arr, k ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 38325,\n            line: 1176,\n            col: 59,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, v ],\n        precedingIgnored: [],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      };\n    })));\n  });\n  sibilant.macros.namespaces.core[\"lowerCase__QUERY\"] = (function lowerCase__QUERY$(str) {\n    /* lower-case? /Users/jbr/code/sibilant/include/macros.sibilant:1181:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 38515,\n      line: 1182,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 38516,\n        line: 1182,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 38518,\n        line: 1182,\n        col: 11,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 38519,\n          line: 1182,\n          col: 12,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"to-lower-case\",\n            type: \"literal\",\n            start: 38520,\n            line: 1182,\n            col: 13,\n            length: 13,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 38517,\n          line: 1182,\n          col: 10,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, str ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core[\"upperCase__QUERY\"] = (function upperCase__QUERY$(str) {\n    /* upper-case? /Users/jbr/code/sibilant/include/macros.sibilant:1189:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 38716,\n      line: 1190,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"=\",\n        type: \"otherChar\",\n        start: 38717,\n        line: 1190,\n        col: 9,\n        length: 1,\n        contents: [],\n        specials: 0,\n        precedingIgnored: []\n      }, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 38719,\n        line: 1190,\n        col: 11,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 38720,\n          line: 1190,\n          col: 12,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"to-upper-case\",\n            type: \"literal\",\n            start: 38721,\n            line: 1190,\n            col: 13,\n            length: 13,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: []\n        }, str ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \" \",\n          type: \"whitespace\",\n          start: 38718,\n          line: 1190,\n          col: 10,\n          length: 1,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      }, str ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  sibilant.macros.namespaces.core.sourceMappingUrl = (function sourceMappingUrl$(url) {\n    /* source-mapping-url /Users/jbr/code/sibilant/include/macros.sibilant:1197:0 */\n  \n    return [ \"//# sourceMappingURL=\", eval(outputFormatter(transpile(url))), \"\\n\" ];\n  });\n  sibilant.macros.namespaces.core.sortBy = (function sortBy$(arrayOfObjects, attribute) {\n    /* sort-by /Users/jbr/code/sibilant/include/macros.sibilant:1206:0 */\n  \n    return {\n      dir: \"/Users/jbr/code/sibilant/include\",\n      file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n      token: \"(\",\n      type: \"expression\",\n      start: 39355,\n      line: 1207,\n      col: 8,\n      length: 1,\n      contents: [ {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \".\",\n        type: \"dots\",\n        start: 39356,\n        line: 1207,\n        col: 9,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"sort\",\n          type: \"literal\",\n          start: 39357,\n          line: 1207,\n          col: 10,\n          length: 4,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        } ],\n        precedingIgnored: []\n      }, arrayOfObjects, {\n        dir: \"/Users/jbr/code/sibilant/include\",\n        file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n        token: \"(\",\n        type: \"expression\",\n        start: 39395,\n        line: 1208,\n        col: 15,\n        length: 1,\n        contents: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"#->\",\n          type: \"otherChar\",\n          start: 39396,\n          line: 1208,\n          col: 16,\n          length: 3,\n          contents: [],\n          specials: 0,\n          precedingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 39400,\n          line: 1208,\n          col: 20,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"get\",\n            type: \"literal\",\n            start: 39401,\n            line: 1208,\n            col: 21,\n            length: 3,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          }, attribute ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \" \",\n            type: \"whitespace\",\n            start: 39399,\n            line: 1208,\n            col: 19,\n            length: 1,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \".\",\n          type: \"dots\",\n          start: 39437,\n          line: 1209,\n          col: 20,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"to-string\",\n            type: \"literal\",\n            start: 39438,\n            line: 1209,\n            col: 21,\n            length: 9,\n            contents: [],\n            specials: 0,\n            precedingIgnored: []\n          } ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"\\n\",\n            type: \"newline\",\n            start: 39416,\n            line: 1208,\n            col: 36,\n            length: 1,\n            contents: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"                    \",\n            type: \"whitespace\",\n            start: 39417,\n            line: 1209,\n            col: 0,\n            length: 20,\n            contents: []\n          } ]\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"(\",\n          type: \"expression\",\n          start: 39468,\n          line: 1210,\n          col: 20,\n          length: 1,\n          contents: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \".\",\n            type: \"dots\",\n            start: 39469,\n            line: 1210,\n            col: 21,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"locale-compare\",\n              type: \"literal\",\n              start: 39470,\n              line: 1210,\n              col: 22,\n              length: 14,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            } ],\n            precedingIgnored: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"(\",\n            type: \"expression\",\n            start: 39485,\n            line: 1210,\n            col: 37,\n            length: 1,\n            contents: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"get\",\n              type: \"literal\",\n              start: 39486,\n              line: 1210,\n              col: 38,\n              length: 3,\n              contents: [],\n              specials: 0,\n              precedingIgnored: []\n            }, {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \"#1\",\n              type: \"argPlaceholder\",\n              start: 39490,\n              line: 1210,\n              col: 42,\n              length: 2,\n              contents: [],\n              specials: 0,\n              precedingIgnored: [ {\n                dir: \"/Users/jbr/code/sibilant/include\",\n                file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n                token: \" \",\n                type: \"whitespace\",\n                start: 39489,\n                line: 1210,\n                col: 41,\n                length: 1,\n                contents: []\n              } ]\n            }, attribute ],\n            precedingIgnored: [ {\n              dir: \"/Users/jbr/code/sibilant/include\",\n              file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n              token: \" \",\n              type: \"whitespace\",\n              start: 39484,\n              line: 1210,\n              col: 36,\n              length: 1,\n              contents: []\n            } ],\n            specials: 0,\n            end: undefined,\n            closed: true,\n            closingIgnored: []\n          } ],\n          precedingIgnored: [ {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"\\n\",\n            type: \"newline\",\n            start: 39447,\n            line: 1209,\n            col: 30,\n            length: 1,\n            contents: []\n          }, {\n            dir: \"/Users/jbr/code/sibilant/include\",\n            file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n            token: \"                    \",\n            type: \"whitespace\",\n            start: 39448,\n            line: 1210,\n            col: 0,\n            length: 20,\n            contents: []\n          } ],\n          specials: 0,\n          end: undefined,\n          closed: true,\n          closingIgnored: []\n        } ],\n        precedingIgnored: [ {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"\\n\",\n          type: \"newline\",\n          start: 39379,\n          line: 1207,\n          col: 32,\n          length: 1,\n          contents: []\n        }, {\n          dir: \"/Users/jbr/code/sibilant/include\",\n          file: \"/Users/jbr/code/sibilant/include/macros.sibilant\",\n          token: \"               \",\n          type: \"whitespace\",\n          start: 39380,\n          line: 1208,\n          col: 0,\n          length: 15,\n          contents: []\n        } ],\n        specials: 0,\n        end: undefined,\n        closed: true,\n        closingIgnored: []\n      } ],\n      precedingIgnored: [],\n      specials: 0,\n      end: undefined,\n      closed: true,\n      closingIgnored: []\n    };\n  });\n  var docs = sibilant.docs = {\n    definitions: [],\n    undocumented: {  }\n  };\n  docs.record = (function docs$record$(type, namespace, name, node) {\n    /* docs.record /Users/jbr/code/sibilant/src/docs.sibilant:4:0 */\n  \n    var doc = docs.lastDoc;\n    (function() {\n      if (typeof doc !== \"undefined\") {\n        delete sibilant.docs.undocumented[name];\n        return sibilant.docs.definitions.push(mergeInto(doc, {\n          name: name,\n          type: type,\n          namespace: namespace,\n          definition: node\n        }));\n      } else {\n        return sibilant.docs.undocumented[name] = true;\n      }\n    }).call(this);\n    return delete sibilant.docs.lastDoc;\n  });\n  docs.tags = (function docs$tags$() {\n    /* docs.tags /Users/jbr/code/sibilant/src/docs.sibilant:16:0 */\n  \n    var tags = flatten(pluck(docs.definitions, \"tags\")),\n        counts = {  };\n    tags.forEach((function(tag) {\n      /* /Users/jbr/code/sibilant/src/docs.sibilant:19:5 */\n    \n      return counts[tag] = ((counts[tag] || 0) + 1);\n    }));\n    return counts;\n  });\n  docs.text = (function docs$text$() {\n    /* docs.text /Users/jbr/code/sibilant/src/docs.sibilant:27:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* /Users/jbr/code/sibilant/src/docs.sibilant:29:15 */\n    \n      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n        if (definition.references) {\n          return (\"references:\\n  \" + (definition.references.map((function() {\n            /* /Users/jbr/code/sibilant/src/docs.sibilant:35:51 */\n          \n            return eval(outputFormatter(transpile(arguments[0])));\n          })).join(\"\\n  \") + \"\\n\"));\n        } else {\n          return \"\";\n        }\n      }).call(this) + (function() {\n        if (definition.tags) {\n          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n        } else {\n          return \"\";\n        }\n      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n        /* /Users/jbr/code/sibilant/src/docs.sibilant:46:43 */\n      \n        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n      })).join(\"\\n\\n\") + \"\\n\\n\");\n    })).join(\"\");\n  });\n  docs.textNoColor = (function docs$textNoColor$() {\n    /* docs.text-no-color /Users/jbr/code/sibilant/src/docs.sibilant:53:0 */\n  \n    var stripAnsi = require(\"strip-ansi\");\n    return stripAnsi(docs.text());\n  });\n  docs.json = (function docs$json$() {\n    /* docs.json /Users/jbr/code/sibilant/src/docs.sibilant:57:0 */\n  \n    return JSON.stringify(docs.data());\n  });\n  docs.data = (function docs$data$() {\n    /* docs.data /Users/jbr/code/sibilant/src/docs.sibilant:60:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* /Users/jbr/code/sibilant/src/docs.sibilant:62:6 */\n    \n      return {\n        name: prettify(definition.name, false),\n        namespace: definition.namespace,\n        type: definition.type,\n        description: definition.docString,\n        references: (function() {\n          if (definition.references) {\n            return definition.references.map((function() {\n              /* /Users/jbr/code/sibilant/src/docs.sibilant:68:52 */\n            \n              return arguments[0].token.slice(1, -1);\n            }));\n          } else {\n            return [];\n          }\n        }).call(this),\n        arguments: definition.definition.contents[2].contents.map((function() {\n          /* /Users/jbr/code/sibilant/src/docs.sibilant:73:30 */\n        \n          return prettify(arguments[0], false);\n        })),\n        definition: prettify(definition.definition, false),\n        examples: (definition.examples || []).map((function() {\n          /* /Users/jbr/code/sibilant/src/docs.sibilant:76:29 */\n        \n          return {\n            javascript: outputFormatter(transpile(arguments[0])),\n            sibilant: prettify(arguments[0], false)\n          };\n        })),\n        tags: definition.tags\n      };\n    }));\n  });\n  var tap = (function tap$(item, fn) {\n    /* tap /Users/jbr/code/sibilant/src/helpers.sibilant:3:0 */\n  \n    fn(item);\n    return item;\n  });\n  var recurseIndent = (function recurseIndent$(args) {\n    /* recurse-indent /Users/jbr/code/sibilant/src/helpers.sibilant:7:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return map(args, (function(arg) {\n      /* /Users/jbr/code/sibilant/src/helpers.sibilant:9:10 */\n    \n      return (function() {\n        if (node__QUERY(arg)) {\n          return mergeInto(arg, { contents: recurseIndent.apply(this, compact(flatten(arg.contents))) });\n        } else if (((arg) && typeof (arg) === \"object\" && (arg).constructor.name === \"Array\")) {\n          return recurseIndent.apply(this, arg);\n        } else if (typeof arg === \"number\") {\n          return arg.toString();\n        } else if (typeof arg === \"string\") {\n          return arg.replace((new RegExp(\"\\\\n\", \"g\")), \"\\n  \").replace((new RegExp(\"\\\\n\\\\s+\\\\n\", \"g\")), \"\\n\\n\");\n        } else {\n          return arg;\n        }\n      }).call(this);\n    }));\n  });\n  var indent = (function indent$(args) {\n    /* indent /Users/jbr/code/sibilant/src/helpers.sibilant:24:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"\\n  \", recurseIndent(map(args, transpile)), \"\\n\" ];\n  });\n  var escapeRegex = (function escapeRegex$(string) {\n    /* escape-regex /Users/jbr/code/sibilant/src/helpers.sibilant:27:0 */\n  \n    return string.replace((new RegExp(\"[\\\\-\\\\[\\\\]\\\\/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\^\\\\$\\\\|]\", \"g\")), \"\\\\$&\");\n  });\n  var qescape = (function qescape$(content) {\n    /* qescape /Users/jbr/code/sibilant/src/helpers.sibilant:30:0 */\n  \n    return (function() {\n      if (!((typeof content !== \"undefined\" && content !== null))) {\n        return \"\";\n      } else if (typeof content === \"string\") {\n        return content.split(\"\\\\\\\\ \"[0]).join(\"\\\\\\\\ \".slice(0, -1)).replace((new RegExp(\"\\\"\", \"g\")), \"\\\\\\\"\").replace((new RegExp(\"\\\\n\", \"g\")), \"\\\\n\\\" +\\n\\\"\");\n      } else {\n        return content;\n      }\n    }).call(this);\n  });\n  var mapNode = (function mapNode$(node, fn) {\n    /* map-node /Users/jbr/code/sibilant/src/helpers.sibilant:39:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        var mappedNode = fn(node);\n        (function() {\n          if (node__QUERY(mappedNode)) {\n            return mappedNode.contents = mapNode(mappedNode.contents, fn);\n          }\n        }).call(this);\n        return mappedNode;\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, (function() {\n          /* /Users/jbr/code/sibilant/src/helpers.sibilant:48:32 */\n        \n          return mapNode(arguments[0], fn);\n        }));\n      } else {\n        return fn(node);\n      }\n    }).call(this);\n  });\n  var eachNode = (function eachNode$(node, fn) {\n    /* each-node /Users/jbr/code/sibilant/src/helpers.sibilant:51:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        return (function() {\n          if (fn(node)) {\n            return eachNode(node.contents, fn);\n          }\n        }).call(this);\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return node.forEach((function(c) {\n          /* /Users/jbr/code/sibilant/src/helpers.sibilant:53:22 */\n        \n          return eachNode(c, fn);\n        }));\n      } else {\n        return fn(node);\n      }\n    }).call(this);\n  });\n  var statement__QUERY = (function statement__QUERY$(transpiled) {\n    /* statement? /Users/jbr/code/sibilant/src/helpers.sibilant:56:0 */\n  \n    return (function() {\n      if (node__QUERY(transpiled)) {\n        return statement__QUERY(transpiled.contents);\n      } else if (((transpiled) && typeof (transpiled) === \"object\" && (transpiled).constructor.name === \"Array\")) {\n        return statement__QUERY(transpiled.slice(-1)[0]);\n      } else if (typeof transpiled === \"string\") {\n        return \";\" === transpiled.slice(-1)[0];\n      } else {\n        return false;\n      }\n    }).call(this);\n  });\n  var asStatement = (function asStatement$(node) {\n    /* as-statement /Users/jbr/code/sibilant/src/helpers.sibilant:62:0 */\n  \n    var transpiled = transpile(node);\n    return (function() {\n      if (emptyNode__QUERY(transpiled)) {\n        return undefined;\n      } else if (statement__QUERY(transpiled)) {\n        return transpiled;\n      } else {\n        return [ transpiled, \";\" ];\n      }\n    }).call(this);\n  });\n  var unquote__QUERY = (function unquote__QUERY$(node) {\n    /* unquote? /Users/jbr/code/sibilant/src/helpers.sibilant:69:0 */\n  \n    return node__QUERY(node, \"at\");\n  });\n  var findUnquotes = (function findUnquotes$(node) {\n    /* find-unquotes /Users/jbr/code/sibilant/src/helpers.sibilant:71:0 */\n  \n    var unquotes = {  };\n    eachNode(node, (function(n) {\n      /* /Users/jbr/code/sibilant/src/helpers.sibilant:73:21 */\n    \n      (function() {\n        if (unquote__QUERY(n)) {\n          return unquotes[n.nodeId] = transpile(n);\n        }\n      }).call(this);\n      return !(node__QUERY(n, \"tick\"));\n    }));\n    return unquotes;\n  });\n  var spliceDots = (function spliceDots$(node) {\n    /* splice-dots /Users/jbr/code/sibilant/src/helpers.sibilant:79:0 */\n  \n    (function() {\n      if ((node && ((node.contents) && typeof (node.contents) === \"object\" && (node.contents).constructor.name === \"Array\"))) {\n        var contents = [];\n        node.contents.forEach((function(content) {\n          /* /Users/jbr/code/sibilant/src/helpers.sibilant:82:11 */\n        \n          return (function() {\n            if ((node__QUERY(content, \"dots\") && ((content.contents) && typeof (content.contents) === \"object\" && (content.contents).constructor.name === \"Array\") && content.contents.length === 1 && ((content.contents[0]) && typeof (content.contents[0]) === \"object\" && (content.contents[0]).constructor.name === \"Array\"))) {\n              return contents.push.apply(contents, content.contents[0]);\n            } else {\n              return contents.push(content);\n            }\n          }).call(this);\n        }));\n        return node.contents = contents;\n      }\n    }).call(this);\n    return node;\n  });\n  var alternatingKeysAndValues = (function alternatingKeysAndValues$(hash) {\n    /* alternating-keys-and-values /Users/jbr/code/sibilant/src/helpers.sibilant:94:0 */\n  \n    return flatten(map(Object.keys(hash), (function(key) {\n      /* /Users/jbr/code/sibilant/src/helpers.sibilant:96:19 */\n    \n      return [ key, hash[key] ];\n    })));\n  });\n  var mapNodeForQuoteExpansion = (function mapNodeForQuoteExpansion$(node, expansions) {\n    /* map-node-for-quote-expansion /Users/jbr/code/sibilant/src/helpers.sibilant:99:0 */\n  \n    return (function() {\n      if (node__QUERY(node)) {\n        var mappedNode = (function() {\n          if (expansions.hasOwnProperty(node.nodeId)) {\n            return expansions[node.nodeId];\n          } else {\n            return clone(node);\n          }\n        }).call(this);\n        (function() {\n          if (node__QUERY(mappedNode)) {\n            return mappedNode.contents = mapNodeForQuoteExpansion(mappedNode.contents, expansions);\n          }\n        }).call(this);\n        mappedNode = spliceDots(mappedNode);\n        return mappedNode;\n      } else if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, (function() {\n          /* /Users/jbr/code/sibilant/src/helpers.sibilant:110:19 */\n        \n          return mapNodeForQuoteExpansion(arguments[0], expansions);\n        }));\n      } else {\n        return node;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.return = (function sibilant$macros$namespaces$core$return$(token) {\n    /* ^return /Users/jbr/code/sibilant/src/core.sibilant:1:0 */\n  \n    (function() {\n      if (sibilant.debug) {\n        return console.log(\"returning \", prettify(token));\n      }\n    }).call(this);\n    var defaultReturn = asStatement([ \"return \", transpile(token) ]);\n    return (function() {\n      if ((token && token.contents && token.contents.length)) {\n        return (function() {\n          switch(token.contents[0].token) {\n          case \"return\":\n          case \"throw\":\n          case \"do\":\n            return transpile(token);\n          \n          case \"delete\":\n            var deleteMacro = macros.delete;\n            return (function() {\n              if (token.contents.length < 3) {\n                return defaultReturn;\n              } else {\n                return [ asStatement(deleteMacro.apply(this, token.contents.slice(1, -1))), \"\\nreturn \", asStatement(deleteMacro(token.contents.slice(-1)[0])) ];\n              }\n            }).call(this);\n          \n          case \"def\":\n            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return(token.contents[1]) ];\n          \n          case \"assign\":\n            return (function() {\n              if (token.contents.length < 4) {\n                return defaultReturn;\n              } else {\n                var result = clone(transpile(token));\n                result.contents = result.contents.slice(0, -4).concat([ \"return \" ], result.contents.slice(-4));\n                return result;\n              }\n            }).call(this);\n          \n          case \"var\":\n            return [ transpile(token), \"\\n\", sibilant.macros.namespaces.core.return((function() {\n              if (0 === (token.contents.length % 2)) {\n                return token.contents.slice(-1)[0];\n              } else {\n                return token.contents.slice(-2)[0];\n              }\n            }).call(this)) ];\n          \n          case \"set\":\n            return (function() {\n              if (token.contents.length < 5) {\n                return defaultReturn;\n              } else {\n                var obj = token.contents[1],\n                    nonReturnPart = token.contents.slice(2, (token.contents.length - 2)),\n                    returnPart = token.contents.slice(-2);\n                nonReturnPart.unshift(obj);\n                returnPart.unshift(obj);\n                return [ sibilant.macros.namespaces.core.set.apply(this, nonReturnPart), \"\\nreturn \", sibilant.macros.namespaces.core.set.apply(this, returnPart) ];\n              }\n            }).call(this);\n          \n          default:\n            return defaultReturn;\n          }\n        }).call(this);\n      } else {\n        return defaultReturn;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.do = (function sibilant$macros$namespaces$core$do$(body) {\n    /* ^do /Users/jbr/code/sibilant/src/core.sibilant:48:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    return (function() {\n      if (1 === body.length) {\n        return sibilant.macros.namespaces.core.return(body[0]);\n      } else if (body.length) {\n        return [ interleave(map(body.slice(0, -1), (function() {\n          /* /Users/jbr/code/sibilant/src/core.sibilant:56:19 */\n        \n          return asStatement(arguments[0]);\n        })), \"\\n\"), \"\\n\", sibilant.macros.namespaces.core.return(body.slice(-1)[0]) ];\n      } else {\n        return \"\";\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.emptyList = (function sibilant$macros$namespaces$core$emptyList$() {\n    /* ^empty-list /Users/jbr/code/sibilant/src/core.sibilant:63:0 */\n  \n    return \"null\";\n  });\n  sibilant.macros.namespaces.core.def = (function sibilant$macros$namespaces$core$def$(fnName, args, body) {\n    /* ^def /Users/jbr/code/sibilant/src/core.sibilant:65:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    (function() {\n      if (typeof fnName === \"undefined\") {\n        return error(\"invalid function definition. missing name.\");\n      } else if (typeof args === \"undefined\") {\n        return error(\"invalid function definition. missing arguments or return value.\");\n      }\n    }).call(this);\n    var fnNameTr = transpile(fnName),\n        thisNode = this;\n    sibilant.docs.record(\"function\", sibilant.macros.searchPath[0], fnName, this);\n    return asStatement([ (function() {\n      if (outputFormatter(fnNameTr).match((new RegExp(\"\\\\.\", undefined)))) {\n        return \"\";\n      } else {\n        return \"var \";\n      }\n    }).call(this), fnNameTr, \" = \", sibilant.macros.namespaces.core.lambda.apply(this, [ {\n      name: fnName,\n      args: args,\n      node: thisNode\n    } ].concat(body)) ]);\n  });\n  sibilant.macros.namespaces.core.macro = (function sibilant$macros$namespaces$core$macro$(name, args, body) {\n    /* ^macro /Users/jbr/code/sibilant/src/core.sibilant:77:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 2);\n  \n    var nameTr = outputFormatter(transpile(name)),\n        options = {\n      name: name,\n      args: args,\n      node: this\n    },\n        js = outputFormatter(sibilant.macros.namespaces.core.lambda.apply(this, [ options ].concat(body)));\n    (function() {\n      if (sibilant.debug) {\n        return console.log(js);\n      }\n    }).call(this);\n    sibilant.docs.record(\"macro\", sibilant.macros.searchPath[0], name, this);\n    var evaledJs = (function() {\n      try {\n        return eval(js);\n      } catch (e) {\n        console.log(e.message);\n        console.log(red(e.stack.split(\"\\n\")[1]));\n        return console.log((\"error in parsing macro \" + sibilant.prettyPrint(name) + \":\\n\" + js));\n      }\n    }).call(this);\n    sibilant.macros.namespace[nameTr] = evaledJs;\n    return undefined;\n  });\n  sibilant.macros.namespaces.core.meta = (function sibilant$macros$namespaces$core$meta$(body) {\n    /* ^meta /Users/jbr/code/sibilant/src/core.sibilant:97:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 0);\n  \n    var js = outputFormatter(transpile(sibilant.macros.namespaces.core.scoped.apply(this, body)));\n    (function() {\n      if (sibilant.debug) {\n        return console.log(js);\n      }\n    }).call(this);\n    return outputFormatter(eval(js));\n  });\n  sibilant.macros.namespaces.core.concat = (function sibilant$macros$namespaces$core$concat$(args) {\n    /* ^concat /Users/jbr/code/sibilant/src/core.sibilant:103:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    return [ \"(\", interleave(\" + \", map(args, transpile)), \")\" ];\n  });\n  sibilant.macros.namespaces.core.reverse = (function sibilant$macros$namespaces$core$reverse$(arr) {\n    /* ^reverse /Users/jbr/code/sibilant/src/core.sibilant:106:0 */\n  \n    var reversed = [];\n    arr.forEach((function(item) {\n      /* /Users/jbr/code/sibilant/src/core.sibilant:108:5 */\n    \n      return reversed.unshift(item);\n    }));\n    return reversed;\n  });\n  var reverse = sibilant.macros.namespaces.core.reverse;\n  sibilant.macros.namespaces.core.lambda = (function sibilant$macros$namespaces$core$lambda$(argsOrOptions, body) {\n    /* ^lambda /Users/jbr/code/sibilant/src/core.sibilant:113:0 */\n  \n    var body = Array.prototype.slice.call(arguments, 1);\n  \n    (function() {\n      if (sibilant.debug) {\n        return console.log(argsOrOptions);\n      }\n    }).call(this);\n    var args = (argsOrOptions.args || argsOrOptions),\n        body = (argsOrOptions.body || body),\n        args = (function() {\n      if (node__QUERY(args, \"expression\")) {\n        return args.contents;\n      } else if ((node__QUERY(args) && 0 === body.length)) {\n        body = [ args ];\n        return [];\n      } else {\n        return args;\n      }\n    }).call(this),\n        name = (function() {\n      if (argsOrOptions.name) {\n        return outputFormatter(transpile(argsOrOptions.name)).replace((new RegExp(\"\\\\W+\", \"g\")), \"$\").concat(\"$\");\n      }\n    }).call(this),\n        rest = detect(args, (function() {\n      /* /Users/jbr/code/sibilant/src/core.sibilant:128:23 */\n    \n      return node__QUERY(arguments[0], \"dots\");\n    }));\n    var thisNode = this,\n        node = detect([ argsOrOptions.node, thisNode, argsOrOptions.name, args, body[0] ], (function(n) {\n      /* /Users/jbr/code/sibilant/src/core.sibilant:133:16 */\n    \n      return (node__QUERY(n) && n.file);\n    }));\n    return [ \"(function\", (function() {\n      if (name) {\n        return (\" \" + name);\n      } else {\n        return \"\";\n      }\n    }).call(this), \"(\", interleave(\", \", map(args, transpile)), \") {\", (function() {\n      if ((argsOrOptions.name || node)) {\n        return indent([ \"/*\", (function() {\n          if (argsOrOptions.name) {\n            return (\" \" + sibilant.prettyPrint(argsOrOptions.name, false));\n          } else {\n            return \"\";\n          }\n        }).call(this), (function() {\n          if (node) {\n            return (\" \" + node.file + \":\" + node.line + \":\" + node.col);\n          } else {\n            return \"\";\n          }\n        }).call(this), \" */\" ]);\n      } else {\n        return \"\";\n      }\n    }).call(this), (function() {\n      if ((typeof rest !== \"undefined\" && rest !== null)) {\n        return indent(asStatement([ \"var \", transpile(rest), \" = Array.prototype.slice.call(arguments, \", (args.length - 1), \")\" ]));\n      }\n    }).call(this), indent(sibilant.macros.namespaces.core.do.apply(this, body)), \"})\" ];\n  });\n  sibilant.macros.namespaces.core[\"#\"] = sibilant.macros.namespaces.core.lambda;\n  sibilant.macros.namespaces.core.quotedHash = (function sibilant$macros$namespaces$core$quotedHash$(pairs) {\n    /* ^quoted-hash /Users/jbr/code/sibilant/src/core.sibilant:151:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    var cachedQuoteValue = sibilant.quoteHashKeys;\n    sibilant.quoteHashKeys = true;\n    var value = sibilant.macros.namespaces.core.hash.apply(this, pairs);\n    sibilant.quoteHashKeys = cachedQuoteValue;\n    return value;\n  });\n  sibilant.macros.namespaces.core.hash = (function sibilant$macros$namespaces$core$hash$(pairs) {\n    /* ^hash /Users/jbr/code/sibilant/src/core.sibilant:158:0 */\n  \n    var pairs = Array.prototype.slice.call(arguments, 0);\n  \n    (function() {\n      if (1 === (pairs.length % 2)) {\n        return error((\"odd number of key-value pairs in hash: \" + inspect(pairs)));\n      }\n    }).call(this);\n    var quoteKeys = sibilant.quoteHashKeys,\n        pairStrings = bulkMap(pairs, (function(key, value) {\n      /* /Users/jbr/code/sibilant/src/core.sibilant:164:39 */\n    \n      return [ (function() {\n        if ((quoteKeys && !(node__QUERY(key, \"string\")))) {\n          return [ \"\\\"\", transpile(key), \"\\\"\" ];\n        } else {\n          return transpile(key);\n        }\n      }).call(this), \": \", transpile(value) ];\n    }));\n    return (function() {\n      if (1 >= pairStrings.length) {\n        return [ \"{ \", interleave(\", \", pairStrings), \" }\" ];\n      } else {\n        return [ \"{\", indent(interleave(\",\\n\", pairStrings)), \"}\" ];\n      }\n    }).call(this);\n  });\n  var replace__BANG = (function replace__BANG$(content) {\n    /* replace! /Users/jbr/code/sibilant/src/core.sibilant:174:0 */\n  \n    return (function() {\n      if ((node__QUERY(content, \"dots\") && 3 === content.token.length && node__QUERY(content.contents[0], \"at\"))) {\n        return mergeInto(clone(content), { contents: [ transpile(content.contents[0]) ] });\n      } else if (node__QUERY(content, \"at\")) {\n        return transpile(content.contents[0]);\n      } else if (node__QUERY(content, \"tick\")) {\n        return JSON.stringify(content);\n      } else if ((\"object\" === typeof content && content !== null && content.constructor.name !== \"Array\")) {\n        return sibilant.macros.namespaces.core.hash.apply(this, Object.keys(content).reduce((function() {\n          /* /Users/jbr/code/sibilant/src/core.sibilant:191:21 */\n        \n          return arguments[0].concat([ arguments[1], replace__BANG(content[arguments[1]]) ]);\n        }), []));\n      } else if (((content) && typeof (content) === \"object\" && (content).constructor.name === \"Array\")) {\n        return sibilant.macros.namespaces.core.list.apply(this, map(content, replace__BANG));\n      } else if (typeof content === \"undefined\") {\n        return \"undefined\";\n      } else if (typeof content === \"number\") {\n        return content.toString();\n      } else {\n        return JSON.stringify(content);\n      }\n    }).call(this);\n  });\n  var prettyLogAndReturn = (function prettyLogAndReturn$(content) {\n    /* pretty-log-and-return /Users/jbr/code/sibilant/src/core.sibilant:206:0 */\n  \n    console.log(sibilant.prettyPrint(content));\n    return content;\n  });\n  sibilant.macros.namespaces.core.quote = (function sibilant$macros$namespaces$core$quote$(content) {\n    /* ^quote /Users/jbr/code/sibilant/src/core.sibilant:210:0 */\n  \n    var unquotes = findUnquotes(content);\n    return (function() {\n      if (typeof content === \"string\") {\n        return (\"\\\"\" + qescape(content) + \"\\\"\");\n      } else if (typeof content === \"number\") {\n        return sibilant.macros.namespaces.core.quote(content.toString());\n      } else if (node__QUERY(content, \"literal\", \"otherChar\")) {\n        return [ \"\\\"\", transpile(content), \"\\\"\" ];\n      } else if (Object.keys(unquotes).length) {\n        return replace__BANG(content, unquotes);\n      } else if (node__QUERY(content, \"expression\")) {\n        return [ \"\\\"\", mapNode(transpile(content), qescape), \"\\\"\" ];\n      } else if (node__QUERY(content, \"bracket\")) {\n        return sibilant.macros.namespaces.core.list.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n      } else if (node__QUERY(content, \"brace\")) {\n        return sibilant.macros.namespaces.core.hash.apply(this, map(content.contents, sibilant.macros.namespaces.core.quote));\n      } else {\n        console.log((\"unknown content\" + inspect(content)));\n        return content;\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.debug = (function sibilant$macros$namespaces$core$debug$(val) {\n    /* ^debug /Users/jbr/code/sibilant/src/core.sibilant:233:0 */\n  \n    sibilant.debug = eval(outputFormatter(transpile(val)));\n    return null;\n  });\n  sibilant.macros.namespaces.core.expandQuote = (function sibilant$macros$namespaces$core$expandQuote$(node, expansions) {\n    /* ^expand-quote /Users/jbr/code/sibilant/src/core.sibilant:236:0 */\n  \n    return transpile(mapNodeForQuoteExpansion((function() {\n      if (node__QUERY(node)) {\n        return node;\n      } else {\n        return sibilant.nodeCache[node];\n      }\n    }).call(this), expansions));\n  });\n  sibilant.macros.namespaces.core.list = (function sibilant$macros$namespaces$core$list$(args) {\n    /* ^list /Users/jbr/code/sibilant/src/core.sibilant:242:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 0);\n  \n    var argSegments = [];\n    return (function() {\n      if (0 === args.length) {\n        return \"[]\";\n      } else {\n        var simpleList = (function simpleList$(args) {\n          /* simple-list /Users/jbr/code/sibilant/src/core.sibilant:246:12 */\n        \n          return [ \"[ \", interleave(\", \", map(args, (function(arg) {\n            /* /Users/jbr/code/sibilant/src/core.sibilant:247:50 */\n          \n            return arg.transpiled;\n          }))), \" ]\" ];\n        });\n        args.forEach((function(arg) {\n          /* /Users/jbr/code/sibilant/src/core.sibilant:249:27 */\n        \n          return (function() {\n            if (node__QUERY(arg, \"dots\")) {\n              return argSegments.push({ transpiled: transpile(arg) });\n            } else if (((argSegments.slice(-1)[0]) && typeof (argSegments.slice(-1)[0]) === \"object\" && (argSegments.slice(-1)[0]).constructor.name === \"Array\")) {\n              return argSegments.slice(-1)[0].push({ transpiled: transpile(arg) });\n            } else {\n              return argSegments.push([ { transpiled: transpile(arg) } ]);\n            }\n          }).call(this);\n        }));\n        argSegments = map(argSegments, (function(segment) {\n          /* /Users/jbr/code/sibilant/src/core.sibilant:255:38 */\n        \n          return (function() {\n            if (((segment) && typeof (segment) === \"object\" && (segment).constructor.name === \"Array\")) {\n              return simpleList(segment);\n            } else {\n              return segment.transpiled;\n            }\n          }).call(this);\n        }));\n        return (function() {\n          if (1 === argSegments.length) {\n            return argSegments[0];\n          } else {\n            return [ argSegments[0], \".concat(\", interleave(\", \", argSegments.slice(1)), \")\" ];\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.call = (function sibilant$macros$namespaces$core$call$(fnName, args) {\n    /* ^call /Users/jbr/code/sibilant/src/core.sibilant:265:0 */\n  \n    var args = Array.prototype.slice.call(arguments, 1);\n  \n    return (function() {\n      if (any__QUERY(args, (function() {\n        /* /Users/jbr/code/sibilant/src/core.sibilant:266:20 */\n      \n        return node__QUERY(arguments[0], \"dots\");\n      }))) {\n        return macros.apply(fnName, macros.list.apply(this, args));\n      } else {\n        return [ transpile(fnName), \"(\", interleave(\", \", map(args, transpile)), \")\" ];\n      }\n    }).call(this);\n  });\n  sibilant.macros.namespaces.core.dots = (function sibilant$macros$namespaces$core$dots$(contents) {\n    /* ^dots /Users/jbr/code/sibilant/src/core.sibilant:271:0 */\n  \n    var contents = Array.prototype.slice.call(arguments, 0);\n  \n    return transpile(contents);\n  });\n  sibilant.macros.namespaces.core.include = (function sibilant$macros$namespaces$core$include$(files) {\n    /* ^include /Users/jbr/code/sibilant/src/core.sibilant:274:0 */\n  \n    var files = Array.prototype.slice.call(arguments, 0);\n  \n    return interleave(files.map((function(file) {\n      /* /Users/jbr/code/sibilant/src/core.sibilant:276:17 */\n    \n      return sibilant.withDefaultSearchPath((function() {\n        /* /Users/jbr/code/sibilant/src/core.sibilant:278:20 */\n      \n        return sibilant.include(eval(outputFormatter(transpile(file))));\n      }));\n    })), \"\\n\");\n  });\n  sibilant.macros.namespaces.core.docs = (function sibilant$macros$namespaces$core$docs$(options) {\n    /* ^docs /Users/jbr/code/sibilant/src/core.sibilant:285:0 */\n  \n    var options = Array.prototype.slice.call(arguments, 0);\n  \n    var optionsString = undefined,\n        optionsHash = {  };\n    (function() {\n      if (1 === (options.length % 2)) {\n        return (function() {\n          if ((node__QUERY(options[0], \"string\") || typeof options[0] === \"string\")) {\n            return optionsString = options.shift();\n          } else if ((node__QUERY(options.slice(-1)[0], \"string\") || typeof options.slice(-1)[0] === \"string\")) {\n            return optionsString = options.pop();\n          }\n        }).call(this);\n      }\n    }).call(this);\n    bulkMap(options, (function(key, value) {\n      /* /Users/jbr/code/sibilant/src/core.sibilant:296:23 */\n    \n      return optionsHash[outputFormatter(transpile(key))] = value;\n    }));\n    [ \"examples\", \"references\" ].forEach((function(listAttribute) {\n      /* /Users/jbr/code/sibilant/src/core.sibilant:299:5 */\n    \n      return (function() {\n        if ((optionsHash.hasOwnProperty(listAttribute) && node__QUERY(optionsHash[listAttribute], \"bracket\"))) {\n          return optionsHash[listAttribute] = optionsHash[listAttribute].contents;\n        }\n      }).call(this);\n    }));\n    (function() {\n      if (optionsHash.hasOwnProperty(\"example\")) {\n        (function() {\n          if (optionsHash.hasOwnProperty(\"examples\")) {\n            return error(\"please provide example OR examples, not both\");\n          }\n        }).call(this);\n        optionsHash.examples = [ optionsHash.example ];\n        return delete optionsHash.example;\n      }\n    }).call(this);\n    (function() {\n      if (optionsHash.hasOwnProperty(\"tags\")) {\n        return optionsHash.tags = eval(outputFormatter(transpile(sibilant.macros.namespaces.core.quote(optionsHash.tags))));\n      }\n    }).call(this);\n    (function() {\n      if (node__QUERY(optionsString, \"string\")) {\n        return optionsHash.docString = eval(outputFormatter(transpile(optionsString)));\n      } else if (typeof optionsString === \"string\") {\n        return optionsHash.docString = optionsString;\n      }\n    }).call(this);\n    sibilant.docs.lastDoc = optionsHash;\n    return null;\n  });\n  var node__QUERY = (function node__QUERY$(thing, types) {\n    /* node? /Users/jbr/code/sibilant/src/transpiler.sibilant:1:0 */\n  \n    var types = Array.prototype.slice.call(arguments, 1);\n  \n    return ((typeof thing !== \"undefined\" && thing !== null) && \"object\" === typeof thing && typeof thing.type === \"string\" && (0 === types.length || types.indexOf(thing.type) !== -1) && thing.hasOwnProperty(\"contents\"));\n  });\n  var emptyNode__QUERY = (function emptyNode__QUERY$(item) {\n    /* empty-node? /Users/jbr/code/sibilant/src/transpiler.sibilant:9:0 */\n  \n    return (function() {\n      if (node__QUERY(item)) {\n        return emptyNode__QUERY(item.contents);\n      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        return all__QUERY(item, emptyNode__QUERY);\n      } else if (typeof item === \"string\") {\n        return item.match((new RegExp(\"^\\\\s*$\", undefined)));\n      } else {\n        return (null === item || typeof item === \"undefined\" || false === item);\n      }\n    }).call(this);\n  });\n  var compactNode = (function compactNode$(item) {\n    /* compact-node /Users/jbr/code/sibilant/src/transpiler.sibilant:17:0 */\n  \n    return (function() {\n      if (node__QUERY(item)) {\n        item.contents = compactNode(item.contents);\n        return (function() {\n          if ((item.contents && item.contents.length)) {\n            return item;\n          } else {\n            return null;\n          }\n        }).call(this);\n      } else if (((item) && typeof (item) === \"object\" && (item).constructor.name === \"Array\")) {\n        var compacted = compact(map(item, compactNode));\n        return (function() {\n          if ((compacted && compacted.length)) {\n            return compacted;\n          } else {\n            return null;\n          }\n        }).call(this);\n      } else {\n        return (function() {\n          if ((item === \"\" || item === false)) {\n            return null;\n          } else {\n            return item;\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  var recurseTranspile = (function recurseTranspile$(node) {\n    /* recurse-transpile /Users/jbr/code/sibilant/src/transpiler.sibilant:26:0 */\n  \n    return (function() {\n      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return map(node, recurseTranspile);\n      } else if (node__QUERY(node, \"output\")) {\n        return mergeInto(node, { contents: recurseTranspile(node.contents) });\n      } else if (node__QUERY(node)) {\n        return transpile(node);\n      } else {\n        return node;\n      }\n    }).call(this);\n  });\n  var transpile = (function transpile$(node, preprocessor) {\n    /* transpile /Users/jbr/code/sibilant/src/transpiler.sibilant:38:0 */\n  \n    (function() {\n      if (typeof node === \"string\") {\n        return node = {\n          type: \"js\",\n          token: node,\n          contents: []\n        };\n      } else if (typeof node === \"number\") {\n        return node = {\n          type: \"number\",\n          token: node.toString(),\n          contents: []\n        };\n      }\n    }).call(this);\n    return (function() {\n      if (((node) && typeof (node) === \"object\" && (node).constructor.name === \"Array\")) {\n        return node;\n      } else if ((typeof node !== \"undefined\" && node !== null)) {\n        var transpiler = (transpile[node.type] || transpile.default),\n            result = transpiler(node),\n            resultNode = recurseTranspile((function() {\n          if (node__QUERY(result)) {\n            return result;\n          } else {\n            return {\n              contents: result,\n              type: \"output\"\n            };\n          }\n        }).call(this));\n        (function() {\n          if (typeof resultNode === \"undefined\") {\n            console.log((\"\" + node.file + \":\" + node.line + \":\" + node.col + \"\\n\" + prettify(node) + \"\"));\n            console.log(prettify(result));\n            console.log(prettify(transpile(result)));\n            throw (new Error((\"Encountered an undefined return from recursive transpile.\\n\" + \"Please report this bug at \" + \"https://github.com/jbr/sibilant/issues/new\")))\n          }\n        }).call(this);\n        resultNode.contents = compact(flatten(resultNode.contents));\n        resultNode.source = node;\n        (function() {\n          if (5 > sibilant.debug) {\n            return console.log(prettify(node), red(\"->\"), prettify(resultNode));\n          }\n        }).call(this);\n        return (function() {\n          if (emptyNode__QUERY(resultNode)) {\n            return undefined;\n          } else {\n            return resultNode;\n          }\n        }).call(this);\n      }\n    }).call(this);\n  });\n  sibilant.transpile = transpile;\n  var readerMacros = {  };\n  transpile.hat = (function transpile$hat$(node) {\n    /* transpile.hat /Users/jbr/code/sibilant/src/transpiler.sibilant:85:0 */\n  \n    var token = node.contents[0].token,\n        $_symbol6_$ = (function() {\n      if (token.match((new RegExp(\"\\/\", undefined)))) {\n        return token.split(\"/\");\n      } else {\n        return [ sibilant.macros.searchPath[0], token ];\n      }\n    }).call(this),\n        namespace = $_symbol6_$[0],\n        macro = $_symbol6_$[1],\n        $_symbol6_$ = undefined;\n    return sibilant.macros.namespaces.core.get.call(node, \"sibilant.macros.namespaces\", sibilant.macros.namespaces.core.quote(transpile.literal({ token: namespace })), sibilant.macros.namespaces.core.quote(transpile.literal({ token: macro })));\n  });\n  transpile.tick = (function transpile$tick$(node) {\n    /* transpile.tick /Users/jbr/code/sibilant/src/transpiler.sibilant:96:0 */\n  \n    return sibilant.macros.namespaces.core.quote.apply(node, node.contents);\n  });\n  transpile.at = (function transpile$at$(node) {\n    /* transpile.at /Users/jbr/code/sibilant/src/transpiler.sibilant:99:0 */\n  \n    return transpile(node.contents[0]);\n  });\n  transpile.dots = (function transpile$dots$(node) {\n    /* transpile.dots /Users/jbr/code/sibilant/src/transpiler.sibilant:102:0 */\n  \n    return sibilant.macros.namespaces.core.dots.apply(node, node.contents);\n  });\n  transpile.default = (function transpile$default$(node) {\n    /* transpile.default /Users/jbr/code/sibilant/src/transpiler.sibilant:105:0 */\n  \n    return node.token;\n  });\n  transpile.output = (function transpile$output$(node) {\n    /* transpile.output /Users/jbr/code/sibilant/src/transpiler.sibilant:108:0 */\n  \n    return node;\n  });\n  transpile.number = (function transpile$number$(node) {\n    /* transpile.number /Users/jbr/code/sibilant/src/transpiler.sibilant:111:0 */\n  \n    return parseFloat(node.token.replace((new RegExp(\",\", \"g\")), \"\")).toString();\n  });\n  transpile.root = (function transpile$root$(node) {\n    /* transpile.root /Users/jbr/code/sibilant/src/transpiler.sibilant:117:0 */\n  \n    return (function() {\n      if (1 === node.contents.length) {\n        return transpile(node.contents[0]);\n      } else {\n        return interleave(compact(map(node.contents, asStatement)), \"\\n\");\n      }\n    }).call(this);\n  });\n  transpile.expression = (function transpile$expression$(node, preprocessor) {\n    /* transpile.expression /Users/jbr/code/sibilant/src/transpiler.sibilant:126:0 */\n  \n    return (function() {\n      if (node.contents.length) {\n        var head = node.contents[0],\n            args = node.contents,\n            macro = sibilant.resolveMacro(\"call\");\n        (function() {\n          if (node__QUERY(head, \"string\")) {\n            return macro = sibilant.resolveMacro(\"concat\");\n          } else if (node__QUERY(head, \"dots\")) {\n            macro = sibilant.resolveMacro(\"send\");\n            return args = [ node.contents[1], head.contents[0] ].concat(node.contents.slice(2));\n          } else if (node__QUERY(head, \"literal\", \"otherChar\")) {\n            var resolvedMacro = sibilant.resolveMacro(outputFormatter(transpile(head)));\n            return (function() {\n              if (resolvedMacro) {\n                head.hint = \"macro\";\n                macro = resolvedMacro;\n                return args = node.contents.slice(1);\n              }\n            }).call(this);\n          }\n        }).call(this);\n        return macro.apply(node, args);\n      } else {\n        return \"null\";\n      }\n    }).call(this);\n  });\n  transpile.bracket = (function transpile$bracket$(node) {\n    /* transpile.bracket /Users/jbr/code/sibilant/src/transpiler.sibilant:152:0 */\n  \n    return sibilant.macros.namespaces.core.list.apply(this, node.contents);\n  });\n  transpile.brace = (function transpile$brace$(node) {\n    /* transpile.brace /Users/jbr/code/sibilant/src/transpiler.sibilant:155:0 */\n  \n    return sibilant.macros.namespaces.core.hash.apply(this, node.contents);\n  });\n  transpile.literal = (function transpile$literal$(node) {\n    /* transpile.literal /Users/jbr/code/sibilant/src/transpiler.sibilant:157:0 */\n  \n    var string = node.token;\n    return inject(string.replace((new RegExp(\"\\\\*\", \"g\")), \"_\").replace((new RegExp(\"\\\\?$\", undefined)), \"__QUERY\").replace((new RegExp(\"!$\", undefined)), \"__BANG\"), string.match((new RegExp(\"-(.)\", \"g\"))), (function(returnString, match) {\n      /* /Users/jbr/code/sibilant/src/transpiler.sibilant:164:13 */\n    \n      return returnString.replace(match, match[1].toUpperCase());\n    }));\n  });\n  transpile.string = (function transpile$string$(node) {\n    /* transpile.string /Users/jbr/code/sibilant/src/transpiler.sibilant:168:0 */\n  \n    return node.token.split(\"\\n\").join(\"\\\\n\\\" +\\n\\\"\");\n  });\n  transpile.comment = (function transpile$comment$(node) {\n    /* transpile.comment /Users/jbr/code/sibilant/src/transpiler.sibilant:173:0 */\n  \n    return null;\n  });\n  var docs = sibilant.docs = {\n    definitions: [],\n    undocumented: {  }\n  };\n  docs.record = (function docs$record$(type, namespace, name, node) {\n    /* docs.record /Users/jbr/code/sibilant/src/docs.sibilant:4:0 */\n  \n    var doc = docs.lastDoc;\n    (function() {\n      if (typeof doc !== \"undefined\") {\n        delete sibilant.docs.undocumented[name];\n        return sibilant.docs.definitions.push(mergeInto(doc, {\n          name: name,\n          type: type,\n          namespace: namespace,\n          definition: node\n        }));\n      } else {\n        return sibilant.docs.undocumented[name] = true;\n      }\n    }).call(this);\n    return delete sibilant.docs.lastDoc;\n  });\n  docs.tags = (function docs$tags$() {\n    /* docs.tags /Users/jbr/code/sibilant/src/docs.sibilant:16:0 */\n  \n    var tags = flatten(pluck(docs.definitions, \"tags\")),\n        counts = {  };\n    tags.forEach((function(tag) {\n      /* /Users/jbr/code/sibilant/src/docs.sibilant:19:5 */\n    \n      return counts[tag] = ((counts[tag] || 0) + 1);\n    }));\n    return counts;\n  });\n  docs.text = (function docs$text$() {\n    /* docs.text /Users/jbr/code/sibilant/src/docs.sibilant:27:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* /Users/jbr/code/sibilant/src/docs.sibilant:29:15 */\n    \n      return (\"name: \" + definition.type + \" \" + definition.namespace + \"/\" + prettify(definition.name) + \"\\n\" + \"description: \" + definition.docString + \"\\n\" + (function() {\n        if (definition.references) {\n          return (\"references:\\n  \" + (definition.references.map((function() {\n            /* /Users/jbr/code/sibilant/src/docs.sibilant:35:51 */\n          \n            return eval(outputFormatter(transpile(arguments[0])));\n          })).join(\"\\n  \") + \"\\n\"));\n        } else {\n          return \"\";\n        }\n      }).call(this) + (function() {\n        if (definition.tags) {\n          return (\"tags: \" + definition.tags.join(\", \") + \"\\n\");\n        } else {\n          return \"\";\n        }\n      }).call(this) + \"arguments: \" + prettify(definition.definition.contents[2]) + \"\\n\" + \"examples: \\n\" + (definition.examples || []).map((function() {\n        /* /Users/jbr/code/sibilant/src/docs.sibilant:46:43 */\n      \n        return (prettify(arguments[0], true) + \"\\n\" + outputFormatter(transpile(arguments[0])));\n      })).join(\"\\n\\n\") + \"\\n\\n\");\n    })).join(\"\");\n  });\n  docs.textNoColor = (function docs$textNoColor$() {\n    /* docs.text-no-color /Users/jbr/code/sibilant/src/docs.sibilant:53:0 */\n  \n    var stripAnsi = require(\"strip-ansi\");\n    return stripAnsi(docs.text());\n  });\n  docs.json = (function docs$json$() {\n    /* docs.json /Users/jbr/code/sibilant/src/docs.sibilant:57:0 */\n  \n    return JSON.stringify(docs.data());\n  });\n  docs.data = (function docs$data$() {\n    /* docs.data /Users/jbr/code/sibilant/src/docs.sibilant:60:0 */\n  \n    return docs.definitions.map((function(definition) {\n      /* /Users/jbr/code/sibilant/src/docs.sibilant:62:6 */\n    \n      return {\n        name: prettify(definition.name, false),\n        namespace: definition.namespace,\n        type: definition.type,\n        description: definition.docString,\n        references: (function() {\n          if (definition.references) {\n            return definition.references.map((function() {\n              /* /Users/jbr/code/sibilant/src/docs.sibilant:68:52 */\n            \n              return arguments[0].token.slice(1, -1);\n            }));\n          } else {\n            return [];\n          }\n        }).call(this),\n        arguments: definition.definition.contents[2].contents.map((function() {\n          /* /Users/jbr/code/sibilant/src/docs.sibilant:73:30 */\n        \n          return prettify(arguments[0], false);\n        })),\n        definition: prettify(definition.definition, false),\n        examples: (definition.examples || []).map((function() {\n          /* /Users/jbr/code/sibilant/src/docs.sibilant:76:29 */\n        \n          return {\n            javascript: outputFormatter(transpile(arguments[0])),\n            sibilant: prettify(arguments[0], false)\n          };\n        })),\n        tags: definition.tags\n      };\n    }));\n  });\n  var sibilize = (function sibilize$(input) {\n    /* sibilize /Users/jbr/code/sibilant/src/require-and-include.sibilant:1:0 */\n  \n    sibilant.initialize();\n    var result = outputFormatter(transpile(restructure(parse(input))));\n    return result;\n  });\n  var sourcemap = (function sourcemap$(input) {\n    /* sourcemap /Users/jbr/code/sibilant/src/require-and-include.sibilant:10:0 */\n  \n    sibilant.initialize();\n    return sourcemapper(transpile(restructure(parse(input))));\n  });\n  sibilant.sibilize = sibilize;\n  sibilant.version = (function sibilant$version$() {\n    /* sibilant.version /Users/jbr/code/sibilant/src/require-and-include.sibilant:16:0 */\n  \n    return sibilant.packageInfo().version;\n  });\n  sibilant.stripShebang = (function sibilant$stripShebang$(data) {\n    /* sibilant.strip-shebang /Users/jbr/code/sibilant/src/require-and-include.sibilant:19:0 */\n  \n    return data.replace((new RegExp(\"^#!.*\\\\n\", undefined)), \"\\n\");\n  });\n  sibilant.file = \"eval.sibilant\";\n  var withDirAndFile = (function withDirAndFile$(dir, file, fn) {\n    /* with-dir-and-file /Users/jbr/code/sibilant/src/require-and-include.sibilant:24:0 */\n  \n    var before = {\n      dir: sibilant.dir,\n      file: sibilant.file\n    };\n    sibilant.dir = dir;\n    sibilant.file = file;\n    var retval = fn();\n    sibilant.dir = before.dir;\n    sibilant.file = before.file;\n    return retval;\n  });\n  sibilant.sourceCache = {  };\n  sibilant.sibilizeFile = (function sibilant$sibilizeFile$(fileName) {\n    /* sibilant.sibilize-file /Users/jbr/code/sibilant/src/require-and-include.sibilant:41:0 */\n  \n    return outputFormatter(sibilant.transpileFile(fileName));\n  });\n  sibilant.sibilizeJson = (function sibilant$sibilizeJson$(fileName) {\n    /* sibilant.sibilize-json /Users/jbr/code/sibilant/src/require-and-include.sibilant:46:0 */\n  \n    sibilant.initialize();\n    var before = sibilant.quoteHashKeys;\n    sibilant.quoteHashKeys = true;\n    var content = sibilant.sibilizeFile(fileName);\n    sibilant.quoteHashKeys = before;\n    return content;\n  });\n  var package = {\n    name: \"sibilant\",\n    version: \"0.4.0\",\n    keywords: [ \"lisp\", \"javascript\", \"language\" ],\n    description: \"javascript with a lisp\",\n    contributors: [ \"Jacob Rothstein <hi@jbr.me> (http://jbr.me)\", \"Matthew Phillips (http://www.matthewphillips.info/)\", \"Yuest Wang (http://yue.st/)\", \"Lyndon Tremblay (http://www.hoovy.org)\", \"David Sargeant (https://github.com/dubiousdavid)\" ],\n    repository: {\n      type: \"git\",\n      url: \"http://github.com/jbr/sibilant.git\"\n    },\n    bugs: {\n      mail: \"sibilant@librelist.com\",\n      url: \"http://github.com/jbr/sibilant/issues\"\n    },\n    bin: { sibilant: \"./bin/sibilant\" },\n    main: \"./lib/sibilant.js\",\n    license: \"MIT\",\n    devDependencies: {\n      stool: \">=0.0.7\",\n      diff: \">=2.2.1\",\n      colors: \">=1.1.2\",\n      cardinal: \">=0.6.0\"\n    },\n    dependencies: {\n      \"source-map\": \">=0.5.3\",\n      \"source-map-support\": \">=0.3.3\"\n    },\n    scripts: { test: \"bin/sibilant -x stool.sibilant -- test\" }\n  };\n  sibilant.packageInfo = (function sibilant$packageInfo$() {\n    /* sibilant.package-info /Users/jbr/code/sibilant/src/browser.sibilant:25:6 */\n  \n    return package;\n  });\n  sibilant.versionString = (function sibilant$versionString$() {\n    /* sibilant.version-string /Users/jbr/code/sibilant/src/browser.sibilant:27:6 */\n  \n    return (package.name + \" browser version \" + package.version);\n  });\n  sibilant.dir = \"browser\";\n  sibilant.initialize = (function sibilant$initialize$() {\n    /* sibilant.initialize /Users/jbr/code/sibilant/src/browser.sibilant:32:6 */\n  \n    return false;\n  });\n  var evalCode = (function evalCode$(js) {\n    /* eval-code /Users/jbr/code/sibilant/src/browser.sibilant:33:13 */\n  \n    return (new Function(js))();\n  });\n  sibilant.include = (function sibilant$include$(url) {\n    /* sibilant.include /Users/jbr/code/sibilant/src/browser.sibilant:36:6 */\n  \n    return $.get(url).done((function() {\n      /* /Users/jbr/code/sibilant/src/browser.sibilant:37:32 */\n    \n      return evalCode(sibilize(arguments[0]));\n    }));\n  });\n  (function() {\n    if (typeof $ === \"function\") {\n      return $((function() {\n        /* /Users/jbr/code/sibilant/src/browser.sibilant:40:15 */\n      \n        return map($.makeArray($(\"script[type=\\\"application/sibilant\\\"][src]\").map((function() {\n          /* /Users/jbr/code/sibilant/src/browser.sibilant:43:26 */\n        \n          return this.src;\n        }))), sibilant.include);\n      }));\n    }\n  }).call(this);\n  return sibilant;\n}).call(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/sibilant/lib/browser.js\n ** module id = 558\n ** module chunks = 1\n **/","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/strip-ansi/index.js\n ** module id = 559\n ** module chunks = 1\n **/","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ansi-regex/index.js\n ** module id = 560\n ** module chunks = 1\n **/"],"sourceRoot":""}